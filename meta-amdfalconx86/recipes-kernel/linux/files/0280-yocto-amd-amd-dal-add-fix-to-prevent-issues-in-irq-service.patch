From 91903fe82ac259a7eb1fd9623f78a3803aa2ef97 Mon Sep 17 00:00:00 2001
From: Mykola Lysenko <mykola.lysenko@amd.com>
Date: Thu, 27 Aug 2015 13:08:02 +0800
Subject: [PATCH 397/401] amd/dal: add fix to prevent issues in irq service

Signed-off-by: Mykola Lysenko <mykola.lysenko@amd.com>
Reviewed-by: Jordan Lazare <jordan.lazare@amd.com>
Reviewed-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Sanjay R Mehta <sanju.mehta@amd.com>
---
 drivers/gpu/drm/amd/dal/basics/logger.c            |   1 +
 drivers/gpu/drm/amd/dal/include/irq_types.h        |   2 +-
 drivers/gpu/drm/amd/dal/include/logger_types.h     |   2 +-
 .../drm/amd/dal/irq/dce110/irq_service_dce110.c    | 126 ++++++++++++++++++++-
 drivers/gpu/drm/amd/dal/irq/irq_service.c          |  26 +++++
 5 files changed, 149 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/basics/logger.c b/drivers/gpu/drm/amd/dal/basics/logger.c
index 7df6c40..2aefe8f 100644
--- a/drivers/gpu/drm/amd/dal/basics/logger.c
+++ b/drivers/gpu/drm/amd/dal/basics/logger.c
@@ -56,6 +56,7 @@ static const struct log_minor_info component_minor_info_tbl[] = {
 	{LOG_MINOR_COMPONENT_CONTROLLER, "Cntrlr"},
 	{LOG_MINOR_COMPONENT_ISR, "ISR"},
 	{LOG_MINOR_COMPONENT_BIOS, "BIOS"},
+	{LOG_MINOR_COMPONENT_IRQ_SERVICE, "IRQ SERVICE"}
 };
 
 static const struct log_minor_info hw_trace_minor_info_tbl[] = {
diff --git a/drivers/gpu/drm/amd/dal/include/irq_types.h b/drivers/gpu/drm/amd/dal/include/irq_types.h
index 7987388..f615fed 100644
--- a/drivers/gpu/drm/amd/dal/include/irq_types.h
+++ b/drivers/gpu/drm/amd/dal/include/irq_types.h
@@ -135,7 +135,7 @@ enum dal_irq_source {
 	DAL_IRQ_SOURCE_DMCU_SCP,
 	DAL_IRQ_SOURCE_VBIOS_SW,
 
-	DAL_IRQ_SOURCES_NUMBER = DAL_IRQ_SOURCE_VBIOS_SW
+	DAL_IRQ_SOURCES_NUMBER
 };
 
 #define DAL_VALID_IRQ_SRC_NUM(src) \
diff --git a/drivers/gpu/drm/amd/dal/include/logger_types.h b/drivers/gpu/drm/amd/dal/include/logger_types.h
index e290bcb..006e378 100644
--- a/drivers/gpu/drm/amd/dal/include/logger_types.h
+++ b/drivers/gpu/drm/amd/dal/include/logger_types.h
@@ -102,7 +102,7 @@ enum log_minor {
 	LOG_MINOR_COMPONENT_CONTROLLER,
 	LOG_MINOR_COMPONENT_ISR,
 	LOG_MINOR_COMPONENT_BIOS,
-
+	LOG_MINOR_COMPONENT_IRQ_SERVICE,
 
 /**
 * @brief define minor category for LogMajor_HardwareTrace
diff --git a/drivers/gpu/drm/amd/dal/irq/dce110/irq_service_dce110.c b/drivers/gpu/drm/amd/dal/irq/dce110/irq_service_dce110.c
index 5154222..ef627a8 100644
--- a/drivers/gpu/drm/amd/dal/irq/dce110/irq_service_dce110.c
+++ b/drivers/gpu/drm/amd/dal/irq/dce110/irq_service_dce110.c
@@ -25,6 +25,8 @@
 
 #include "dal_services.h"
 
+#include "include/logger_interface.h"
+
 #include "irq_service_dce110.h"
 
 #include "dce/dce_11_0_d.h"
@@ -137,8 +139,61 @@ static const struct irq_source_info_funcs vblank_irq_info_funcs = {
 		.funcs = &vblank_irq_info_funcs\
 	}
 
+#define dummy_irq_entry() \
+	{\
+		.funcs = &dummy_irq_info_funcs\
+	}
+
+#define i2c_int_entry(reg_num) \
+	[DAL_IRQ_SOURCE_I2C_DDC ## reg_num] = dummy_irq_entry()
+
+#define azalia_int_entry(reg_num) \
+	[DAL_IRQ_SOURCE_AZALIA ## reg_num] = dummy_irq_entry()
+
+#define dp_sink_int_entry(reg_num) \
+	[DAL_IRQ_SOURCE_DPSINK ## reg_num] = dummy_irq_entry()
+
+#define gpio_pad_int_entry(reg_num) \
+	[DAL_IRQ_SOURCE_GPIOPAD ## reg_num] = dummy_irq_entry()
+
+#define dc_underflow_int_entry(reg_num) \
+	[DAL_IRQ_SOURCE_DC ## reg_num ## UNDERFLOW] = dummy_irq_entry()
+
+static bool dummy_set(
+	struct irq_service *irq_service,
+	const struct irq_source_info *info,
+	bool enable)
+{
+	dal_logger_write(
+		irq_service->ctx->logger,
+		LOG_MAJOR_ERROR,
+		LOG_MINOR_COMPONENT_IRQ_SERVICE,
+		"%s: called for non-implemented irq source\n",
+		__func__);
+	return false;
+}
+
+static bool dummy_ack(
+	struct irq_service *irq_service,
+	const struct irq_source_info *info)
+{
+	dal_logger_write(
+		irq_service->ctx->logger,
+		LOG_MAJOR_ERROR,
+		LOG_MINOR_COMPONENT_IRQ_SERVICE,
+		"%s: called for non-implemented irq source\n",
+		__func__);
+	return false;
+}
+
+static const struct irq_source_info_funcs dummy_irq_info_funcs = {
+	.set = dummy_set,
+	.ack = dummy_ack
+};
+
 static const struct irq_source_info
 irq_source_info_dce110[DAL_IRQ_SOURCES_NUMBER] = {
+	[DAL_IRQ_SOURCE_INVALID] = dummy_irq_entry(),
 	hpd_int_entry(0),
 	hpd_int_entry(1),
 	hpd_int_entry(2),
@@ -151,18 +206,77 @@ irq_source_info_dce110[DAL_IRQ_SOURCES_NUMBER] = {
 	hpd_rx_int_entry(3),
 	hpd_rx_int_entry(4),
 	hpd_rx_int_entry(5),
-	pflip_int_entry(0),
-	pflip_int_entry(1),
-	pflip_int_entry(2),
-	pflip_int_entry(3),
-	pflip_int_entry(4),
-	pflip_int_entry(5),
+	i2c_int_entry(1),
+	i2c_int_entry(2),
+	i2c_int_entry(3),
+	i2c_int_entry(4),
+	i2c_int_entry(5),
+	i2c_int_entry(6),
+	azalia_int_entry(0),
+	azalia_int_entry(1),
+	azalia_int_entry(2),
+	azalia_int_entry(3),
+	azalia_int_entry(4),
+	azalia_int_entry(5),
+	dp_sink_int_entry(1),
+	dp_sink_int_entry(2),
+	dp_sink_int_entry(3),
+	dp_sink_int_entry(4),
+	dp_sink_int_entry(5),
+	dp_sink_int_entry(6),
 	vblank_int_entry(0),
 	vblank_int_entry(1),
 	vblank_int_entry(2),
 	vblank_int_entry(3),
 	vblank_int_entry(4),
 	vblank_int_entry(5),
+	[DAL_IRQ_SOURCE_TIMER] = dummy_irq_entry(),
+	pflip_int_entry(0),
+	pflip_int_entry(1),
+	pflip_int_entry(2),
+	pflip_int_entry(3),
+	pflip_int_entry(4),
+	pflip_int_entry(5),
+	[DAL_IRQ_SOURCE_PFLIP_UNDERLAY0] = dummy_irq_entry(),
+	gpio_pad_int_entry(0),
+	gpio_pad_int_entry(1),
+	gpio_pad_int_entry(2),
+	gpio_pad_int_entry(3),
+	gpio_pad_int_entry(4),
+	gpio_pad_int_entry(5),
+	gpio_pad_int_entry(6),
+	gpio_pad_int_entry(7),
+	gpio_pad_int_entry(8),
+	gpio_pad_int_entry(9),
+	gpio_pad_int_entry(10),
+	gpio_pad_int_entry(11),
+	gpio_pad_int_entry(12),
+	gpio_pad_int_entry(13),
+	gpio_pad_int_entry(14),
+	gpio_pad_int_entry(15),
+	gpio_pad_int_entry(16),
+	gpio_pad_int_entry(17),
+	gpio_pad_int_entry(18),
+	gpio_pad_int_entry(19),
+	gpio_pad_int_entry(20),
+	gpio_pad_int_entry(21),
+	gpio_pad_int_entry(22),
+	gpio_pad_int_entry(23),
+	gpio_pad_int_entry(24),
+	gpio_pad_int_entry(25),
+	gpio_pad_int_entry(26),
+	gpio_pad_int_entry(27),
+	gpio_pad_int_entry(28),
+	gpio_pad_int_entry(29),
+	gpio_pad_int_entry(30),
+	dc_underflow_int_entry(1),
+	dc_underflow_int_entry(2),
+	dc_underflow_int_entry(3),
+	dc_underflow_int_entry(4),
+	dc_underflow_int_entry(5),
+	dc_underflow_int_entry(6),
+	[DAL_IRQ_SOURCE_DMCU_SCP] = dummy_irq_entry(),
+	[DAL_IRQ_SOURCE_VBIOS_SW] = dummy_irq_entry()
 };
 
 static enum dal_irq_source to_dal_irq_source(
diff --git a/drivers/gpu/drm/amd/dal/irq/irq_service.c b/drivers/gpu/drm/amd/dal/irq/irq_service.c
index 2ef4c9b..48fc77a 100644
--- a/drivers/gpu/drm/amd/dal/irq/irq_service.c
+++ b/drivers/gpu/drm/amd/dal/irq/irq_service.c
@@ -26,6 +26,7 @@
 #include "dal_services.h"
 
 #include "include/irq_service_interface.h"
+#include "include/logger_interface.h"
 
 #if defined(CONFIG_DRM_AMD_DAL_DCE11_0)
 #include "dce110/irq_service_dce110.h"
@@ -74,6 +75,9 @@ const struct irq_source_info *find_irq_source_info(
 	struct irq_service *irq_service,
 	enum dal_irq_source source)
 {
+	if (source > DAL_IRQ_SOURCES_NUMBER || source < DAL_IRQ_SOURCE_INVALID)
+		return NULL;
+
 	return &irq_service->info[source];
 }
 
@@ -98,6 +102,17 @@ bool dal_irq_service_set(
 	const struct irq_source_info *info =
 		find_irq_source_info(irq_service, source);
 
+	if (!info) {
+		dal_logger_write(
+			irq_service->ctx->logger,
+			LOG_MAJOR_ERROR,
+			LOG_MINOR_COMPONENT_IRQ_SERVICE,
+			"%s: cannot find irq info table entry for %d\n",
+			__func__,
+			source);
+		return false;
+	}
+
 	dal_irq_service_ack(irq_service, source);
 
 	if (info->funcs->set)
@@ -127,6 +142,17 @@ bool dal_irq_service_ack(
 	const struct irq_source_info *info =
 		find_irq_source_info(irq_service, source);
 
+	if (!info) {
+		dal_logger_write(
+			irq_service->ctx->logger,
+			LOG_MAJOR_ERROR,
+			LOG_MINOR_COMPONENT_IRQ_SERVICE,
+			"%s: cannot find irq info table entry for %d\n",
+			__func__,
+			source);
+		return false;
+	}
+
 	if (info->funcs->ack)
 		return info->funcs->ack(irq_service, info);
 
-- 
1.9.1

