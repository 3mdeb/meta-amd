From 26c29ed9dea230c28a7dd4638ca062d66ca7aeb8 Mon Sep 17 00:00:00 2001
From: Jordan Lazare <Jordan.Lazare@amd.com>
Date: Fri, 22 Jan 2016 15:27:36 -0500
Subject: [PATCH 0726/1110] drm/amd/dal: Remove display_service_types

Signed-off-by: Jordan Lazare <Jordan.Lazare@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 .../amd/dal/include/display_service_interface.h    | 165 --------------------
 .../drm/amd/dal/include/display_service_types.h    | 167 ---------------------
 2 files changed, 332 deletions(-)
 delete mode 100644 drivers/gpu/drm/amd/dal/include/display_service_interface.h
 delete mode 100644 drivers/gpu/drm/amd/dal/include/display_service_types.h

diff --git a/drivers/gpu/drm/amd/dal/include/display_service_interface.h b/drivers/gpu/drm/amd/dal/include/display_service_interface.h
deleted file mode 100644
index b602bca..0000000
--- a/drivers/gpu/drm/amd/dal/include/display_service_interface.h
+++ /dev/null
@@ -1,165 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DISPLAY_SERVICE_INTERFACE_H__
-#define __DISPLAY_SERVICE_INTERFACE_H__
-
-#include "include/display_service_types.h"
-#include "include/display_path_types.h"
-#include "include/grph_object_ctrl_defs.h"
-
-struct display_service;
-struct ds_overlay;
-struct ds_dispatch;
-struct ds_synchronization;
-struct path_mode_set;
-
-struct display_service *dal_display_service_create(
-	struct ds_init_data *data);
-
-void dal_display_service_destroy(
-	struct display_service **ds);
-
-struct ds_dispatch *dal_display_service_get_adjustment_interface(
-	struct display_service *ds);
-
-struct ds_overlay *dal_display_service_get_overlay_interface(
-	struct display_service *ds);
-
-struct ds_dispatch *dal_display_service_get_set_mode_interface(
-	struct display_service *ds);
-
-struct ds_dispatch *dal_display_service_get_reset_mode_interface(
-	struct display_service *ds);
-
-struct ds_synchronization *dal_display_service_get_synchronization_interface(
-	struct display_service *ds);
-
-enum ds_return dal_display_service_notify_v_sync_int_state(
-	struct display_service *ds,
-	uint32_t display_index,
-	bool maintain_v_sync_phase);
-
-enum ds_return dal_display_service_target_power_control(
-	struct display_service *ds,
-	uint32_t display_index,
-	bool power_on);
-
-enum ds_return dal_display_service_power_down_active_hw(
-	struct display_service *ds,
-	enum dc_video_power_state state);
-
-enum ds_return dal_display_service_mem_request_control(
-	struct display_service *ds,
-	uint32_t display_index,
-	bool enable);
-
-enum ds_return dal_display_service_set_multimedia_pass_through_mode(
-	struct display_service *ds,
-	uint32_t display_index,
-	bool passThrough);
-
-enum ds_return dal_display_service_set_palette(
-	struct display_service *ds,
-	uint32_t display_index,
-	const struct ds_devclut *palette,
-	const uint32_t start,
-	const uint32_t length);
-
-enum ds_return dal_display_service_apply_pix_clk_range(
-	struct display_service *ds,
-	uint32_t display_index,
-	struct pixel_clock_safe_range *range);
-
-enum ds_return dal_display_service_get_safe_pix_clk(
-	struct display_service *ds,
-	uint32_t display_index,
-	uint32_t *pix_clk_khz);
-
-enum ds_return dal_display_service_apply_refreshrate_adjustment(
-	struct display_service *ds,
-	uint32_t display_index,
-	enum ds_refreshrate_adjust_action action,
-	struct ds_refreshrate *refreshrate);
-
-enum ds_return dal_display_service_pre_ddc(
-	struct display_service *ds,
-	uint32_t display_index);
-
-enum ds_return dal_display_service_post_ddc(
-	struct display_service *ds,
-	uint32_t display_index);
-
-enum ds_return dal_display_service_backlight_control(
-	struct display_service *ds,
-	uint32_t display_index,
-	bool enable);
-
-enum ds_return dal_display_service_get_backlight_user_level(
-	struct display_service *ds,
-	uint32_t display_index,
-	uint32_t *level);
-
-enum ds_return dal_display_service_get_backlight_effective_level(
-	struct display_service *ds,
-	uint32_t display_index,
-	uint32_t *level);
-
-enum ds_return dal_display_service_enable_hpd(
-	struct display_service *ds,
-	uint32_t display_index);
-
-enum ds_return dal_display_service_disable_hpd(
-	struct display_service *ds,
-	uint32_t display_index);
-
-enum ds_return dal_display_service_get_min_mem_channels(
-	struct display_service *ds,
-	const struct path_mode_set *path_mode_set,
-	uint32_t mem_channels_num,
-	uint32_t *min_mem_channels_num);
-
-enum ds_return dal_display_service_enable_advanced_request(
-	struct display_service *ds,
-	bool enable);
-
-/*Audio related*/
-enum ds_return dal_display_service_enable_audio_endpoint(
-	struct display_service *ds,
-	uint32_t display_index,
-	bool enable);
-
-enum ds_return dal_display_service_mute_audio_endpoint(
-	struct display_service *ds,
-	uint32_t display_index,
-	bool mute);
-
-bool dal_display_service_calc_view_port_for_wide_display(
-	struct display_service *ds,
-	uint32_t display_index,
-	const struct ds_view_port *set_view_port,
-	struct ds_get_view_port *get_view_port);
-
-#endif /* __DISPLAY_SERVICE_INTERFACE_H__ */
diff --git a/drivers/gpu/drm/amd/dal/include/display_service_types.h b/drivers/gpu/drm/amd/dal/include/display_service_types.h
deleted file mode 100644
index 4f27f59..0000000
--- a/drivers/gpu/drm/amd/dal/include/display_service_types.h
+++ /dev/null
@@ -1,167 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_DISPLAY_SERVICE_TYPES_H__
-#define __DAL_DISPLAY_SERVICE_TYPES_H__
-struct ds_dispatch {
-
-};
-
-struct ds_view_port_alignment {
-	uint8_t x_width_size_alignment;
-	uint8_t y_height_size_alignment;
-	uint8_t x_start_alignment;
-	uint8_t y_start_alignment;
-};
-
-struct hw_sequencer;
-struct topology_mgr;
-struct adapter_service;
-struct timing_service;
-
-struct ds_init_data {
-	struct dal_context *dal_context;
-	struct hw_sequencer *hwss;
-	struct topology_mgr *tm;
-	struct adapter_service *as;
-	struct timing_service *ts;
-	struct ds_view_port_alignment view_port_alignment;
-};
-
-enum ds_return {
-	DS_SUCCESS,
-	DS_SUCCESS_FALLBACK,
-	DS_ERROR,
-	DS_SET_MODE_REQUIRED,
-	DS_REBOOT_REQUIRED,
-	DS_OUT_OF_RANGE,
-	DS_RESOURCE_UNAVAILABLE,
-	DS_NOT_SUPPORTED
-};
-
-struct ds_devclut {
-	uint8_t red;
-	uint8_t green;
-	uint8_t blue;
-	uint8_t reserved;
-};
-
-enum ds_refreshrate_adjust_action {
-	DS_REFRESHRATE_ADJUST_ACTION_SET,
-	DS_REFRESHRATE_ADJUST_ACTION_RESET,
-	DS_REFRESHRATE_ADJUST_ACTION_UPDATE,
-};
-
-struct ds_refreshrate {
-	uint32_t numerator;
-	uint32_t denominator;
-};
-
-/*Contains delta in pixels between two active CRTC timings and relevant timing
-details. Delta will be positive if CRTC1 timing running before CRTC2 and
-negative otherwise (CRTC2 timing running before CRTC1)*/
-/*CRTC1 running before CRTC2 = CRTC1 pixel position in
-frame smaller then CRTC2 position*/
-struct ds_timings_delta_info {
-	int32_t delta_in_pixels;
-	uint32_t pix_clk_khz;
-	uint32_t h_total;
-	uint32_t v_total;
-};
-
-enum ds_audio_os_channel_name {
-	DS_AUDIO_OS_CHANNEL_L = 0,
-	DS_AUDIO_OS_CHANNEL_R = 1,
-	DS_AUDIO_OS_CHANNEL_C = 2,
-	DS_AUDIO_OS_CHANNEL_SUB = 3,
-	DS_AUDIO_OS_CHANNEL_RL = 4,
-	DS_AUDIO_OS_CHANNEL_RR = 5,
-	DS_AUDIO_OS_CHANNEL_SL = 6,
-	DS_AUDIO_OS_CHANNEL_SR = 7,
-	DS_AUDIO_OS_CHANNEL_SILENT = 8,
-	DS_AUDIO_OS_CHANNEL_NO_ASSOCIATION = 15
-};
-
-enum ds_audio_azalia_channel_name {
-	DS_AUDIO_AZALIA_CHANNEL_FL = 0,
-	DS_AUDIO_AZALIA_CHANNEL_FR = 1,
-	DS_AUDIO_AZALIA_CHANNEL_FC = 2,
-	DS_AUDIO_AZALIA_CHANNEL_SUB = 3,
-	DS_AUDIO_AZALIA_CHANNEL_SL = 4,
-	DS_AUDIO_AZALIA_CHANNEL_SR = 5,
-	DS_AUDIO_AZALIA_CHANNEL_BL = 6,
-	DS_AUDIO_AZALIA_CHANNEL_BR = 7,
-	DS_AUDIO_AZALIA_CHANNEL_SILENT = 8,
-	DS_AUDIO_AZALIA_CHANNEL_NO_ASSOCIATION = 15
-};
-
-enum ds_audio_channel_format {
-	DS_AUDIO_CHANNEL_FORMAT_2P0 = 0,
-	DS_AUDIO_CHANNEL_FORMAT_2P1,
-	DS_AUDIO_CHANNEL_FORMAT_5P1,
-	DS_AUDIO_CHANNEL_FORMAT_7P1
-};
-
-/*Used for get/set Mirabilis*/
-enum ds_mirabilis_control_option {
-	DS_MIRABILIS_UNINITIALIZE = 0,
-	DS_MIRABILIS_DISABLE,
-	DS_MIRABILIS_ENABLE,
-	DS_MIRABILIS_SAVE_PROFILE
-};
-
-struct ds_disp_identifier {
-	uint32_t display_index;
-	uint32_t manufacture_id;
-	uint32_t product_id;
-	uint32_t serial_no;
-};
-
-struct ds_view_port {
-	uint32_t x_start;
-	uint32_t y_start;
-	uint32_t width;
-	uint32_t height;
-	uint32_t controller;
-};
-
-#define DS_MAX_NUM_VIEW_PORTS 2
-struct ds_get_view_port {
-	uint32_t num_of_view_ports;
-	struct ds_view_port view_ports[DS_MAX_NUM_VIEW_PORTS];
-};
-
-struct ranged_timing_preference_flags {
-	union {
-		struct {
-			uint32_t prefer_enable_drr:1;
-			uint32_t force_disable_drr:1;
-
-		} bits;
-		uint32_t u32all;
-	};
-};
-
-#endif /* __DAL_DISPLAY_SERVICE_TYPE_H__ */
-- 
2.7.4

