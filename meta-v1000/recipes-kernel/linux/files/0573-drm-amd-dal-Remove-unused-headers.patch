From a92205c17ffa0295bc27126b4b92b7f5fdf0eef3 Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Tue, 28 Jun 2016 15:34:21 -0400
Subject: [PATCH 0573/1722] drm/amd/dal: Remove unused headers

Change-Id: Icdcb8a2236cdd2a03da5295c6f20465e17b116fd
Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 .../gpu/drm/amd/dal/dc/adapter/adapter_service.c   |   2 -
 drivers/gpu/drm/amd/dal/dc/calcs/bw_fixed.c        |   5 +-
 drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c  |   1 +
 drivers/gpu/drm/amd/dal/dc/dc.h                    |   2 -
 drivers/gpu/drm/amd/dal/include/dmcu_types.h       | 139 -----------
 .../gpu/drm/amd/dal/include/encoder_interface.h    | 262 ---------------------
 .../drm/amd/dal/include/hw_sequencer_interface.h   | 227 ------------------
 .../drm/amd/dal/include/link_service_interface.h   |  58 -----
 8 files changed, 4 insertions(+), 692 deletions(-)
 delete mode 100644 drivers/gpu/drm/amd/dal/include/dmcu_types.h
 delete mode 100644 drivers/gpu/drm/amd/dal/include/encoder_interface.h
 delete mode 100644 drivers/gpu/drm/amd/dal/include/hw_sequencer_interface.h
 delete mode 100644 drivers/gpu/drm/amd/dal/include/link_service_interface.h

diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
index 3645aff..06a4c2b 100644
--- a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
+++ b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
@@ -820,8 +820,6 @@ static bool adapter_service_construct(
 		goto failed_to_create_hw_ctx;
 	}
 
-	/* Avoid wireless encoder creation in upstream branch. */
-
 	/* Integrated info is not provided on discrete ASIC. NULL is allowed */
 	as->integrated_info = dc_bios_create_integrated_info(dcb);
 
diff --git a/drivers/gpu/drm/amd/dal/dc/calcs/bw_fixed.c b/drivers/gpu/drm/amd/dal/dc/calcs/bw_fixed.c
index edb109e..fbf2adc 100644
--- a/drivers/gpu/drm/amd/dal/dc/calcs/bw_fixed.c
+++ b/drivers/gpu/drm/amd/dal/dc/calcs/bw_fixed.c
@@ -93,8 +93,8 @@ struct bw_fixed bw_frc_to_fixed(int64_t numerator, int64_t denominator)
 
 	ASSERT(denominator != 0);
 
-	arg1_value = (uint64_t)abs_i64(numerator);
-	arg2_value = (uint64_t)abs_i64(denominator);
+	arg1_value = abs_i64(numerator);
+	arg2_value = abs_i64(denominator);
 	res_value = div64_u64_rem(arg1_value, arg2_value, &remainder);
 
 	ASSERT(res_value <= MAX_I32);
@@ -149,6 +149,7 @@ struct bw_fixed bw_floor2(
 {
 	struct bw_fixed result;
 	int64_t multiplicand;
+
 	multiplicand = div64_s64(arg.value, abs_i64(significance.value));
 	result.value = abs_i64(significance.value) * multiplicand;
 	ASSERT(abs_i64(result.value) <= abs_i64(arg.value));
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c
index f9dd0d8..fb4dce3 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c
@@ -22,6 +22,7 @@
  * Authors: AMD
  *
  */
+
 #include "dm_services.h"
 #include "core_types.h"
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dc.h b/drivers/gpu/drm/amd/dal/dc/dc.h
index 61d966d..f86754d 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc.h
+++ b/drivers/gpu/drm/amd/dal/dc/dc.h
@@ -27,11 +27,9 @@
 #define DC_INTERFACE_H_
 
 #include "dc_types.h"
-#include "dal_types.h"
 #include "grph_object_defs.h"
 #include "logger_types.h"
 #include "gpio_types.h"
-#include "link_service_types.h"
 
 #define MAX_TARGETS 6
 #define MAX_SURFACES 6
diff --git a/drivers/gpu/drm/amd/dal/include/dmcu_types.h b/drivers/gpu/drm/amd/dal/include/dmcu_types.h
deleted file mode 100644
index b74bb5b..0000000
--- a/drivers/gpu/drm/amd/dal/include/dmcu_types.h
+++ /dev/null
@@ -1,139 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_DMCU_TYPES_H__
-#define __DAL_DMCU_TYPES_H__
-
-/* Forward declaration */
-struct dmcu;
-
-/* Required information for creation and initialization of a controller */
-struct dmcu_init_data {
-	struct dal_context *dal_context;
-	struct adapter_service *as;
-	uint32_t max_engine_clock_in_khz;
-};
-
-/* Interface structure defines */
-
-enum dmcu_action {
-	DMCU_ACTION_PSR_ENABLE,
-	DMCU_ACTION_PSR_EXIT,
-	DMCU_ACTION_PSR_RFB_UPDATE,
-	DMCU_ACTION_PSR_SET,
-	DMCU_ACTION_PSR_CLEAR_COUNT,
-	DMCU_ACTION_PSR_COUNT_REQUEST,
-	DMCU_ACTION_PSR_STATE_REQUEST,
-	DMCU_ACTION_PSR_SET_LEVEL,
-	DMCU_ACTION_PSR_ADVANCE_STATE,
-	DMCU_ACTION_PSR_SET_WAITLOOP
-};
-
-enum dmcu_output {
-	DMCU_OUTPUT_PSR_ACK,
-	DMCU_OUTPUT_PSR_NACK,
-	DMCU_OUTPUT_PSR_AUX_ERR,
-	DMCU_OUTPUT_PSR_COUNT_STATUS,
-	DMCU_OUTPUT_PSR_STATE_STATUS,
-	DMCU_OUTPUT_PSR_RFB_UPDATE_ERR,
-	DMCU_OUTPUT_PSR_ERR,
-	DMCU_OUTPUT_PSR_GET_REPLY,
-	DMCU_OUTPUT_PSR_ENTRY_ERROR,
-	DMCU_OUTPUT_PSR_LT_ERROR,
-	DMCU_OUTPUT_PSR_FORCE_SR_ERROR,
-	DMCU_OUTPUT_PSR_SDP_SEND_TIMEOUT
-};
-
-/* PSR states, based similarly on states defined in eDP specification. */
-enum psr_state {
-	STATE0,		/* PSR is disabled */
-	STATE1,		/* PSR is enabled, but inactive */
-	STATE1A,
-	STATE2,		/* PSR is transitioning to active state */
-	STATE2A,
-	STATE3,		/* PSR is active; Display is in self refresh */
-	STATE3INIT,
-	STATE4,		/* RFB single frame update */
-	STATE4A,
-	STATE4B,
-	STATE4C,
-	STATE4D,
-	STATE5,		/* Exiting from PSR active state */
-	STATE5A,
-	STATE5B,
-	STATE5C
-};
-
-enum phy_type {
-	PHY_TYPE_UNKNOWN = 1,
-	PHY_TYPE_PCIE_PHY = 2,
-	PHY_TYPE_UNIPHY = 3,
-};
-
-struct dmcu_context {
-	enum channel_id channel;
-	enum transmitter transmitter_id;
-	enum engine_id engine_id;
-	enum controller_id controller_id;
-	enum phy_type phy_type;
-	enum physical_phy_id smu_physical_phy_id;
-
-	/* Vertical total pixels from crtc timing.
-	 * This is used for static screen detection.
-	 * ie. If we want to detect half a frame,
-	 * we use this to determine the hyst lines.*/
-	uint32_t crtc_timing_vertical_total;
-
-	/* PSR supported from panel capabilities
-	 * and current display configuration */
-	bool psr_supported_display_config;
-
-	/* Whether fast link training is supported by the panel */
-	bool psr_exit_link_training_required;
-
-	/* If RFB setup time is greater than the total VBLANK time, it is not
-	 * possible for the sink to capture the video frame in the same frame
-	 * the SDP is sent. In this case, the frame capture indication bit
-	 * should be set and an extra static frame should be transmitted to
-	 * the sink */
-	bool psr_frame_capture_indication_required;
-
-	/* Set the last possible line SDP may be transmitted without violating
-	 * the RFB setup time */
-	bool sdp_transmit_line_num_deadline;
-
-	/* The VSync rate in Hz used to calculate the step size
-	 * for smooth brightness feature */
-	uint32_t vsync_rate_hz;
-};
-
-enum varibright_command {
-	VARIBRIGHT_CMD_SET_VB_LEVEL = 0,
-	VARIBRIGHT_CMD_USER_ENABLE,
-	VARIBRIGHT_CMD_POST_DISPLAY_CONFIG,
-	VARIBRIGHT_CMD_UNKNOWN
-};
-
-#endif /* __DAL_DMCU_TYPES_H__ */
diff --git a/drivers/gpu/drm/amd/dal/include/encoder_interface.h b/drivers/gpu/drm/amd/dal/include/encoder_interface.h
deleted file mode 100644
index 311ccf8..0000000
--- a/drivers/gpu/drm/amd/dal/include/encoder_interface.h
+++ /dev/null
@@ -1,262 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of enc software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and enc permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_ENCODER_INTERFACE_H__
-#define __DAL_ENCODER_INTERFACE_H__
-
-#include "encoder_types.h"
-#include "adapter_service_interface.h"
-#include "fixed31_32.h"
-
-enum encoder_result {
-	ENCODER_RESULT_OK,
-	ENCODER_RESULT_ERROR,
-	ENCODER_RESULT_NOBANDWIDTH,
-	ENCODER_RESULT_SINKCONNECTIVITYCHANGED,
-};
-
-struct encoder_init_data {
-	struct adapter_service *adapter_service;
-	enum channel_id channel;
-	struct graphics_object_id connector;
-	enum hpd_source_id hpd_source;
-	/* TODO: in DAL2, here was pointer to EventManagerInterface */
-	struct graphics_object_id encoder;
-	struct dc_context *ctx;
-};
-
-/* forward declaration */
-struct encoder;
-
-struct encoder *dal_encoder_create(
-	const struct encoder_init_data *init_data);
-
-/* access graphics object base */
-const struct graphics_object_id dal_encoder_get_graphics_object_id(
-	const struct encoder *enc);
-
-/*
- * Signal types support
- */
-uint32_t dal_encoder_enumerate_input_signals(
-	const struct encoder *enc);
-
-/*
- * Programming interface
- */
-/* perform power-up sequence (boot up, resume, recovery) */
-enum encoder_result dal_encoder_power_up(
-	struct encoder *enc,
-	const struct encoder_context *ctx);
-/* perform power-down (shut down, stand-by */
-enum encoder_result dal_encoder_power_down(
-	struct encoder *enc,
-	const struct encoder_output *output);
-/* setup encoder block (DIG, DVO, DAC), does not enables encoder */
-enum encoder_result dal_encoder_setup(
-	struct encoder *enc,
-	const struct encoder_output *output);
-/* activate transmitter,
- * do preparation before enables the actual stream output */
-enum encoder_result dal_encoder_pre_enable_output(
-	struct encoder *enc,
-	const struct encoder_pre_enable_output_param *param);
-/* activate transmitter, enables actual stream output */
-enum encoder_result dal_encoder_enable_output(
-	struct encoder *enc,
-	const struct encoder_output *output);
-/* deactivate transmitter, disables stream output */
-enum encoder_result dal_encoder_disable_output(
-	struct encoder *enc,
-	const struct encoder_output *output);
-/* output blank data,
- *prevents output of the actual surface data on active transmitter */
-enum encoder_result dal_encoder_blank(
-	struct encoder *enc,
-	const struct encoder_context *ctx);
-/* stop sending blank data,
- * output the actual surface data on active transmitter */
-enum encoder_result dal_encoder_unblank(
-	struct encoder *enc,
-	const struct encoder_unblank_param *param);
-/* setup stereo signal from given controller */
-enum encoder_result dal_encoder_setup_stereo(
-	struct encoder *enc,
-	const struct encoder_3d_setup *setup);
-/* enable HSync/VSync output from given controller */
-enum encoder_result dal_encoder_enable_sync_output(
-	struct encoder *enc,
-	enum sync_source src);
-/* disable HSync/VSync output */
-enum encoder_result dal_encoder_disable_sync_output(
-	struct encoder *enc);
-/* action of encoder before DDC transaction */
-enum encoder_result dal_encoder_pre_ddc(
-	struct encoder *enc,
-	const struct encoder_context *ctx);
-/* action of encoder after DDC transaction */
-enum encoder_result dal_encoder_post_ddc(
-	struct encoder *enc,
-	const struct encoder_context *ctx);
-/* CRT DDC EDID polling interrupt interface */
-enum encoder_result dal_encoder_update_implementation(
-	struct encoder *enc,
-	const struct encoder_context *ctx);
-/* set test pattern signal */
-enum encoder_result dal_encoder_set_dp_phy_pattern(
-	struct encoder *enc,
-	const struct encoder_set_dp_phy_pattern_param *param);
-
-/*
- * Information interface
- */
-/* check whether sink is present based on SENSE detection,
- * analog encoders will return true */
-bool dal_encoder_is_sink_present(
-	struct encoder *enc,
-	struct graphics_object_id downstream);
-/* detect load on the sink,
- * for analog signal,
- * load detection will be called for the specified signal */
-enum signal_type dal_encoder_detect_load(
-	struct encoder *enc,
-	const struct encoder_context *ctx);
-/* detect output sink type,
- * for digital perform sense detection,
- * for analog return encoder's signal type */
-enum signal_type dal_encoder_detect_sink(
-	struct encoder *enc,
-	struct graphics_object_id downstream);
-/* get transmitter id */
-enum transmitter dal_encoder_get_transmitter(
-	const struct encoder *enc);
-/*  */
-enum transmitter dal_encoder_get_paired_transmitter(
-	const struct encoder *enc);
-/*  */
-enum physical_phy_id dal_encoder_get_phy(
-	const struct encoder *enc);
-/*  */
-enum physical_phy_id dal_encoder_get_paired_phy(
-	const struct encoder *enc);
-/* reports if the encoder supports given link settings */
-bool dal_encoder_is_link_settings_supported(
-	struct encoder *enc,
-	const struct link_settings *link_settings);
-/* options and features supported by encoder */
-struct encoder_feature_support dal_encoder_get_supported_features(
-	const struct encoder *enc);
-/* reports list of supported stream engines */
-union supported_stream_engines dal_encoder_get_supported_stream_engines(
-	const struct encoder *enc);
-/* reports preferred stream engine */
-enum engine_id dal_encoder_get_preferred_stream_engine(
-	const struct encoder *enc);
-/* reports whether clock source can be used with enc encoder */
-bool dal_encoder_is_clock_source_supported(
-	const struct encoder *enc,
-	enum clock_source_id clock_source);
-/* check encoder capabilities to confirm
- * specified timing is in the encoder limits
- * when outputting certain signal */
-enum encoder_result dal_encoder_validate_output(
-	struct encoder *enc,
-	const struct encoder_output *output);
-/* retrieves sync source which outputs VSync signal from encoder */
-enum sync_source dal_encoder_get_vsync_output_source(
-	const struct encoder *enc);
-/*
- * Adjustments
- */
-/* update AVI info frame */
-void dal_encoder_update_info_frame(
-	struct encoder *enc,
-	const struct encoder_info_frame_param *param);
-/*  */
-void dal_encoder_stop_info_frame(
-	struct encoder *enc,
-	const struct encoder_context *ctx);
-/*  */
-enum encoder_result dal_encoder_set_lcd_backlight_level(
-	struct encoder *enc,
-	uint32_t level);
-/* backlight control interface */
-enum encoder_result dal_encoder_backlight_control(
-	struct encoder *enc,
-	bool enable);
-/*
- * DP MST programming
- */
-/* update payload slot allocation for each DP MST stream */
-enum encoder_result dal_encoder_update_mst_alloc_table(
-	struct encoder *enc,
-	const struct dp_mst_stream_allocation_table *table,
-	bool is_removal);
-/* enable virtual channel stream with throttled value X.Y */
-enum encoder_result dal_encoder_enable_stream(
-	struct encoder *enc,
-	enum engine_id engine,
-	struct fixed31_32 throttled_vcp_size);
-/* disable virtual channel stream */
-enum encoder_result dal_encoder_disable_stream(
-	struct encoder *enc,
-	enum engine_id engine);
-/*
- * Test harness
- */
-/* check whether Test Pattern enabled */
-bool dal_encoder_is_test_pattern_enabled(
-	struct encoder *enc,
-	enum engine_id engine);
-/* set lane parameters */
-enum encoder_result dal_encoder_set_lane_settings(
-	struct encoder *enc,
-	const struct encoder_context *ctx,
-	const struct link_training_settings *link_settings);
-/* get lane parameters */
-enum encoder_result dal_encoder_get_lane_settings(
-	struct encoder *enc,
-	const struct encoder_context *ctx,
-	struct link_training_settings *link_settings);
-/* enable master clock of HPD interrupt */
-void dal_encoder_enable_hpd(
-	struct encoder *enc,
-	const struct encoder_context *ctx);
-/* disable all HPD interrupts */
-void dal_encoder_disable_hpd(
-	struct encoder *enc,
-	const struct encoder_context *ctx);
-
-/* get current HW state - used for optimization code path only */
-enum clock_source_id dal_encoder_get_active_clock_source(
-	const struct encoder *enc);
-enum engine_id dal_encoder_get_active_engine(
-	const struct encoder *enc);
-
-/* destroy encoder instance */
-void dal_encoder_destroy(
-	struct encoder **ptr);
-
-#endif
diff --git a/drivers/gpu/drm/amd/dal/include/hw_sequencer_interface.h b/drivers/gpu/drm/amd/dal/include/hw_sequencer_interface.h
deleted file mode 100644
index 81b4b93..0000000
--- a/drivers/gpu/drm/amd/dal/include/hw_sequencer_interface.h
+++ /dev/null
@@ -1,227 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_HW_SEQUENCER_INTERFACE_H__
-#define __DAL_HW_SEQUENCER_INTERFACE_H__
-
-#include "hw_sequencer_types.h"
-#include "hw_adjustment_types.h"
-#include "include/display_clock_interface.h"
-#include "include/scaler_types.h"
-#include "include/grph_csc_types.h"
-#include "plane_types.h"
-
-#include "adapter_service_interface.h"
-
-enum hwss_result {
-	HWSS_RESULT_OK,
-	HWSS_RESULT_ERROR,
-	HWSS_RESULT_NO_BANDWIDTH,
-	HWSS_RESULT_OUT_OF_RANGE,
-	HWSS_RESULT_NOT_SUPPORTED,
-	HWSS_RESULT_UNKNOWN
-};
-
-struct hws_init_data {
-	struct adapter_service *as;
-	struct dal_context *dal_context;
-};
-
-/* TODO: below is three almost equal structures.
- * We should decide what to do with them */
-
-struct enable_link_param {
-	struct display_path *display_path;
-	uint32_t link_idx;
-	struct hw_crtc_timing timing;
-	struct link_settings link_settings;
-
-	bool optimized_programming;
-	const struct hw_path_mode *path_mode;
-};
-
-struct validate_link_param {
-	const struct display_path *display_path;
-	uint32_t link_idx;
-	struct link_settings link_settings;
-};
-
-struct set_dp_phy_pattern_param {
-	struct display_path *display_path;
-	uint32_t link_idx;
-	enum dp_test_pattern test_pattern;
-	const uint8_t *custom_pattern;
-	uint32_t cust_pattern_size;
-};
-
-struct hw_global_objects;
-struct hw_sequencer;
-struct hw_adjustment;
-struct hw_path_mode_set;
-struct hw_path_mode;
-struct hwss_build_params;
-struct controller;
-
-
-enum hwss_result dal_hw_sequencer_reset_audio_device(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-enum hwss_result dal_hw_sequencer_validate_link(
-	struct hw_sequencer *hws,
-	const struct validate_link_param *param);
-
-enum hwss_result dal_hw_sequencer_set_dp_phy_pattern(
-	struct hw_sequencer *hws,
-	const struct set_dp_phy_pattern_param *param);
-
-enum hwss_result dal_hw_sequencer_set_lane_settings(
-	struct hw_sequencer *hws,
-	struct display_path *display_path,
-	const struct link_training_settings *link_settings);
-
-/* Static validation for a SINGLE path mode.
- * Already "active" paths (if any) are NOT taken into account. */
-enum hwss_result dal_hw_sequencer_validate_display_path_mode(
-	struct hw_sequencer *hws,
-	const struct hw_path_mode *path_mode);
-
-/* Validation for a SET of path modes, including Video Memory Bandwidth
- * validation. */
-enum hwss_result dal_hw_sequencer_validate_display_hwpms(
-	struct hw_sequencer *hws,
-	struct hw_path_mode_set *path_set);
-
-struct hw_adjustment_gamma_ramp;
-
-enum hwss_result dal_hw_sequencer_set_gamma_ramp_adjustment(
-	struct hw_sequencer *hws,
-	const struct display_path *display_path,
-	struct hw_adjustment_gamma_ramp *adjusment);
-
-enum hwss_result dal_hw_sequencer_set_color_control_adjustment(
-	struct hw_sequencer *hws,
-	struct controller *crtc,
-	struct hw_adjustment_color_control *adjustment);
-
-enum hwss_result dal_hw_sequencer_set_vertical_sync_adjustment(
-	struct hw_sequencer *hws,
-	struct display_path *display_path,
-	struct hw_adjustment_value *adjustment);
-
-enum hwss_result dal_hw_sequencer_set_horizontal_sync_adjustment(
-	struct hw_sequencer *hws,
-	struct display_path *display_path,
-	struct hw_adjustment_value *adjustment);
-
-enum hwss_result dal_hw_sequencer_set_composite_sync_adjustment(
-	struct hw_sequencer *hws,
-	struct display_path *display_path,
-	struct hw_adjustment_value *adjustment);
-
-enum hwss_result dal_hw_sequencer_enable_sync_output(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-enum hwss_result dal_hw_sequencer_disable_sync_output(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-enum hwss_result dal_hw_sequencer_set_backlight_adjustment(
-	struct hw_sequencer *hws,
-	struct display_path *display_path,
-	struct hw_adjustment_value *adjustment);
-
-enum hwss_result dal_hw_sequencer_enable_link(
-	struct hw_sequencer *hws,
-	const struct enable_link_param *in);
-
-enum hwss_result dal_hw_sequencer_set_clocks_and_clock_state(
-		struct hw_sequencer *hws,
-		struct hw_global_objects *g_obj,
-		const struct minimum_clocks_calculation_result *min_clk_in,
-		enum clocks_state required_clocks_state);
-
-enum hwss_result dal_hw_sequencer_set_mode(
-	struct hw_sequencer *hws,
-	struct hw_path_mode_set *path_set);
-
-enum signal_type dal_hw_sequencer_detect_sink(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-enum signal_type dal_hw_sequencer_detect_load(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-enum hwss_result dal_hw_sequencer_set_safe_displaymark(
-		struct hw_sequencer *hws,
-		struct hw_path_mode_set *path_set);
-
-enum hwss_result dal_hw_sequencer_set_displaymark(
-		struct hw_sequencer *hws,
-		struct hw_path_mode_set *path_set);
-
-struct hw_sequencer *dal_hw_sequencer_create(
-		struct hws_init_data *hws_init_data);
-
-enum hwss_result dal_hw_sequencer_set_overscan_adj(
-	struct hw_sequencer *hws,
-	struct hw_path_mode_set *set,
-	struct hw_underscan_adjustment_data *hw_underscan);
-
-enum hwss_result dal_hw_sequencer_set_bit_depth_reduction_adj(
-	struct hw_sequencer *hws,
-	struct display_path *disp_path,
-	union hw_adjustment_bit_depth_reduction *bit_depth);
-
-enum hwss_result dal_hw_sequencer_get_hw_color_adj_range(
-	struct hw_sequencer *hws,
-	struct display_path *disp_path,
-	struct hw_color_control_range *hw_color_range);
-
-enum hwss_result dal_hw_sequencer_build_csc_adjust(
-	struct hw_sequencer *hws,
-	struct hw_adjustment_color_control *color_control,
-	struct grph_csc_adjustment *adjust);
-
-/* Cursor interface */
-enum hwss_result dal_hw_sequencer_set_cursor_position(
-		struct hw_sequencer *hws,
-		struct display_path *dp,
-		const struct dc_cursor_position *position);
-
-enum hwss_result dal_hw_sequencer_set_cursor_attributes(
-		struct hw_sequencer *hws,
-		struct display_path *dp,
-		const struct dc_cursor_attributes *attributes);
-
-/* Underlay/MPO interface */
-enum hwss_result dal_hw_sequencer_set_plane_config(
-	struct hw_sequencer *hws,
-	struct hw_path_mode_set *path_set,
-	uint32_t display_index);
-
-#endif /* __DAL_HW_SEQUENCER_INTERFACE_H__ */
diff --git a/drivers/gpu/drm/amd/dal/include/link_service_interface.h b/drivers/gpu/drm/amd/dal/include/link_service_interface.h
deleted file mode 100644
index 29233ae..0000000
--- a/drivers/gpu/drm/amd/dal/include/link_service_interface.h
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_LINK_SERVICE_INTERFACE_H__
-#define __DAL_LINK_SERVICE_INTERFACE_H__
-
-#include "include/link_service_types.h"
-
-/* forward declaration */
-struct link_service;
-struct hw_crtc_timing;
-struct hw_path_mode;
-struct display_path;
-struct hw_path_mode_set;
-struct link_training_preference;
-enum ddc_result;
-
-struct link_service *dal_link_service_create(
-	struct link_service_init_data *init_data);
-
-enum link_service_type dal_ls_get_link_service_type(
-	struct link_service *link_service);
-
-enum ddc_result dal_dpsst_ls_read_dpcd_data(
-	struct link_service *ls,
-	uint32_t address,
-	uint8_t *data,
-	uint32_t size);
-
-enum ddc_result dal_dpsst_ls_write_dpcd_data(
-	struct link_service *ls,
-	uint32_t address,
-	const uint8_t *data,
-	uint32_t size);
-
-#endif /* __DAL_LINK_SERVICE_INTERFACE_H__ */
-- 
2.7.4

