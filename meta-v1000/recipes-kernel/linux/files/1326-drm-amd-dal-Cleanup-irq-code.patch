From d132cd0b4458d91b0259c8a8803acd8659d9e836 Mon Sep 17 00:00:00 2001
From: Zeyu Fan <Zeyu.Fan@amd.com>
Date: Wed, 12 Oct 2016 19:05:08 -0400
Subject: [PATCH 1326/1722] drm/amd/dal: Cleanup irq code

Change-Id: I8ed866c865e1313d813e1f99d691ad490f9befe0
Signed-off-by: Zeyu Fan <Zeyu.Fan@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 .../gpu/drm/amd/dal/dc/dce100/dce100_resource.c    | 18 ++++++--------
 .../gpu/drm/amd/dal/dc/dce110/dce110_resource.c    | 16 +++++-------
 .../gpu/drm/amd/dal/dc/dce112/dce112_resource.c    | 17 ++++++-------
 drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c  | 20 ++++++---------
 drivers/gpu/drm/amd/dal/dc/irq/irq_service.c       | 29 ++++++----------------
 .../drm/amd/dal/include/irq_service_interface.h    |  4 +--
 6 files changed, 36 insertions(+), 68 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
index 03ff18e..8328563 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
@@ -33,6 +33,7 @@
 #include "../virtual/virtual_stream_encoder.h"
 #include "dce110/dce110_resource.h"
 #include "dce110/dce110_timing_generator.h"
+#include "irq/dce110/irq_service_dce110.h"
 #include "dce110/dce110_link_encoder.h"
 #include "dce110/dce110_mem_input.h"
 #include "dce110/dce110_mem_input_v.h"
@@ -853,6 +854,7 @@ static bool construct(
 		goto disp_clk_create_fail;
 	}
 
+
 	/* get static clock information for PPLIB or firmware, save
 	 * max_clock_state
 	 */
@@ -865,18 +867,12 @@ static bool construct(
 				pool->base.display_clock, max_clocks_state);
 	}
 
-	{
-		struct irq_service_init_data init_data;
-
-		init_data.ctx = dc->ctx;
-		pool->base.irqs = dal_irq_service_create(
-				dal_adapter_service_get_dce_version(
-					pool->base.adapter_srv),
-				&init_data);
-		if (!pool->base.irqs)
-			goto irqs_create_fail;
+	struct irq_service_init_data init_data;
+	init_data.ctx = dc->ctx;
+	pool->base.irqs = dal_irq_service_dce110_create(&init_data);
+	if (!pool->base.irqs)
+		goto irqs_create_fail;
 
-	}
 
 	/*************************************************
 	*  Resource + asic cap harcoding                *
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
index 220073b..5fdce4a 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
@@ -34,6 +34,7 @@
 #include "../virtual/virtual_stream_encoder.h"
 #include "dce110/audio_dce110.h"
 #include "dce110/dce110_timing_generator.h"
+#include "irq/dce110/irq_service_dce110.h"
 #include "dce110/dce110_timing_generator_v.h"
 #include "dce110/dce110_link_encoder.h"
 #include "dce110/dce110_mem_input.h"
@@ -1181,17 +1182,12 @@ static bool construct(
 				pool->base.display_clock, max_clocks_state);
 	}
 
-	{
-		struct irq_service_init_data init_data;
-		init_data.ctx = dc->ctx;
-		pool->base.irqs = dal_irq_service_create(
-				dal_adapter_service_get_dce_version(
-					pool->base.adapter_srv),
-				&init_data);
-		if (!pool->base.irqs)
-			goto irqs_create_fail;
+	struct irq_service_init_data init_data;
+	init_data.ctx = dc->ctx;
+	pool->base.irqs = dal_irq_service_dce110_create(&init_data);
+	if (!pool->base.irqs)
+		goto irqs_create_fail;
 
-	}
 
 	pool->base.scaler_filter = dal_scaler_filter_create(ctx);
 	if (pool->base.scaler_filter == NULL) {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
index f4f1468..d3fd7a5 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
@@ -37,6 +37,7 @@
 #include "dce112/dce112_mem_input.h"
 #include "dce112/dce112_link_encoder.h"
 #include "dce110/dce110_link_encoder.h"
+#include "irq/dce110/irq_service_dce110.h"
 #include "dce110/dce110_transform.h"
 #include "dce110/dce110_stream_encoder.h"
 #include "dce110/audio_dce110.h"
@@ -1148,6 +1149,7 @@ static bool construct(
 		goto disp_clk_create_fail;
 	}
 
+
 	/* get static clock information for PPLIB or firmware, save
 	 * max_clock_state
 	 */
@@ -1160,17 +1162,12 @@ static bool construct(
 				pool->base.display_clock, max_clocks_state);
 	}
 
-	{
-		struct irq_service_init_data init_data;
-		init_data.ctx = dc->ctx;
-		pool->base.irqs = dal_irq_service_create(
-				dal_adapter_service_get_dce_version(
-					pool->base.adapter_srv),
-				&init_data);
-		if (!pool->base.irqs)
-			goto irqs_create_fail;
+	struct irq_service_init_data init_data;
+	init_data.ctx = dc->ctx;
+	pool->base.irqs = dal_irq_service_dce110_create(&init_data);
+	if (!pool->base.irqs)
+		goto irqs_create_fail;
 
-	}
 
 	pool->base.scaler_filter = dal_scaler_filter_create(ctx);
 	if (pool->base.scaler_filter == NULL) {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
index cd3d709..9c8ba45 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
@@ -32,6 +32,7 @@
 #include "include/irq_service_interface.h"
 #include "include/adapter_service_interface.h"
 #include "../virtual/virtual_stream_encoder.h"
+#include "irq/dce80/irq_service_dce80.h"
 #include "dce110/dce110_timing_generator.h"
 #include "dce110/dce110_mem_input.h"
 #include "dce110/dce110_resource.h"
@@ -853,9 +854,7 @@ static bool construct(
 		goto disp_clk_create_fail;
 	}
 
-	/* get static clock information for PPLIB or firmware, save
-	 * max_clock_state
-	 */
+
 	if (dm_pp_get_static_clocks(ctx, &static_clk_info)) {
 		enum clocks_state max_clocks_state =
 				dce80_resource_convert_clock_state_pp_to_dc(
@@ -865,17 +864,12 @@ static bool construct(
 				pool->base.display_clock, max_clocks_state);
 	}
 
-	{
-		struct irq_service_init_data init_data;
-		init_data.ctx = dc->ctx;
-		pool->base.irqs = dal_irq_service_create(
-				dal_adapter_service_get_dce_version(
-					pool->base.adapter_srv),
-				&init_data);
-		if (!pool->base.irqs)
-			goto irqs_create_fail;
+	struct irq_service_init_data init_data;
+	init_data.ctx = dc->ctx;
+	pool->base.irqs = dal_irq_service_dce80_create(&init_data);
+	if (!pool->base.irqs)
+		goto irqs_create_fail;
 
-	}
 
 	pool->base.scaler_filter = dal_scaler_filter_create(ctx);
 	if (pool->base.scaler_filter == NULL) {
diff --git a/drivers/gpu/drm/amd/dal/dc/irq/irq_service.c b/drivers/gpu/drm/amd/dal/dc/irq/irq_service.c
index ddbea40..328c770 100644
--- a/drivers/gpu/drm/amd/dal/dc/irq/irq_service.c
+++ b/drivers/gpu/drm/amd/dal/dc/irq/irq_service.c
@@ -30,13 +30,18 @@
 
 #include "dce110/irq_service_dce110.h"
 
-	/*
-	 * TODO: implement DCE8.x IRQ service
-	 */
+
 #include "dce80/irq_service_dce80.h"
 
+
+#include "reg_helper.h"
 #include "irq_service.h"
 
+
+
+#define CTX \
+		irq_service->ctx
+
 bool dal_irq_service_construct(
 	struct irq_service *irq_service,
 	struct irq_service_init_data *init_data)
@@ -48,24 +53,6 @@ bool dal_irq_service_construct(
 	return true;
 }
 
-struct irq_service *dal_irq_service_create(
-	enum dce_version version,
-	struct irq_service_init_data *init_data)
-{
-	switch (version) {
-	case DCE_VERSION_8_0:
-		return dal_irq_service_dce80_create(init_data);
-	case DCE_VERSION_10_0:
-		return dal_irq_service_dce110_create(init_data);
-	case DCE_VERSION_11_2:
-		return dal_irq_service_dce110_create(init_data);
-	case DCE_VERSION_11_0:
-		return dal_irq_service_dce110_create(init_data);
-	default:
-		return NULL;
-	}
-}
-
 void dal_irq_service_destroy(struct irq_service **irq_service)
 {
 	if (!irq_service || !*irq_service) {
diff --git a/drivers/gpu/drm/amd/dal/include/irq_service_interface.h b/drivers/gpu/drm/amd/dal/include/irq_service_interface.h
index 7ae4aeb..7eef545 100644
--- a/drivers/gpu/drm/amd/dal/include/irq_service_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/irq_service_interface.h
@@ -32,9 +32,7 @@ struct irq_service_init_data {
 	struct dc_context *ctx;
 };
 
-struct irq_service *dal_irq_service_create(
-	enum dce_version version,
-	struct irq_service_init_data *init_data);
+struct irq_service;
 
 void dal_irq_service_destroy(struct irq_service **irq_service);
 
-- 
2.7.4

