From 7d8a368b685c4b8f6667c9bec1ea20b7f5001f9a Mon Sep 17 00:00:00 2001
From: Jim Qu <Jim.Qu@amd.com>
Date: Mon, 15 Jan 2018 18:01:31 +0800
Subject: [PATCH 3155/5855] Revert "drm/amdgpu: enable foreign DMA-buf objects"

This reverts commit 9a388ad5ec6ef4355047d55efd25dcf3feef8916.

Conflicts:
	drivers/gpu/drm/amd/amdgpu/amdgpu.h
	drivers/gpu/drm/amd/amdgpu/amdgpu_prime.c

Change-Id: I880ce578d09dc0ef72585e8ea99b469c1d6c39c0
Signed-off-by: Jim Qu <Jim.Qu@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu.h       |  4 ---
 drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c   |  2 +-
 drivers/gpu/drm/amd/amdgpu/amdgpu_prime.c | 59 -------------------------------
 3 files changed, 1 insertion(+), 64 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu.h b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
index 201aaa3..0a78196 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
@@ -410,10 +410,6 @@ amdgpu_gem_prime_import_sg_table(struct drm_device *dev,
 struct dma_buf *amdgpu_gem_prime_export(struct drm_device *dev,
 					struct drm_gem_object *gobj,
 					int flags);
-struct drm_gem_object *
-amdgpu_gem_prime_foreign_bo(struct amdgpu_device *adev, struct amdgpu_bo *bo);
-struct drm_gem_object *amdgpu_gem_prime_import(struct drm_device *dev,
-					       struct dma_buf *dma_buf);
 int amdgpu_gem_prime_pin(struct drm_gem_object *obj);
 void amdgpu_gem_prime_unpin(struct drm_gem_object *obj);
 struct reservation_object *amdgpu_gem_prime_res_obj(struct drm_gem_object *);
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
index ebccd1a..7757b56f 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
@@ -831,7 +831,7 @@ static struct drm_driver kms_driver = {
 	.prime_handle_to_fd = drm_gem_prime_handle_to_fd,
 	.prime_fd_to_handle = drm_gem_prime_fd_to_handle,
 	.gem_prime_export = amdgpu_gem_prime_export,
-	.gem_prime_import = amdgpu_gem_prime_import,
+	.gem_prime_import = drm_gem_prime_import,
 	.gem_prime_pin = amdgpu_gem_prime_pin,
 	.gem_prime_unpin = amdgpu_gem_prime_unpin,
 	.gem_prime_res_obj = amdgpu_gem_prime_res_obj,
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_prime.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_prime.c
index b58cc4d..3d37740 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_prime.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_prime.c
@@ -160,62 +160,3 @@ struct dma_buf *amdgpu_gem_prime_export(struct drm_device *dev,
 
 	return drm_gem_prime_export(dev, gobj, flags);
 }
-
-struct drm_gem_object *
-amdgpu_gem_prime_foreign_bo(struct amdgpu_device *adev, struct amdgpu_bo *bo)
-{
-	struct amdgpu_gem_object *gobj;
-	int r;
-
-	ww_mutex_lock(&bo->tbo.resv->lock, NULL);
-
-	list_for_each_entry(gobj, &bo->gem_objects, list) {
-		if (gobj->base.dev != adev->ddev)
-			continue;
-
-		ww_mutex_unlock(&bo->tbo.resv->lock);
-		drm_gem_object_reference(&gobj->base);
-		return &gobj->base;
-	}
-
-
-	gobj = kzalloc(sizeof(struct amdgpu_gem_object), GFP_KERNEL);
-	if (unlikely(!gobj)) {
-		ww_mutex_unlock(&bo->tbo.resv->lock);
-		return ERR_PTR(-ENOMEM);
-	}
-
-	r = drm_gem_object_init(adev->ddev, &gobj->base, amdgpu_bo_size(bo));
-	if (unlikely(r)) {
-		kfree(gobj);
-		ww_mutex_unlock(&bo->tbo.resv->lock);
-		return ERR_PTR(r);
-	}
-
-	list_add(&gobj->list, &bo->gem_objects);
-	gobj->bo = amdgpu_bo_ref(bo);
-	bo->flags |= AMDGPU_GEM_CREATE_CPU_ACCESS_REQUIRED;
-
-	ww_mutex_unlock(&bo->tbo.resv->lock);
-
-	return &gobj->base;
-}
-
-struct drm_gem_object *amdgpu_gem_prime_import(struct drm_device *dev,
-					       struct dma_buf *dma_buf)
-{
-	struct amdgpu_device *adev = dev->dev_private;
-
-	if (dma_buf->ops == &drm_gem_prime_dmabuf_ops) {
-		struct drm_gem_object *obj = dma_buf->priv;
-
-		if (obj->dev != dev && obj->dev->driver == dev->driver) {
-			/* It's a amdgpu_bo from a different driver instance */
-			struct amdgpu_bo *bo = gem_to_amdgpu_bo(obj);
-
-			return amdgpu_gem_prime_foreign_bo(adev, bo);
-		}
-	}
-
-	return drm_gem_prime_import(dev, dma_buf);
-}
-- 
2.7.4

