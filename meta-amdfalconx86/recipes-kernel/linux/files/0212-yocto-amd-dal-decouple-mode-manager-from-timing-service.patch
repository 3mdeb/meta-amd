From d3e0a5d60cef26c2b0d8fe00346599e0d8895166 Mon Sep 17 00:00:00 2001
From: Mykola Lysenko <mykola.lysenko@amd.com>
Date: Fri, 26 Jun 2015 09:07:15 -0400
Subject: [PATCH 326/343] amd/dal: decouple mode manager from timing service

Signed-off-by: Mykola Lysenko <mykola.lysenko@amd.com>
Reviewed-by: Eagle Yeh <eagle.yeh@amd.com>
Signed-off-by: Sanjay R Mehta <sanju.mehta@amd.com>
---
 .../drm/amd/dal/include/mode_manager_interface.h   | 10 ++--
 drivers/gpu/drm/amd/dal/include/scaler_types.h     | 58 +++++++++++++---------
 drivers/gpu/drm/amd/dal/include/set_mode_types.h   |  9 +---
 drivers/gpu/drm/amd/dal/interface/dal.c            |  4 +-
 .../gpu/drm/amd/dal/interface/timing_list_query.c  | 10 +++-
 .../gpu/drm/amd/dal/mode_manager/mode_manager.c    | 20 +++-----
 drivers/gpu/drm/amd/dal/topology/topology.c        | 16 +++++-
 7 files changed, 75 insertions(+), 52 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/include/mode_manager_interface.h b/drivers/gpu/drm/amd/dal/include/mode_manager_interface.h
index 4d84963..9bea09b 100644
--- a/drivers/gpu/drm/amd/dal/include/mode_manager_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/mode_manager_interface.h
@@ -29,9 +29,11 @@
 #include "mode_query_interface.h"
 #include "mode_manager_types.h"
 
+struct mode_timing_list;
+
 struct mode_manager;
 struct mode_manager_init_data {
-	struct timing_service *ts;
+	const struct default_mode_list *default_modes;
 	struct adapter_service *as;
 	struct dal_context *dal_context;
 };
@@ -60,14 +62,16 @@ void dal_mode_manager_set_bestview_options(
 	struct mode_manager *mode_mgr,
 	uint32_t display_index,
 	const struct bestview_options *bv_options,
-	bool rebuild_best_view);
+	bool rebuild_best_view,
+	struct mode_timing_list *mtl);
 
 /* Updates the cached render view table
  * associated with given DisplayPath accordingly
  */
 bool dal_mode_manager_update_disp_path_func_view_tbl(
 	struct mode_manager *mode_mgr,
-	uint32_t display_index);
+	uint32_t display_index,
+	struct mode_timing_list *mtl);
 
 /* generate all supported render modes
  * and the corresponding cofunctional output mode set
diff --git a/drivers/gpu/drm/amd/dal/include/scaler_types.h b/drivers/gpu/drm/amd/dal/include/scaler_types.h
index 6f5ed41..701793a 100644
--- a/drivers/gpu/drm/amd/dal/include/scaler_types.h
+++ b/drivers/gpu/drm/amd/dal/include/scaler_types.h
@@ -35,6 +35,40 @@ enum pixel_type {
 	PIXEL_TYPE_20BPP
 };
 
+
+/* Pixel format */
+enum pixel_format {
+	/*graph*/
+	PIXEL_FORMAT_UNINITIALIZED,
+	PIXEL_FORMAT_INDEX8 = 0x0001,
+	PIXEL_FORMAT_RGB565 = 0x0002,
+	PIXEL_FORMAT_ARGB8888 = 0x0004,
+	PIXEL_FORMAT_ARGB2101010 = 0x0008,
+	PIXEL_FORMAT_ARGB2101010_XRBIAS = 0x0010,
+	PIXEL_FORMAT_FP16 = 0x0020,
+	/*video*/
+	PIXEL_FORMAT_420BPP12 = 0x0040,
+	PIXEL_FORMAT_422BPP16 = 0x0080,
+	PIXEL_FORMAT_444BPP16 = 0x0100,
+	PIXEL_FORMAT_444BPP32 = 0x0200,
+	/*end of pixel format definition*/
+	PIXEL_FORMAT_INVALID = 0x8000,
+
+	PIXEL_FORMAT_GRPH_BEGIN = PIXEL_FORMAT_INDEX8,
+	PIXEL_FORMAT_GRPH_END = PIXEL_FORMAT_FP16,
+	PIXEL_FORMAT_VIDEO_BEGIN = PIXEL_FORMAT_420BPP12,
+	PIXEL_FORMAT_VIDEO_END = PIXEL_FORMAT_444BPP32,
+	PIXEL_FORMAT_UNKNOWN
+};
+
+/* Rotation angle */
+enum rotation_angle {
+	ROTATION_ANGLE_0 = 0,
+	ROTATION_ANGLE_90,
+	ROTATION_ANGLE_180,
+	ROTATION_ANGLE_270,
+};
+
 struct scaling_tap_info {
 	uint32_t v_taps;
 	uint32_t h_taps;
@@ -127,30 +161,6 @@ enum scaler_validation_code {
 	SCALER_VALIDATION_FAILURE_PREDEFINED_TAPS_NUMBER
 };
 
-/* Pixel format */
-enum pixel_format {
-	/*graph*/
-	PIXEL_FORMAT_UNINITIALIZED,
-	PIXEL_FORMAT_INDEX8 = 0x0001,
-	PIXEL_FORMAT_RGB565 = 0x0002,
-	PIXEL_FORMAT_ARGB8888 = 0x0004,
-	PIXEL_FORMAT_ARGB2101010 = 0x0008,
-	PIXEL_FORMAT_ARGB2101010_XRBIAS = 0x0010,
-	PIXEL_FORMAT_FP16 = 0x0020,
-	/*video*/
-	PIXEL_FORMAT_420BPP12 = 0x0040,
-	PIXEL_FORMAT_422BPP16 = 0x0080,
-	PIXEL_FORMAT_444BPP16 = 0x0100,
-	PIXEL_FORMAT_444BPP32 = 0x0200,
-	/*end of pixel format definition*/
-	PIXEL_FORMAT_INVALID = 0x8000,
-
-	PIXEL_FORMAT_GRPH_BEGIN = PIXEL_FORMAT_INDEX8,
-	PIXEL_FORMAT_GRPH_END = PIXEL_FORMAT_FP16,
-	PIXEL_FORMAT_VIDEO_BEGIN = PIXEL_FORMAT_420BPP12,
-	PIXEL_FORMAT_VIDEO_END = PIXEL_FORMAT_444BPP32,
-	PIXEL_FORMAT_UNKNOWN
-};
 
 #define FILTER_TYPE_MASK 0x0000000FL
 #define TWO_TAPS 2
diff --git a/drivers/gpu/drm/amd/dal/include/set_mode_types.h b/drivers/gpu/drm/amd/dal/include/set_mode_types.h
index 151266a..857b196 100644
--- a/drivers/gpu/drm/amd/dal/include/set_mode_types.h
+++ b/drivers/gpu/drm/amd/dal/include/set_mode_types.h
@@ -29,6 +29,7 @@
 #include "adjustment_types.h"
 #include "hw_adjustment_types.h"
 #include "include/plane_types.h"
+#include "scaler_types.h"
 
 /* Forward declaration */
 struct mode_timing;
@@ -68,13 +69,7 @@ enum tiling_mode {
 	TILING_MODE_TILED
 };
 
-/* Rotation angle */
-enum rotation_angle {
-	ROTATION_ANGLE_0 = 0,
-	ROTATION_ANGLE_90,
-	ROTATION_ANGLE_180,
-	ROTATION_ANGLE_270,
-};
+
 
 /* State of stereo 3D for workstation */
 enum ws_stereo_state {
diff --git a/drivers/gpu/drm/amd/dal/interface/dal.c b/drivers/gpu/drm/amd/dal/interface/dal.c
index 23bc611..c1988c0 100644
--- a/drivers/gpu/drm/amd/dal/interface/dal.c
+++ b/drivers/gpu/drm/amd/dal/interface/dal.c
@@ -213,7 +213,9 @@ static bool dal_construct(struct dal_init_data *init,
 	{
 		struct mode_manager_init_data init_data;
 		init_data.as = dal_instance->adapter_srv;
-		init_data.ts = dal_instance->timing_srv;
+		init_data.default_modes =
+			dal_timing_service_get_default_mode_list(
+				dal_instance->timing_srv);
 		init_data.dal_context = &dal_instance->dal_context;
 		dal_instance->mm = dal_mode_manager_create(&init_data);
 
diff --git a/drivers/gpu/drm/amd/dal/interface/timing_list_query.c b/drivers/gpu/drm/amd/dal/interface/timing_list_query.c
index 122e895..43d52eb 100644
--- a/drivers/gpu/drm/amd/dal/interface/timing_list_query.c
+++ b/drivers/gpu/drm/amd/dal/interface/timing_list_query.c
@@ -73,7 +73,10 @@ static void destruct(struct dal_timing_list_query *tlsq)
 	if (tlsq->added_timing_count) {
 		dal_mode_manager_update_disp_path_func_view_tbl(
 			dal_get_mode_manager(tlsq->parent_dal),
-			tlsq->display_index);
+			tlsq->display_index,
+			dal_timing_service_get_mode_timing_list_for_path(
+				tlsq->timing_srv,
+				tlsq->display_index));
 
 		dal_timing_service_dump(tlsq->timing_srv,
 				tlsq->display_index);
@@ -355,7 +358,10 @@ bool dal_timing_list_query_add_timing(struct dal_timing_list_query *tlsq,
 	if (ret) {
 		dal_mode_manager_update_disp_path_func_view_tbl(
 			dal_get_mode_manager(tlsq->parent_dal),
-			tlsq->display_index);
+			tlsq->display_index,
+			dal_timing_service_get_mode_timing_list_for_path(
+				tlsq->timing_srv,
+				tlsq->display_index));
 		tlsq->added_timing_count++;
 	}
 
diff --git a/drivers/gpu/drm/amd/dal/mode_manager/mode_manager.c b/drivers/gpu/drm/amd/dal/mode_manager/mode_manager.c
index 9025153..0689d9f 100644
--- a/drivers/gpu/drm/amd/dal/mode_manager/mode_manager.c
+++ b/drivers/gpu/drm/amd/dal/mode_manager/mode_manager.c
@@ -52,7 +52,6 @@ static struct view_info guaranteed_view_info[] = {
 	{ { 1680, 1050 }, { ADAPTER_VIEW_IMPORTANCE_GUARANTEED_16x10 } }, };
 
 struct mode_manager {
-	struct timing_service *ts;
 	struct ds_dispatch *ds_dispatch;
 	struct adapter_service *as;
 
@@ -126,12 +125,11 @@ static bool construct(
 		return false;
 	if (!init_data->as)
 		return false;
-	if (!init_data->ts)
+	if (!init_data->default_modes)
 		return false;
 
 	mm->ctx = init_data->dal_context;
 	mm->as = init_data->as;
-	mm->ts = init_data->ts;
 	mm->pixel_granularity =
 		dal_adapter_service_get_view_port_pixel_granularity(mm->as);
 
@@ -146,7 +144,7 @@ static bool construct(
 	/*
 	 * populate master_view_list with views from default_mode_list
 	 */
-	default_modes = dal_timing_service_get_default_mode_list(mm->ts);
+	default_modes = init_data->default_modes;
 	count = dal_default_mode_list_get_count(default_modes);
 
 	for (i = 0; i < count; i++) {
@@ -713,14 +711,14 @@ free_validator:
  */
 bool dal_mode_manager_update_disp_path_func_view_tbl(
 	struct mode_manager *mm,
-	uint32_t display_index)
+	uint32_t display_index,
+	struct mode_timing_list *mtl)
 {
 	/* gets the association table of the given display path */
 	struct display_view_solution_container *tbl =
 		get_association_table(
 			mm,
 			display_index);
-	struct mode_timing_list *mtl;
 
 	/* create new associate table if it doesn't exist already */
 	if (!tbl) {
@@ -732,11 +730,6 @@ bool dal_mode_manager_update_disp_path_func_view_tbl(
 		return false;
 	}
 
-	/* gets the updated mode timing list associated to given display path
-	 * from TS */
-	mtl = dal_timing_service_get_mode_timing_list_for_path(
-		mm->ts, display_index);
-
 	if (!mtl) {
 		dal_logger_write(mm->ctx->logger, LOG_MAJOR_MODE_ENUM,
 			LOG_MINOR_MODE_ENUM_TS_LIST_BUILD,
@@ -785,7 +778,8 @@ void dal_mode_manager_set_bestview_options(
 	struct mode_manager *mm,
 	uint32_t display_index,
 	const struct bestview_options *opts,
-	bool rebuild_bestview)
+	bool rebuild_bestview,
+	struct mode_timing_list *mtl)
 {
 	struct display_view_solution_container *tbl;
 
@@ -801,7 +795,7 @@ void dal_mode_manager_set_bestview_options(
 
 	if (rebuild_bestview)
 		dal_mode_manager_update_disp_path_func_view_tbl(
-			mm, display_index);
+			mm, display_index, mtl);
 }
 
 void dal_mode_manager_set_ds_dispatch(
diff --git a/drivers/gpu/drm/amd/dal/topology/topology.c b/drivers/gpu/drm/amd/dal/topology/topology.c
index d47d4f4..a2466709 100644
--- a/drivers/gpu/drm/amd/dal/topology/topology.c
+++ b/drivers/gpu/drm/amd/dal/topology/topology.c
@@ -2812,7 +2812,14 @@ static void display_connection_changed_at_display_index(
 		opts.MAINTAIN_ASPECT_RATIO = true;
 	}
 
-	dal_mode_manager_set_bestview_options(mm, display_index, &opts, true);
+	dal_mode_manager_set_bestview_options(
+		mm,
+		display_index,
+		&opts,
+		true,
+		dal_timing_service_get_mode_timing_list_for_path(
+			tm->timing_srv,
+			display_index));
 }
 
 /* A possible use-case which will run this function is "Change monitor during
@@ -2832,7 +2839,12 @@ static void display_capability_changed_at_display_index(
 		dcs,
 		display_idx);
 
-	dal_mode_manager_update_disp_path_func_view_tbl(tm->mm, display_idx);
+	dal_mode_manager_update_disp_path_func_view_tbl(
+		tm->mm,
+		display_idx,
+		dal_timing_service_get_mode_timing_list_for_path(
+			tm->timing_srv,
+			display_idx));
 }
 
 /**
-- 
1.9.1

