From b3a96b4dab515be00b024777ddfa02526ca34fb0 Mon Sep 17 00:00:00 2001
From: Jordan Lazare <Jordan.Lazare@amd.com>
Date: Tue, 16 Aug 2016 15:32:04 -0400
Subject: [PATCH 0830/1722] drm/amd/dal: Allow for new tiling_mode
 implementations

Signed-off-by: Jordan Lazare <Jordan.Lazare@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 .../gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c    |  18 +--
 drivers/gpu/drm/amd/dal/dc/dc.h                    |   2 +-
 drivers/gpu/drm/amd/dal/dc/dc_hw_types.h           | 143 ++++++++++++---------
 .../gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c   |  26 ++--
 .../gpu/drm/amd/dal/dc/dce110/dce110_mem_input.h   |   4 +-
 .../gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.c |  36 +++---
 .../gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.h |   4 +-
 drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h      |   4 +-
 8 files changed, 130 insertions(+), 107 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
index b928076..cd6f1e0 100644
--- a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
+++ b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
@@ -466,21 +466,21 @@ static void fill_plane_attributes_from_fb(
 		num_banks = AMDGPU_TILING_GET(tiling_flags, NUM_BANKS);
 
 		/* XXX fix me for VI */
-		surface->tiling_info.num_banks = num_banks;
-		surface->tiling_info.array_mode =
+		surface->tiling_info.gfx8.num_banks = num_banks;
+		surface->tiling_info.gfx8.array_mode =
 				DC_ARRAY_2D_TILED_THIN1;
-		surface->tiling_info.tile_split = tile_split;
-		surface->tiling_info.bank_width = bankw;
-		surface->tiling_info.bank_height = bankh;
-		surface->tiling_info.tile_aspect = mtaspect;
-		surface->tiling_info.tile_mode =
+		surface->tiling_info.gfx8.tile_split = tile_split;
+		surface->tiling_info.gfx8.bank_width = bankw;
+		surface->tiling_info.gfx8.bank_height = bankh;
+		surface->tiling_info.gfx8.tile_aspect = mtaspect;
+		surface->tiling_info.gfx8.tile_mode =
 				DC_ADDR_SURF_MICRO_TILING_DISPLAY;
 	} else if (AMDGPU_TILING_GET(tiling_flags, ARRAY_MODE)
 			== DC_ARRAY_1D_TILED_THIN1) {
-		surface->tiling_info.array_mode = DC_ARRAY_1D_TILED_THIN1;
+		surface->tiling_info.gfx8.array_mode = DC_ARRAY_1D_TILED_THIN1;
 	}
 
-	surface->tiling_info.pipe_config =
+	surface->tiling_info.gfx8.pipe_config =
 			AMDGPU_TILING_GET(tiling_flags, PIPE_CONFIG);
 
 	surface->plane_size.grph.surface_size.x = 0;
diff --git a/drivers/gpu/drm/amd/dal/dc/dc.h b/drivers/gpu/drm/amd/dal/dc/dc.h
index ac56bfa..1a0e913 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc.h
+++ b/drivers/gpu/drm/amd/dal/dc/dc.h
@@ -150,7 +150,7 @@ struct dc_surface {
 	struct rect clip_rect;
 
 	union plane_size plane_size;
-	struct dc_tiling_info tiling_info;
+	union dc_tiling_info tiling_info;
 	enum dc_color_space color_space;
 
 	enum surface_pixel_format format;
diff --git a/drivers/gpu/drm/amd/dal/dc/dc_hw_types.h b/drivers/gpu/drm/amd/dal/dc/dc_hw_types.h
index 2ed6280..ac7fbc0 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc_hw_types.h
+++ b/drivers/gpu/drm/amd/dal/dc/dc_hw_types.h
@@ -214,67 +214,90 @@ enum tile_mode_values {
 	DC_ADDR_SURF_MICRO_TILING_NON_DISPLAY = 0x1,
 };
 
-struct dc_tiling_info {
+enum swizzle_mode_values {
+	SW_LINEAR = 0,
+	SW_256B_S = 1,
+	SW_4KB_S = 5,
+	SW_4KB_D = 6,
+	SW_64KB_S = 9,
+	SW_64KB_D = 10,
+	SW_VAR_S = 13,
+	SW_VAR_D = 14,
+	SW_64KB_S_T = 17,
+	SW_64KB_D_T = 18,
+	SW_4KB_S_X = 21,
+	SW_4KB_D_X = 22,
+	SW_64KB_S_X = 25,
+	SW_64KB_D_X = 26,
+	SW_VAR_S_X = 29,
+	SW_VAR_D_X = 30,
+	SW_MAX
+};
+
+union dc_tiling_info {
+
+	struct {
+		/* Specifies the number of memory banks for tiling
+		 *	purposes.
+		 * Only applies to 2D and 3D tiling modes.
+		 *	POSSIBLE VALUES: 2,4,8,16
+		 */
+		unsigned int num_banks;
+		/* Specifies the number of tiles in the x direction
+		 *	to be incorporated into the same bank.
+		 * Only applies to 2D and 3D tiling modes.
+		 *	POSSIBLE VALUES: 1,2,4,8
+		 */
+		unsigned int bank_width;
+		unsigned int bank_width_c;
+		/* Specifies the number of tiles in the y direction to
+		 *	be incorporated into the same bank.
+		 * Only applies to 2D and 3D tiling modes.
+		 *	POSSIBLE VALUES: 1,2,4,8
+		 */
+		unsigned int bank_height;
+		unsigned int bank_height_c;
+		/* Specifies the macro tile aspect ratio. Only applies
+		 * to 2D and 3D tiling modes.
+		 */
+		unsigned int tile_aspect;
+		unsigned int tile_aspect_c;
+		/* Specifies the number of bytes that will be stored
+		 *	contiguously for each tile.
+		 * If the tile data requires more storage than this
+		 *	amount, it is split into multiple slices.
+		 * This field must not be larger than
+		 *	GB_ADDR_CONFIG.DRAM_ROW_SIZE.
+		 * Only applies to 2D and 3D tiling modes.
+		 * For color render targets, TILE_SPLIT >= 256B.
+		 */
+		enum tile_split_values tile_split;
+		enum tile_split_values tile_split_c;
+		/* Specifies the addressing within a tile.
+		 *	0x0 - DISPLAY_MICRO_TILING
+		 *	0x1 - THIN_MICRO_TILING
+		 *	0x2 - DEPTH_MICRO_TILING
+		 *	0x3 - ROTATED_MICRO_TILING
+		 */
+		enum tile_mode_values tile_mode;
+		enum tile_mode_values tile_mode_c;
+		/* Specifies the number of pipes and how they are
+		 *	interleaved in the surface.
+		 * Refer to memory addressing document for complete
+		 *	details and constraints.
+		 */
+		unsigned int pipe_config;
+		/* Specifies the tiling mode of the surface.
+		 * THIN tiles use an 8x8x1 tile size.
+		 * THICK tiles use an 8x8x4 tile size.
+		 * 2D tiling modes rotate banks for successive Z slices
+		 * 3D tiling modes rotate pipes and banks for Z slices
+		 * Refer to memory addressing document for complete
+		 *	details and constraints.
+		 */
+		enum array_mode_values array_mode;
+	} gfx8;
 
-	/* Specifies the number of memory banks for tiling
-	 *	purposes.
-	 * Only applies to 2D and 3D tiling modes.
-	 *	POSSIBLE VALUES: 2,4,8,16
-	 */
-	unsigned int num_banks;
-	/* Specifies the number of tiles in the x direction
-	 *	to be incorporated into the same bank.
-	 * Only applies to 2D and 3D tiling modes.
-	 *	POSSIBLE VALUES: 1,2,4,8
-	 */
-	unsigned int bank_width;
-	unsigned int bank_width_c;
-	/* Specifies the number of tiles in the y direction to
-	 *	be incorporated into the same bank.
-	 * Only applies to 2D and 3D tiling modes.
-	 *	POSSIBLE VALUES: 1,2,4,8
-	 */
-	unsigned int bank_height;
-	unsigned int bank_height_c;
-	/* Specifies the macro tile aspect ratio. Only applies
-	 * to 2D and 3D tiling modes.
-	 */
-	unsigned int tile_aspect;
-	unsigned int tile_aspect_c;
-	/* Specifies the number of bytes that will be stored
-	 *	contiguously for each tile.
-	 * If the tile data requires more storage than this
-	 *	amount, it is split into multiple slices.
-	 * This field must not be larger than
-	 *	GB_ADDR_CONFIG.DRAM_ROW_SIZE.
-	 * Only applies to 2D and 3D tiling modes.
-	 * For color render targets, TILE_SPLIT >= 256B.
-	 */
-	enum tile_split_values tile_split;
-	enum tile_split_values tile_split_c;
-	/* Specifies the addressing within a tile.
-	 *	0x0 - DISPLAY_MICRO_TILING
-	 *	0x1 - THIN_MICRO_TILING
-	 *	0x2 - DEPTH_MICRO_TILING
-	 *	0x3 - ROTATED_MICRO_TILING
-	 */
-	enum tile_mode_values tile_mode;
-	enum tile_mode_values tile_mode_c;
-	/* Specifies the number of pipes and how they are
-	 *	interleaved in the surface.
-	 * Refer to memory addressing document for complete
-	 *	details and constraints.
-	 */
-	unsigned int pipe_config;
-	/* Specifies the tiling mode of the surface.
-	 * THIN tiles use an 8x8x1 tile size.
-	 * THICK tiles use an 8x8x4 tile size.
-	 * 2D tiling modes rotate banks for successive Z slices
-	 * 3D tiling modes rotate pipes and banks for Z slices
-	 * Refer to memory addressing document for complete
-	 *	details and constraints.
-	 */
-	enum array_mode_values array_mode;
 };
 
 /* Rotation angle */
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c
index 7e6ada3..f6e88df2 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c
@@ -104,7 +104,7 @@ static void enable(struct dce110_mem_input *mem_input110)
 
 static void program_tiling(
 	struct dce110_mem_input *mem_input110,
-	const struct dc_tiling_info *info,
+	const union dc_tiling_info *info,
 	const enum surface_pixel_format pixel_format)
 {
 	uint32_t value = 0;
@@ -113,28 +113,28 @@ static void program_tiling(
 			mem_input110->base.ctx,
 			DCP_REG(mmGRPH_CONTROL));
 
-	set_reg_field_value(value, info->num_banks,
+	set_reg_field_value(value, info->gfx8.num_banks,
 		GRPH_CONTROL, GRPH_NUM_BANKS);
 
-	set_reg_field_value(value, info->bank_width,
+	set_reg_field_value(value, info->gfx8.bank_width,
 		GRPH_CONTROL, GRPH_BANK_WIDTH);
 
-	set_reg_field_value(value, info->bank_height,
+	set_reg_field_value(value, info->gfx8.bank_height,
 		GRPH_CONTROL, GRPH_BANK_HEIGHT);
 
-	set_reg_field_value(value, info->tile_aspect,
+	set_reg_field_value(value, info->gfx8.tile_aspect,
 		GRPH_CONTROL, GRPH_MACRO_TILE_ASPECT);
 
-	set_reg_field_value(value, info->tile_split,
+	set_reg_field_value(value, info->gfx8.tile_split,
 		GRPH_CONTROL, GRPH_TILE_SPLIT);
 
-	set_reg_field_value(value, info->tile_mode,
+	set_reg_field_value(value, info->gfx8.tile_mode,
 		GRPH_CONTROL, GRPH_MICRO_TILE_MODE);
 
-	set_reg_field_value(value, info->pipe_config,
+	set_reg_field_value(value, info->gfx8.pipe_config,
 		GRPH_CONTROL, GRPH_PIPE_CONFIG);
 
-	set_reg_field_value(value, info->array_mode,
+	set_reg_field_value(value, info->gfx8.array_mode,
 		GRPH_CONTROL, GRPH_ARRAY_MODE);
 
 	set_reg_field_value(value, 1,
@@ -429,7 +429,7 @@ static const unsigned int dvmm_Hw_Setting_Linear[4][9] = {
 
 /* Helper to get table entry from surface info */
 static const unsigned int *get_dvmm_hw_setting(
-		struct dc_tiling_info *tiling_info,
+		union dc_tiling_info *tiling_info,
 		enum surface_pixel_format format)
 {
 	enum bits_per_pixel {
@@ -448,7 +448,7 @@ static const unsigned int *get_dvmm_hw_setting(
 	else
 		bpp = bpp_8;
 
-	switch (tiling_info->array_mode) {
+	switch (tiling_info->gfx8.array_mode) {
 	case DC_ARRAY_1D_TILED_THIN1:
 	case DC_ARRAY_1D_TILED_THICK:
 	case DC_ARRAY_PRT_TILED_THIN1:
@@ -470,7 +470,7 @@ static const unsigned int *get_dvmm_hw_setting(
 bool dce110_mem_input_program_pte_vm(
 		struct mem_input *mem_input,
 		enum surface_pixel_format format,
-		struct dc_tiling_info *tiling_info,
+		union dc_tiling_info *tiling_info,
 		enum dc_rotation_angle rotation)
 {
 	struct dce110_mem_input *mem_input110 = TO_DCE110_MEM_INPUT(mem_input);
@@ -519,7 +519,7 @@ bool dce110_mem_input_program_pte_vm(
 bool dce110_mem_input_program_surface_config(
 	struct mem_input *mem_input,
 	enum surface_pixel_format format,
-	struct dc_tiling_info *tiling_info,
+	union dc_tiling_info *tiling_info,
 	union plane_size *plane_size,
 	enum dc_rotation_angle rotation)
 {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.h b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.h
index 0205bf5..a53c6e9 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.h
@@ -125,7 +125,7 @@ bool dce110_mem_input_program_surface_flip_and_addr(
 bool  dce110_mem_input_program_surface_config(
 	struct mem_input *mem_input,
 	enum surface_pixel_format format,
-	struct dc_tiling_info *tiling_info,
+	union dc_tiling_info *tiling_info,
 	union plane_size *plane_size,
 	enum dc_rotation_angle rotation);
 
@@ -137,7 +137,7 @@ bool  dce110_mem_input_program_surface_config(
 bool  dce110_mem_input_program_pte_vm(
 	struct mem_input *mem_input,
 	enum surface_pixel_format format,
-	struct dc_tiling_info *tiling_info,
+	union dc_tiling_info *tiling_info,
 	enum dc_rotation_angle rotation);
 
 /*
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.c
index 01bc9b7..47f415c 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.c
@@ -176,33 +176,33 @@ static void enable(struct dce110_mem_input *mem_input110)
 
 static void program_tiling(
 	struct dce110_mem_input *mem_input110,
-	const struct dc_tiling_info *info,
+	const union dc_tiling_info *info,
 	const enum surface_pixel_format pixel_format)
 {
 	uint32_t value = 0;
 
-	set_reg_field_value(value, info->num_banks,
+	set_reg_field_value(value, info->gfx8.num_banks,
 		UNP_GRPH_CONTROL, GRPH_NUM_BANKS);
 
-	set_reg_field_value(value, info->bank_width,
+	set_reg_field_value(value, info->gfx8.bank_width,
 		UNP_GRPH_CONTROL, GRPH_BANK_WIDTH_L);
 
-	set_reg_field_value(value, info->bank_height,
+	set_reg_field_value(value, info->gfx8.bank_height,
 		UNP_GRPH_CONTROL, GRPH_BANK_HEIGHT_L);
 
-	set_reg_field_value(value, info->tile_aspect,
+	set_reg_field_value(value, info->gfx8.tile_aspect,
 		UNP_GRPH_CONTROL, GRPH_MACRO_TILE_ASPECT_L);
 
-	set_reg_field_value(value, info->tile_split,
+	set_reg_field_value(value, info->gfx8.tile_split,
 		UNP_GRPH_CONTROL, GRPH_TILE_SPLIT_L);
 
-	set_reg_field_value(value, info->tile_mode,
+	set_reg_field_value(value, info->gfx8.tile_mode,
 		UNP_GRPH_CONTROL, GRPH_MICRO_TILE_MODE_L);
 
-	set_reg_field_value(value, info->pipe_config,
+	set_reg_field_value(value, info->gfx8.pipe_config,
 		UNP_GRPH_CONTROL, GRPH_PIPE_CONFIG);
 
-	set_reg_field_value(value, info->array_mode,
+	set_reg_field_value(value, info->gfx8.array_mode,
 		UNP_GRPH_CONTROL, GRPH_ARRAY_MODE);
 
 	set_reg_field_value(value, 1,
@@ -218,19 +218,19 @@ static void program_tiling(
 
 	value = 0;
 
-	set_reg_field_value(value, info->bank_width_c,
+	set_reg_field_value(value, info->gfx8.bank_width_c,
 		UNP_GRPH_CONTROL_C, GRPH_BANK_WIDTH_C);
 
-	set_reg_field_value(value, info->bank_height_c,
+	set_reg_field_value(value, info->gfx8.bank_height_c,
 		UNP_GRPH_CONTROL_C, GRPH_BANK_HEIGHT_C);
 
-	set_reg_field_value(value, info->tile_aspect_c,
+	set_reg_field_value(value, info->gfx8.tile_aspect_c,
 		UNP_GRPH_CONTROL_C, GRPH_MACRO_TILE_ASPECT_C);
 
-	set_reg_field_value(value, info->tile_split_c,
+	set_reg_field_value(value, info->gfx8.tile_split_c,
 		UNP_GRPH_CONTROL_C, GRPH_TILE_SPLIT_C);
 
-	set_reg_field_value(value, info->tile_mode_c,
+	set_reg_field_value(value, info->gfx8.tile_mode_c,
 		UNP_GRPH_CONTROL_C, GRPH_MICRO_TILE_MODE_C);
 
 	dm_write_reg(
@@ -547,7 +547,7 @@ static const unsigned int dvmm_Hw_Setting_Linear[4][9] = {
 
 /* Helper to get table entry from surface info */
 static const unsigned int *get_dvmm_hw_setting(
-		struct dc_tiling_info *tiling_info,
+		union dc_tiling_info *tiling_info,
 		enum surface_pixel_format format,
 		bool chroma)
 {
@@ -565,7 +565,7 @@ static const unsigned int *get_dvmm_hw_setting(
 	else
 		bpp = bpp_8;
 
-	switch (tiling_info->array_mode) {
+	switch (tiling_info->gfx8.array_mode) {
 	case DC_ARRAY_1D_TILED_THIN1:
 	case DC_ARRAY_1D_TILED_THICK:
 	case DC_ARRAY_PRT_TILED_THIN1:
@@ -587,7 +587,7 @@ static const unsigned int *get_dvmm_hw_setting(
 bool dce110_mem_input_v_program_pte_vm(
 		struct mem_input *mem_input,
 		enum surface_pixel_format format,
-		struct dc_tiling_info *tiling_info,
+		union dc_tiling_info *tiling_info,
 		enum dc_rotation_angle rotation)
 {
 	struct dce110_mem_input *mem_input110 = TO_DCE110_MEM_INPUT(mem_input);
@@ -662,7 +662,7 @@ bool dce110_mem_input_v_program_pte_vm(
 bool dce110_mem_input_v_program_surface_config(
 	struct mem_input *mem_input,
 	enum surface_pixel_format format,
-	struct dc_tiling_info *tiling_info,
+	union dc_tiling_info *tiling_info,
 	union plane_size *plane_size,
 	enum dc_rotation_angle rotation)
 {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.h b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.h
index 840741f..07b6636 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input_v.h
@@ -78,7 +78,7 @@ bool dce110_mem_input_v_program_surface_flip_and_addr(
 bool  dce110_mem_input_v_program_pte_vm(
 	struct mem_input *mem_input,
 	enum surface_pixel_format format,
-	struct dc_tiling_info *tiling_info,
+	union dc_tiling_info *tiling_info,
 	enum dc_rotation_angle rotation);
 
 /*
@@ -88,7 +88,7 @@ bool  dce110_mem_input_v_program_pte_vm(
 bool  dce110_mem_input_v_program_surface_config(
 	struct mem_input *mem_input,
 	enum surface_pixel_format format,
-	struct dc_tiling_info *tiling_info,
+	union dc_tiling_info *tiling_info,
 	union plane_size *plane_size,
 	enum dc_rotation_angle rotation);
 
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h b/drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h
index 28ebf3b..bdf6dcb 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h
@@ -71,13 +71,13 @@ struct mem_input_funcs {
 	bool (*mem_input_program_pte_vm)(
 		struct mem_input *mem_input,
 		enum surface_pixel_format format,
-		struct dc_tiling_info *tiling_info,
+		union dc_tiling_info *tiling_info,
 		enum dc_rotation_angle rotation);
 
 	bool (*mem_input_program_surface_config)(
 		struct mem_input *mem_input,
 		enum surface_pixel_format format,
-		struct dc_tiling_info *tiling_info,
+		union dc_tiling_info *tiling_info,
 		union plane_size *plane_size,
 		enum dc_rotation_angle rotation);
 
-- 
2.7.4

