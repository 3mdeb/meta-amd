From 31e54cdf55f4368d0206c118b900465a2f94cf18 Mon Sep 17 00:00:00 2001
From: Yong Zhao <yong.zhao@amd.com>
Date: Fri, 16 Dec 2016 19:00:09 -0500
Subject: [PATCH 5314/5855] drm/amdkfd: Abandon master VM usage

The master VM design is prone to bugs, and sometimes misleading. A kfd
process memory eviction structure amdkfd_eviction_info is used for
the new design.

Change-Id: If194af56203fe18b06d0c9c0273384454c5a1c36
Signed-off-by: Yong Zhao <yong.zhao@amd.com>

 Conflicts:
	drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
	drivers/gpu/drm/amd/amdkfd/kfd_device.c
---
 drivers/gpu/drm/amd/amdkfd/kfd_device.c  | 4 +++-
 drivers/gpu/drm/amd/amdkfd/kfd_priv.h    | 3 ++-
 drivers/gpu/drm/amd/amdkfd/kfd_process.c | 4 +---
 3 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_device.c b/drivers/gpu/drm/amd/amdkfd/kfd_device.c
index d4a3a9b..d2b1f3e 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_device.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_device.c
@@ -818,7 +818,9 @@ void kfd_restore_bo_worker(struct work_struct *work)
 			       struct kfd_process_device,
 			       per_device_list);
 
-	ret = pdd->dev->kfd2kgd->restore_process_bos(p->master_vm);
+	pr_info("Started restoring process of pasid %d\n", p->pasid);
+
+	ret = pdd->dev->kfd2kgd->restore_process_bos(p->process_info);
 	if (ret) {
 		kfd_schedule_restore_bos_and_queues(p);
 		return;
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_priv.h b/drivers/gpu/drm/amd/amdkfd/kfd_priv.h
index d4610c6..a423ae6 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_priv.h
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_priv.h
@@ -709,7 +709,8 @@ struct kfd_process {
 
 	struct rb_root bo_interval_tree;
 
-	void *master_vm;
+	/* Information used for memory eviction */
+	void *process_info;
 
 	/* Work items for evicting and restoring BOs */
 	struct kfd_eviction_work eviction_work;
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_process.c b/drivers/gpu/drm/amd/amdkfd/kfd_process.c
index 1aa7ee3..5e80a44 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_process.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_process.c
@@ -630,14 +630,12 @@ struct kfd_process_device *kfd_create_process_device_data(struct kfd_dev *dev,
 
 		/* Create the GPUVM context for this specific device */
 		if (dev->kfd2kgd->create_process_vm(dev->kgd, &pdd->vm,
-						    p->master_vm)) {
+						&p->process_info)) {
 			pr_err("Failed to create process VM object\n");
 			list_del(&pdd->per_device_list);
 			kfree(pdd);
 			pdd = NULL;
 		}
-		if (p->master_vm == NULL)
-			p->master_vm = pdd->vm;
 	}
 
 	return pdd;
-- 
2.7.4

