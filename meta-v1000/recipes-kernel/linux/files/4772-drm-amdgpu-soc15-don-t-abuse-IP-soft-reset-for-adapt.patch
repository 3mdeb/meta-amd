From cb7d880733c58651b534cf714a751aaee06d44a8 Mon Sep 17 00:00:00 2001
From: Alex Deucher <alexander.deucher@amd.com>
Date: Tue, 23 Jan 2018 16:27:31 -0500
Subject: [PATCH 4772/5855] drm/amdgpu/soc15: don't abuse IP soft reset for
 adapter reset
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The IP soft reset interface is for per IP reset but it was
being abused for adapter reset on soc15 asics.  Adjust the
interface to make it explicit.

Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Pavan Kumar Ramayanam <pavan.ramayanam@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_psp.c | 17 +++--------------
 drivers/gpu/drm/amd/amdgpu/amdgpu_psp.h |  2 ++
 drivers/gpu/drm/amd/amdgpu/soc15.c      |  9 ++-------
 3 files changed, 7 insertions(+), 21 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.c
index 3bb1706..1cbb72d 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.c
@@ -491,19 +491,8 @@ static int psp_resume(void *handle)
 	return ret;
 }
 
-static bool psp_check_reset(void* handle)
+int psp_gpu_reset(struct amdgpu_device *adev)
 {
-        struct amdgpu_device *adev = (struct amdgpu_device *)handle;
- 
-        if (adev->flags & AMD_IS_APU)
-                return true;
- 
-        return false;
-}
-
-static int psp_reset(void* handle)
-{
-        struct amdgpu_device *adev = (struct amdgpu_device *)handle;
         return psp_mode1_reset(&adev->psp);
 }
 
@@ -550,9 +539,9 @@ const struct amd_ip_funcs psp_ip_funcs = {
 	.suspend = psp_suspend,
 	.resume = psp_resume,
 	.is_idle = NULL,
-        .check_soft_reset = psp_check_reset,
+	.check_soft_reset = NULL,
 	.wait_for_idle = NULL,
-	.soft_reset = psp_reset,
+	.soft_reset = NULL,
 	.set_clockgating_state = psp_set_clockgating_state,
 	.set_powergating_state = psp_set_powergating_state,
 };
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.h
index 1336a5c..043d2fd 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.h
@@ -158,4 +158,6 @@ extern int psp_wait_for(struct psp_context *psp, uint32_t reg_index,
 
 extern const struct amdgpu_ip_block_version psp_v10_0_ip_block;
 
+int psp_gpu_reset(struct amdgpu_device *adev);
+
 #endif
diff --git a/drivers/gpu/drm/amd/amdgpu/soc15.c b/drivers/gpu/drm/amd/amdgpu/soc15.c
index 312d3ea..dae1e50 100644
--- a/drivers/gpu/drm/amd/amdgpu/soc15.c
+++ b/drivers/gpu/drm/amd/amdgpu/soc15.c
@@ -417,13 +417,8 @@ static int soc15_asic_reset(struct amdgpu_device *adev)
 
         pci_save_state(adev->pdev);
 
-        for (i = 0; i < AMDGPU_MAX_IP_NUM; i++) {
-                if (adev->ip_blocks[i].version->type == AMD_IP_BLOCK_TYPE_PSP){
-                        adev->ip_blocks[i].version->funcs->soft_reset((void *)adev);
-                        break;
-                }
-        }
- 
+	psp_gpu_reset(adev); 
+
         pci_restore_state(adev->pdev);
 
 	/* wait for asic to come out of reset */
-- 
2.7.4

