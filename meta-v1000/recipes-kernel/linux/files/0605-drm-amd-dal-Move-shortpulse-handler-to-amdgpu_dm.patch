From c83c2ef9ed669da26c195f98d035d466b6e534a9 Mon Sep 17 00:00:00 2001
From: Mykola Lysenko <Mykola.Lysenko@amd.com>
Date: Mon, 28 Mar 2016 04:02:52 -0400
Subject: [PATCH 0605/1722] drm/amd/dal: Move shortpulse handler to amdgpu_dm

It makes no sense in having this in amdgpu_dm_helpers

Change-Id: I99db64b62c8acf45db55c0a79a6b64cbd3c129c9
Signed-off-by: Mykola Lysenko <Mykola.Lysenko@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm.c      | 53 +++++++++++++++++++++-
 .../gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c  | 46 -------------------
 drivers/gpu/drm/amd/dal/dc/dm_helpers.h            |  3 --
 3 files changed, 51 insertions(+), 51 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm.c b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm.c
index 025c7ba..d35e34f 100644
--- a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm.c
+++ b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm.c
@@ -46,6 +46,7 @@
 
 #include <linux/module.h>
 #include <linux/moduleparam.h>
+#include <linux/version.h>
 
 #include <drm/drm_atomic.h>
 #include <drm/drm_atomic_helper.h>
@@ -836,6 +837,55 @@ static void handle_hpd_irq(void *param)
 
 }
 
+static void dm_handle_hpd_rx_irq(struct amdgpu_connector *aconnector)
+{
+	uint8_t esi[8] = { 0 };
+	uint8_t dret;
+	bool new_irq_handled = false;
+	/* DPCD 0x2002 - 0x2008 for down stream IRQ from MST, eDP etc. */
+	dret = drm_dp_dpcd_read(
+		&aconnector->dm_dp_aux.aux,
+		DP_SINK_COUNT_ESI, esi, 8);
+
+	while (dret == 8) {
+		uint8_t retry;
+		dret = 0;
+
+		DRM_DEBUG_KMS("ESI %02x %02x %02x\n", esi[0], esi[1], esi[2]);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
+		/* handle HPD short pulse irq */
+		if (aconnector->mst_mgr.mst_state)
+			drm_dp_mst_hpd_irq(
+				&aconnector->mst_mgr,
+				esi,
+				&new_irq_handled);
+#endif
+
+		if (new_irq_handled) {
+			/* ACK at DPCD to notify down stream */
+			for (retry = 0; retry < 3; retry++) {
+				uint8_t wret;
+
+				wret = drm_dp_dpcd_write(
+					&aconnector->dm_dp_aux.aux,
+					DP_SINK_COUNT_ESI + 1,
+					&esi[1],
+					3);
+				if (wret == 3)
+					break;
+			}
+
+			/* check if there is new irq to be handle */
+			dret = drm_dp_dpcd_read(
+				&aconnector->dm_dp_aux.aux,
+				DP_SINK_COUNT_ESI, esi, 8);
+
+			new_irq_handled = false;
+		} else
+			break;
+	}
+}
+
 static void handle_hpd_rx_irq(void *param)
 {
 	struct amdgpu_connector *aconnector = (struct amdgpu_connector *)param;
@@ -858,8 +908,7 @@ static void handle_hpd_rx_irq(void *param)
 		}
 	}
 
-	if (is_mst_root_connector)
-		dm_helpers_dp_mst_handle_mst_hpd_rx_irq(param);
+	dm_handle_hpd_rx_irq(aconnector);
 }
 
 static void register_hpd_handlers(struct amdgpu_device *adev)
diff --git a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c
index 6190a51..5b7562b 100644
--- a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c
+++ b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c
@@ -380,52 +380,6 @@ bool dm_helpers_dp_mst_send_payload_allocation(
 #endif
 }
 
-void dm_helpers_dp_mst_handle_mst_hpd_rx_irq(void *param)
-{
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
-	uint8_t esi[8] = { 0 };
-	uint8_t dret;
-	bool new_irq_handled = true;
-	struct amdgpu_connector *aconnector = (struct amdgpu_connector *)param;
-
-	/* DPCD 0x2002 - 0x2008 for down stream IRQ from MST, eDP etc. */
-	dret = drm_dp_dpcd_read(
-		&aconnector->dm_dp_aux.aux,
-		DP_SINK_COUNT_ESI, esi, 8);
-
-	while ((dret == 8) && new_irq_handled) {
-		uint8_t retry;
-
-		DRM_DEBUG_KMS("ESI %02x %02x %02x\n", esi[0], esi[1], esi[2]);
-
-		/* handle HPD short pulse irq */
-		drm_dp_mst_hpd_irq(&aconnector->mst_mgr, esi, &new_irq_handled);
-
-		if (new_irq_handled) {
-			/* ACK at DPCD to notify down stream */
-			for (retry = 0; retry < 3; retry++) {
-				uint8_t wret;
-
-				wret = drm_dp_dpcd_write(
-					&aconnector->dm_dp_aux.aux,
-					DP_SINK_COUNT_ESI + 1,
-					&esi[1],
-					3);
-				if (wret == 3)
-					break;
-			}
-
-			/* check if there is new irq to be handle */
-			dret = drm_dp_dpcd_read(
-				&aconnector->dm_dp_aux.aux,
-				DP_SINK_COUNT_ESI, esi, 8);
-		}
-	}
-#else
-	return false;
-#endif
-}
-
 bool dm_helpers_dp_mst_start_top_mgr(
 		struct dc_context *ctx,
 		const struct dc_link *link,
diff --git a/drivers/gpu/drm/amd/dal/dc/dm_helpers.h b/drivers/gpu/drm/amd/dal/dc/dm_helpers.h
index 151c1ef..6fa6970 100644
--- a/drivers/gpu/drm/amd/dal/dc/dm_helpers.h
+++ b/drivers/gpu/drm/amd/dal/dc/dm_helpers.h
@@ -94,9 +94,6 @@ bool dm_helpers_dp_mst_send_payload_allocation(
 		const struct dc_stream *stream,
 		bool enable);
 
-void dm_helpers_dp_mst_handle_mst_hpd_rx_irq(
-		void *param);
-
 bool dm_helpers_dp_mst_start_top_mgr(
 		struct dc_context *ctx,
 		const struct dc_link *link,
-- 
2.7.4

