From 7b9c62fa328db18a1f04fed7f5e1ec4c7fa20eb5 Mon Sep 17 00:00:00 2001
From: Tony Cheng <tony.cheng@amd.com>
Date: Sat, 17 Sep 2016 19:22:57 -0400
Subject: [PATCH 1104/1722] drm/amd/dal: refactor aux 4

each DCE includes _d header to create the correct offset
also include _shift to determine if AUX_RESET is required on the DCE.

- add pointer to regsiter table in dce110 ctor, so the offset can get intialized correctly for dce112
- added new file for dce100.  mostly reused dce110, with different offset structure

DCE8/10 does not have the following regsiter fields: AUX_RESET, AUX_RESET_DONE

Change-Id: Id0327a42738d3784cafe142ad5e945942f630220
Signed-off-by: Tony Cheng <tony.cheng@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/i2caux/Makefile         | 11 +++
 .../drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.c   | 84 ++++++++++++++++++++++
 .../drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.h   | 33 +++++++++
 .../amd/dal/dc/i2caux/dce110/aux_engine_dce110.c   |  5 +-
 .../amd/dal/dc/i2caux/dce110/aux_engine_dce110.h   |  2 +
 .../drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.c   | 11 +--
 .../drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.h   |  7 +-
 .../drm/amd/dal/dc/i2caux/dce112/i2caux_dce112.c   | 30 +++++++-
 drivers/gpu/drm/amd/dal/dc/i2caux/i2caux.c         | 11 ++-
 9 files changed, 182 insertions(+), 12 deletions(-)
 create mode 100644 drivers/gpu/drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.c
 create mode 100644 drivers/gpu/drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.h

diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/Makefile b/drivers/gpu/drm/amd/dal/dc/i2caux/Makefile
index 3302d7b..1c9c024 100644
--- a/drivers/gpu/drm/amd/dal/dc/i2caux/Makefile
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/Makefile
@@ -22,6 +22,17 @@ AMD_DAL_FILES += $(AMD_DAL_I2CAUX_DCE80)
 endif
 
 ###############################################################################
+# DCE 100 family
+###############################################################################
+ifdef CONFIG_DRM_AMD_DAL_DCE10_0
+I2CAUX_DCE100 = i2caux_dce100.o
+
+AMD_DAL_I2CAUX_DCE100 = $(addprefix $(AMDDALPATH)/dc/i2caux/dce100/,$(I2CAUX_DCE100))
+
+AMD_DAL_FILES += $(AMD_DAL_I2CAUX_DCE100)
+endif
+
+###############################################################################
 # DCE 110 family
 ###############################################################################
 ifdef CONFIG_DRM_AMD_DAL_DCE11_0
diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.c b/drivers/gpu/drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.c
new file mode 100644
index 0000000..917896f
--- /dev/null
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.c
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2012-15 Advanced Micro Devices, Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * Authors: AMD
+ *
+ */
+
+#include "dm_services.h"
+
+#include "include/i2caux_interface.h"
+#include "../i2caux.h"
+#include "../engine.h"
+#include "../i2c_engine.h"
+#include "../i2c_sw_engine.h"
+#include "../i2c_hw_engine.h"
+
+#include "../dce110/aux_engine_dce110.h"
+#include "../dce110/i2caux_dce110.h"
+
+#include "dce/dce_10_0_d.h"
+#include "dce/dce_10_0_sh_mask.h"
+
+/* set register offset */
+#define SR(reg_name)\
+	.reg_name = mm ## reg_name
+
+/* set register offset with instance */
+#define SRI(reg_name, block, id)\
+	.reg_name = mm ## block ## id ## _ ## reg_name
+
+#define aux_regs(id)\
+[id] = {\
+	AUX_COMMON_REG_LIST(id), \
+	.AUX_RESET_MASK = 0 \
+}
+
+static const struct dce110_aux_registers dce100_aux_regs[] = {
+		aux_regs(0),
+		aux_regs(1),
+		aux_regs(2),
+		aux_regs(3),
+		aux_regs(4),
+		aux_regs(5),
+};
+
+struct i2caux *dal_i2caux_dce100_create(
+	struct adapter_service *as,
+	struct dc_context *ctx)
+{
+	struct i2caux_dce110 *i2caux_dce110 =
+		dm_alloc(sizeof(struct i2caux_dce110));
+
+	if (!i2caux_dce110) {
+		ASSERT_CRITICAL(false);
+		return NULL;
+	}
+
+	if (dal_i2caux_dce110_construct(i2caux_dce110, as, ctx, dce100_aux_regs))
+		return &i2caux_dce110->base;
+
+	ASSERT_CRITICAL(false);
+
+	dm_free(i2caux_dce110);
+
+	return NULL;
+}
diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.h b/drivers/gpu/drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.h
new file mode 100644
index 0000000..b2902c6
--- /dev/null
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/dce100/i2caux_dce100.h
@@ -0,0 +1,33 @@
+/*
+ * Copyright 2012-15 Advanced Micro Devices, Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * Authors: AMD
+ *
+ */
+
+#ifndef __DAL_I2C_AUX_DCE100_H__
+#define __DAL_I2C_AUX_DCE100_H__
+
+struct i2caux *dal_i2caux_dce100_create(
+	struct adapter_service *as,
+	struct dc_context *ctx);
+
+#endif /* __DAL_I2C_AUX_DCE100_H__ */
diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.c b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.c
index 88db273..8cc11ad 100644
--- a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.c
@@ -98,7 +98,6 @@ static bool acquire_engine(
 	struct aux_engine *engine)
 {
 	struct aux_engine_dce110 *aux110 = FROM_AUX_ENGINE(engine);
-	bool acquire_reset = true;  /*DCE11 = 1, DCE8 = 0 */
 
 	/* enable AUX before request SW to access AUX */
 	uint32_t value = REG_READ(AUX_CONTROL);
@@ -115,7 +114,7 @@ static bool acquire_engine(
 				AUX_CONTROL,
 				AUX_EN);
 
-		if (acquire_reset) {
+		if (REG(AUX_RESET_MASK)) {
 			/*DP_AUX block as part of the enable sequence*/
 			set_reg_field_value(
 				value,
@@ -126,7 +125,7 @@ static bool acquire_engine(
 
 		REG_WRITE(AUX_CONTROL, value);
 
-		if (acquire_reset) {
+		if (REG(AUX_RESET_MASK)) {
 			/*poll HW to make sure reset it done*/
 
 			REG_WAIT(AUX_CONTROL, AUX_RESET_DONE, 1,
diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.h b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.h
index 528baab..85ee821 100644
--- a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.h
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.h
@@ -47,6 +47,8 @@ struct dce110_aux_registers {
 	uint32_t AUX_SW_STATUS;
 	uint32_t AUXN_IMPCAL;
 	uint32_t AUXP_IMPCAL;
+
+	uint32_t AUX_RESET_MASK;
 };
 
 struct aux_engine_dce110 {
diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.c b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.c
index 39e1c7c..065354a 100644
--- a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.c
@@ -149,6 +149,7 @@ static const struct i2caux_funcs i2caux_funcs = {
 };
 
 #include "dce/dce_11_0_d.h"
+#include "dce/dce_11_0_sh_mask.h"
 
 /* set register offset */
 #define SR(reg_name)\
@@ -160,10 +161,11 @@ static const struct i2caux_funcs i2caux_funcs = {
 
 #define aux_regs(id)\
 [id] = {\
-	AUX_COMMON_REG_LIST(id) \
+	AUX_COMMON_REG_LIST(id), \
+	.AUX_RESET_MASK = AUX_CONTROL__AUX_RESET_MASK \
 }
 
-static const struct dce110_aux_registers aux_regs[] = {
+static const struct dce110_aux_registers dce110_aux_regs[] = {
 		aux_regs(0),
 		aux_regs(1),
 		aux_regs(2),
@@ -175,7 +177,8 @@ static const struct dce110_aux_registers aux_regs[] = {
 bool dal_i2caux_dce110_construct(
 	struct i2caux_dce110 *i2caux_dce110,
 	struct adapter_service *as,
-	struct dc_context *ctx)
+	struct dc_context *ctx,
+	const struct dce110_aux_registers aux_regs[])
 {
 	uint32_t i = 0;
 	uint32_t reference_frequency = 0;
@@ -280,7 +283,7 @@ struct i2caux *dal_i2caux_dce110_create(
 		return NULL;
 	}
 
-	if (dal_i2caux_dce110_construct(i2caux_dce110, as, ctx))
+	if (dal_i2caux_dce110_construct(i2caux_dce110, as, ctx, dce110_aux_regs))
 		return &i2caux_dce110->base;
 
 	ASSERT_CRITICAL(false);
diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.h b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.h
index edafe81..b4ca557 100644
--- a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.h
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/i2caux_dce110.h
@@ -26,12 +26,16 @@
 #ifndef __DAL_I2C_AUX_DCE110_H__
 #define __DAL_I2C_AUX_DCE110_H__
 
+#include "../i2caux.h"
+
 struct i2caux_dce110 {
 	struct i2caux base;
 	/* indicate the I2C HW circular buffer is in use */
 	bool i2c_hw_buffer_in_use;
 };
 
+struct dce110_aux_registers;
+
 struct i2caux *dal_i2caux_dce110_create(
 	struct adapter_service *as,
 	struct dc_context *ctx);
@@ -39,6 +43,7 @@ struct i2caux *dal_i2caux_dce110_create(
 bool dal_i2caux_dce110_construct(
 	struct i2caux_dce110 *i2caux_dce110,
 	struct adapter_service *as,
-	struct dc_context *ctx);
+	struct dc_context *ctx,
+	const struct dce110_aux_registers *aux_regs);
 
 #endif /* __DAL_I2C_AUX_DCE110_H__ */
diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/dce112/i2caux_dce112.c b/drivers/gpu/drm/amd/dal/dc/i2caux/dce112/i2caux_dce112.c
index f64035f..5311335 100644
--- a/drivers/gpu/drm/amd/dal/dc/i2caux/dce112/i2caux_dce112.c
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/dce112/i2caux_dce112.c
@@ -35,6 +35,8 @@
 #include "../dce110/i2caux_dce110.h"
 #include "i2caux_dce112.h"
 
+#include "../dce110/aux_engine_dce110.h"
+
 #include "i2c_hw_engine_dce112.h"
 
 static const enum gpio_ddc_line hw_ddc_lines[] = {
@@ -46,6 +48,32 @@ static const enum gpio_ddc_line hw_ddc_lines[] = {
 	GPIO_DDC_LINE_DDC6,
 };
 
+#include "dce/dce_11_2_d.h"
+#include "dce/dce_11_2_sh_mask.h"
+
+/* set register offset */
+#define SR(reg_name)\
+	.reg_name = mm ## reg_name
+
+/* set register offset with instance */
+#define SRI(reg_name, block, id)\
+	.reg_name = mm ## block ## id ## _ ## reg_name
+
+#define aux_regs(id)\
+[id] = {\
+	AUX_COMMON_REG_LIST(id), \
+	.AUX_RESET_MASK = AUX_CONTROL__AUX_RESET_MASK \
+}
+
+static const struct dce110_aux_registers dce112_aux_regs[] = {
+		aux_regs(0),
+		aux_regs(1),
+		aux_regs(2),
+		aux_regs(3),
+		aux_regs(4),
+		aux_regs(5),
+};
+
 static bool construct(
 	struct i2caux_dce110 *i2caux_dce110,
 	struct adapter_service *as,
@@ -55,7 +83,7 @@ static bool construct(
 	uint32_t reference_frequency = 0;
 	struct i2caux *base = NULL;
 
-	if (!dal_i2caux_dce110_construct(i2caux_dce110, as, ctx)) {
+	if (!dal_i2caux_dce110_construct(i2caux_dce110, as, ctx, dce112_aux_regs)) {
 		ASSERT_CRITICAL(false);
 		return false;
 	}
diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/i2caux.c b/drivers/gpu/drm/amd/dal/dc/i2caux/i2caux.c
index b80dfa4..a754632 100644
--- a/drivers/gpu/drm/amd/dal/dc/i2caux/i2caux.c
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/i2caux.c
@@ -52,7 +52,11 @@
 #include "dce80/i2caux_dce80.h"
 #endif
 
-#if defined(CONFIG_DRM_AMD_DAL_DCE11_0) || defined(CONFIG_DRM_AMD_DAL_DCE10_0)
+#if defined(CONFIG_DRM_AMD_DAL_DCE10_0)
+#include "dce100/i2caux_dce100.h"
+#endif
+
+#if defined(CONFIG_DRM_AMD_DAL_DCE11_0)
 #include "dce110/i2caux_dce110.h"
 #endif
 
@@ -97,10 +101,11 @@ struct i2caux *dal_i2caux_create(
 #endif
 #if defined(CONFIG_DRM_AMD_DAL_DCE11_0)
 	case DCE_VERSION_11_0:
+		return dal_i2caux_dce110_create(as, ctx);
+#endif
 #if defined(CONFIG_DRM_AMD_DAL_DCE10_0)
 	case DCE_VERSION_10_0:
-#endif
-		return dal_i2caux_dce110_create(as, ctx);
+		return dal_i2caux_dce100_create(as, ctx);
 #endif
 	default:
 		BREAK_TO_DEBUGGER();
-- 
2.7.4

