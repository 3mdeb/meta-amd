From 332ad4ea59b2545467f9b364c23a3e5f6a251727 Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Thu, 20 Oct 2016 21:16:00 -0400
Subject: [PATCH 1399/1722] drm/amd/dal: Move DDC reg definition out of create

Change-Id: I6008ec929cc5fc234ce4b91b2662007286f26848
Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c | 42 +++++++++++++---------
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h |  4 +++
 .../drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c |  3 +-
 .../gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c   | 42 +++++++++++++---------
 .../gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h   |  3 ++
 .../drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c   |  3 +-
 drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c     |  2 ++
 drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h       |  3 ++
 8 files changed, 66 insertions(+), 36 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
index 4aceb20..a01c3cc 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
@@ -268,6 +268,31 @@ static const struct hw_gpio_pin_funcs funcs = {
 	.close = dal_hw_gpio_close,
 };
 
+void define_ddc_dce110_registers(
+		struct hw_gpio_pin *pin,
+		uint32_t en)
+{
+	struct hw_ddc *ddc = HW_DDC_FROM_BASE(pin);
+
+	switch (pin->id) {
+	case GPIO_ID_DDC_DATA:
+		ddc->regs = &ddc_data_regs[en];
+		ddc->base.regs = &ddc_data_regs[en].gpio;
+		break;
+	case GPIO_ID_DDC_CLOCK:
+		ddc->regs = &ddc_clk_regs[en];
+		ddc->base.regs = &ddc_clk_regs[en].gpio;
+		break;
+	default:
+		ASSERT_CRITICAL(false);
+		return;
+	}
+
+	ddc->shifts = &ddc_shift;
+	ddc->masks = &ddc_mask;
+
+}
+
 static bool construct(
 	struct hw_ddc *ddc,
 	enum gpio_id id,
@@ -286,23 +311,6 @@ static bool construct(
 
 	ddc->base.base.funcs = &funcs;
 
-	switch (id) {
-	case GPIO_ID_DDC_DATA:
-		ddc->regs = &ddc_data_regs[en];
-		ddc->base.regs = &ddc_data_regs[en].gpio;
-		break;
-	case GPIO_ID_DDC_CLOCK:
-		ddc->regs = &ddc_clk_regs[en];
-		ddc->base.regs = &ddc_clk_regs[en].gpio;
-		break;
-	default:
-		ASSERT_CRITICAL(false);
-		return false;
-	}
-
-	ddc->shifts = &ddc_shift;
-	ddc->masks = &ddc_mask;
-
 	return true;
 }
 
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h
index 8472692..2206b7e 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h
@@ -31,4 +31,8 @@ struct hw_gpio_pin *dal_hw_ddc_dce110_create(
 	enum gpio_id id,
 	uint32_t en);
 
+void define_ddc_dce110_registers(
+		struct hw_gpio_pin *pin,
+		uint32_t en);
+
 #endif
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c
index 8e46179..6e504ff 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c
@@ -85,7 +85,8 @@ static const struct hw_factory_funcs funcs = {
 	.create_hpd = dal_hw_hpd_create,
 	.create_sync = NULL,
 	.create_gsl = NULL,
-	.define_hpd_registers = define_hpd_registers
+	.define_hpd_registers = define_hpd_registers,
+	.define_ddc_registers = define_ddc_dce110_registers
 };
 
 /*
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
index 9093e95..cecd665 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
@@ -267,6 +267,31 @@ static const struct hw_gpio_pin_funcs funcs = {
 	.close = dal_hw_gpio_close,
 };
 
+void define_ddc_dce80_registers(
+		struct hw_gpio_pin *pin,
+		uint32_t en)
+{
+	struct hw_ddc *ddc = HW_DDC_FROM_BASE(pin);
+
+	switch (pin->id) {
+	case GPIO_ID_DDC_DATA:
+		ddc->regs = &ddc_data_regs[en];
+		ddc->base.regs = &ddc_data_regs[en].gpio;
+		break;
+	case GPIO_ID_DDC_CLOCK:
+		ddc->regs = &ddc_clk_regs[en];
+		ddc->base.regs = &ddc_clk_regs[en].gpio;
+		break;
+	default:
+		ASSERT_CRITICAL(false);
+		return;
+	}
+
+	ddc->shifts = &ddc_shift;
+	ddc->masks = &ddc_mask;
+
+}
+
 static bool construct(
 	struct hw_ddc *ddc,
 	enum gpio_id id,
@@ -285,23 +310,6 @@ static bool construct(
 
 	ddc->base.base.funcs = &funcs;
 
-	switch (id) {
-	case GPIO_ID_DDC_DATA:
-		ddc->regs = &ddc_data_regs[en];
-		ddc->base.regs = &ddc_data_regs[en].gpio;
-		break;
-	case GPIO_ID_DDC_CLOCK:
-		ddc->regs = &ddc_clk_regs[en];
-		ddc->base.regs = &ddc_clk_regs[en].gpio;
-		break;
-	default:
-		ASSERT_CRITICAL(false);
-		return false;
-	}
-
-	ddc->shifts = &ddc_shift;
-	ddc->masks = &ddc_mask;
-
 	return true;
 }
 
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h
index 1f14be3..cd907ae 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h
@@ -31,4 +31,7 @@ struct hw_gpio_pin *dal_hw_ddc_dce80_create(
 	enum gpio_id id,
 	uint32_t en);
 
+void define_ddc_dce80_registers(
+		struct hw_gpio_pin *pin,
+		uint32_t en);
 #endif
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c
index 79819c0..a007a0a 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c
@@ -90,7 +90,8 @@ static const struct hw_factory_funcs funcs = {
 	.create_hpd = dal_hw_hpd_create,
 	.create_sync = NULL,
 	.create_gsl = NULL,
-	.define_hpd_registers = define_hpd_registers
+	.define_hpd_registers = define_hpd_registers,
+	.define_ddc_registers = define_ddc_dce80_registers
 };
 
 void dal_hw_factory_dce80_init(
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c b/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c
index c6d5bd1..1dfcff5 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c
@@ -244,10 +244,12 @@ enum gpio_result dal_gpio_service_open(
 	case GPIO_ID_DDC_DATA:
 		pin = service->factory.funcs->create_ddc_data(
 			service->ctx, id, en);
+		service->factory.funcs->define_ddc_registers(pin, en);
 	break;
 	case GPIO_ID_DDC_CLOCK:
 		pin = service->factory.funcs->create_ddc_clock(
 			service->ctx, id, en);
+		service->factory.funcs->define_ddc_registers(pin, en);
 	break;
 	case GPIO_ID_GENERIC:
 		pin = service->factory.funcs->create_generic(
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h b/drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h
index 6d7851e..6e4dd35 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h
@@ -60,6 +60,9 @@ struct hw_factory {
 		void (*define_hpd_registers)(
 				struct hw_gpio_pin *pin,
 				uint32_t en);
+		void (*define_ddc_registers)(
+				struct hw_gpio_pin *pin,
+				uint32_t en);
 	} *funcs;
 };
 
-- 
2.7.4

