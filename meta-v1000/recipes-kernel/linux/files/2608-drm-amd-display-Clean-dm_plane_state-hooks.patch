From 388e0fe324f8a67a051f6eb02d3b14a2d981c769 Mon Sep 17 00:00:00 2001
From: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Date: Fri, 7 Jul 2017 10:15:18 -0400
Subject: [PATCH 2608/2831] drm/amd/display: Clean dm_plane_state hooks.

New surface is created in check only, in duplicate we just
reference exsisting surface and in destroy we release it.

Change-Id: I8a04cb7bdca9924a95929c19ad2bbbe3d80e6bd5
Signed-off-by: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Reviewed-by: Tony Cheng <Tony.Cheng@amd.com>
Acked-by: Harry Wentland <Harry.Wentland@amd.com>
---
 .../drm/amd/display/amdgpu_dm/amdgpu_dm_types.c    | 43 +++-------------------
 1 file changed, 6 insertions(+), 37 deletions(-)

diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
index 599ff79..0ac8ca1 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
@@ -1556,7 +1556,6 @@ const struct drm_encoder_helper_funcs amdgpu_dm_encoder_helper_funcs = {
 static void dm_drm_plane_reset(struct drm_plane *plane)
 {
 	struct dm_plane_state *amdgpu_state = NULL;
-	struct amdgpu_device *adev = plane->dev->dev_private;
 
 	if (plane->state)
 		plane->funcs->atomic_destroy_state(plane, plane->state);
@@ -1567,9 +1566,6 @@ static void dm_drm_plane_reset(struct drm_plane *plane)
 		plane->state = &amdgpu_state->base;
 		plane->state->plane = plane;
 		plane->state->rotation = DRM_ROTATE_0;
-
-		amdgpu_state->dc_surface = dc_create_surface(adev->dm.dc);
-		WARN_ON(!amdgpu_state->dc_surface);
 	}
 	else
 		WARN_ON(1);
@@ -1579,35 +1575,17 @@ static struct drm_plane_state *
 dm_drm_plane_duplicate_state(struct drm_plane *plane)
 {
 	struct dm_plane_state *dm_plane_state, *old_dm_plane_state;
-	struct amdgpu_device *adev = plane->dev->dev_private;
 
 	old_dm_plane_state = to_dm_plane_state(plane->state);
 	dm_plane_state = kzalloc(sizeof(*dm_plane_state), GFP_KERNEL);
 	if (!dm_plane_state)
 		return NULL;
 
-	if (old_dm_plane_state->dc_surface) {
-		struct dc_surface *dc_surface = dc_create_surface(adev->dm.dc);
-		if (WARN_ON(!dc_surface))
-			return NULL;
-
-		__drm_atomic_helper_plane_duplicate_state(plane, &dm_plane_state->base);
-
-		memcpy(dc_surface, old_dm_plane_state->dc_surface, sizeof(*dc_surface));
+	__drm_atomic_helper_plane_duplicate_state(plane, &dm_plane_state->base);
 
-		if (old_dm_plane_state->dc_surface->gamma_correction)
-			dc_gamma_retain(dc_surface->gamma_correction);
-
-		if (old_dm_plane_state->dc_surface->in_transfer_func)
-			dc_transfer_func_retain(dc_surface->in_transfer_func);
-
-		dm_plane_state->dc_surface = dc_surface;
-
-		/*TODO Check for inferred values to be reset */
-	}
-	else {
-		WARN_ON(1);
-		return NULL;
+	if (old_dm_plane_state->dc_surface) {
+		dm_plane_state->dc_surface = old_dm_plane_state->dc_surface;
+		dc_surface_retain(dm_plane_state->dc_surface);
 	}
 
 	return &dm_plane_state->base;
@@ -1618,17 +1596,8 @@ void dm_drm_plane_destroy_state(struct drm_plane *plane,
 {
 	struct dm_plane_state *dm_plane_state = to_dm_plane_state(state);
 
-	if (dm_plane_state->dc_surface) {
-		struct dc_surface *dc_surface = dm_plane_state->dc_surface;
-
-		if (dc_surface->gamma_correction)
-			dc_gamma_release(&dc_surface->gamma_correction);
-
-		if (dc_surface->in_transfer_func)
-			dc_transfer_func_release(dc_surface->in_transfer_func);
-
-		dc_surface_release(dc_surface);
-	}
+	if (dm_plane_state->dc_surface)
+		dc_surface_release(dm_plane_state->dc_surface);
 
 	__drm_atomic_helper_plane_destroy_state(state);
 	kfree(dm_plane_state);
-- 
2.7.4

