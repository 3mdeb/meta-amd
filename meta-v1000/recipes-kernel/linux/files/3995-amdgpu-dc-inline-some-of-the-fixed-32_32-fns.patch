From a679690e3355f7d749560269cf009f817dde0a83 Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Fri, 29 Sep 2017 15:45:07 +1000
Subject: [PATCH 3995/5855] amdgpu/dc: inline some of the fixed 32_32 fns

This drops ~400 bytes here.

Signed-off-by: Dave Airlie <airlied@redhat.com>
Reviewed-by: Harry Wentland <harry.wentland@amd.com>
---
 drivers/gpu/drm/amd/display/dc/basics/fixpt32_32.c | 60 -----------------
 drivers/gpu/drm/amd/display/include/fixed32_32.h   | 76 +++++++++++++++++-----
 2 files changed, 61 insertions(+), 75 deletions(-)

diff --git a/drivers/gpu/drm/amd/display/dc/basics/fixpt32_32.c b/drivers/gpu/drm/amd/display/dc/basics/fixpt32_32.c
index 911e90b..4d3aaa8 100644
--- a/drivers/gpu/drm/amd/display/dc/basics/fixpt32_32.c
+++ b/drivers/gpu/drm/amd/display/dc/basics/fixpt32_32.c
@@ -57,14 +57,6 @@ struct fixed32_32 dal_fixed32_32_from_fraction(uint32_t n, uint32_t d)
 	return fx;
 }
 
-struct fixed32_32 dal_fixed32_32_from_int(uint32_t value)
-{
-	struct fixed32_32 fx;
-
-	fx.value = (uint64_t)value<<32;
-	return fx;
-}
-
 struct fixed32_32 dal_fixed32_32_add(
 	struct fixed32_32 lhs,
 	struct fixed32_32 rhs)
@@ -155,67 +147,15 @@ struct fixed32_32 dal_fixed32_32_div_int(struct fixed32_32 lhs, uint32_t rhs)
 	return fx;
 }
 
-struct fixed32_32 dal_fixed32_32_min(
-	struct fixed32_32 lhs,
-	struct fixed32_32 rhs)
-{
-	return (lhs.value < rhs.value) ? lhs : rhs;
-}
-
-struct fixed32_32 dal_fixed32_32_max(
-	struct fixed32_32 lhs,
-	struct fixed32_32 rhs)
-{
-	return (lhs.value > rhs.value) ? lhs : rhs;
-}
-
-bool dal_fixed32_32_gt(struct fixed32_32 lhs, struct fixed32_32 rhs)
-{
-	return lhs.value > rhs.value;
-}
-bool dal_fixed32_32_gt_int(struct fixed32_32 lhs, uint32_t rhs)
-{
-	return lhs.value > ((uint64_t)rhs<<32);
-}
-
-bool dal_fixed32_32_lt(struct fixed32_32 lhs, struct fixed32_32 rhs)
-{
-	return lhs.value < rhs.value;
-}
-
-bool dal_fixed32_32_le(struct fixed32_32 lhs, struct fixed32_32 rhs)
-{
-	return lhs.value <= rhs.value;
-}
-
-bool dal_fixed32_32_lt_int(struct fixed32_32 lhs, uint32_t rhs)
-{
-	return lhs.value < ((uint64_t)rhs<<32);
-}
-
-bool dal_fixed32_32_le_int(struct fixed32_32 lhs, uint32_t rhs)
-{
-	return lhs.value <= ((uint64_t)rhs<<32);
-}
-
 uint32_t dal_fixed32_32_ceil(struct fixed32_32 v)
 {
 	ASSERT((uint32_t)v.value ? (v.value >> 32) + 1 >= 1 : true);
 	return (v.value>>32) + ((uint32_t)v.value ? 1 : 0);
 }
 
-uint32_t dal_fixed32_32_floor(struct fixed32_32 v)
-{
-	return v.value>>32;
-}
-
 uint32_t dal_fixed32_32_round(struct fixed32_32 v)
 {
 	ASSERT(v.value + (1ULL<<31) >= (1ULL<<31));
 	return (v.value + (1ULL<<31))>>32;
 }
 
-bool dal_fixed32_32_eq(struct fixed32_32 lhs, struct fixed32_32 rhs)
-{
-	return lhs.value == rhs.value;
-}
diff --git a/drivers/gpu/drm/amd/display/include/fixed32_32.h b/drivers/gpu/drm/amd/display/include/fixed32_32.h
index c7ddd0e..9c70341 100644
--- a/drivers/gpu/drm/amd/display/include/fixed32_32.h
+++ b/drivers/gpu/drm/amd/display/include/fixed32_32.h
@@ -38,7 +38,14 @@ static const struct fixed32_32 dal_fixed32_32_one = { 0x100000000LL };
 static const struct fixed32_32 dal_fixed32_32_half = { 0x80000000LL };
 
 struct fixed32_32 dal_fixed32_32_from_fraction(uint32_t n, uint32_t d);
-struct fixed32_32 dal_fixed32_32_from_int(uint32_t value);
+static inline struct fixed32_32 dal_fixed32_32_from_int(uint32_t value)
+{
+	struct fixed32_32 fx;
+
+	fx.value = (uint64_t)value<<32;
+	return fx;
+}
+
 struct fixed32_32 dal_fixed32_32_add(
 	struct fixed32_32 lhs,
 	struct fixed32_32 rhs);
@@ -63,21 +70,60 @@ struct fixed32_32 dal_fixed32_32_div(
 struct fixed32_32 dal_fixed32_32_div_int(
 	struct fixed32_32 lhs,
 	uint32_t rhs);
-struct fixed32_32 dal_fixed32_32_min(
-	struct fixed32_32 lhs,
-	struct fixed32_32 rhs);
-struct fixed32_32 dal_fixed32_32_max(
-	struct fixed32_32 lhs,
-	struct fixed32_32 rhs);
-bool dal_fixed32_32_gt(struct fixed32_32 lhs, struct fixed32_32 rhs);
-bool dal_fixed32_32_gt_int(struct fixed32_32 lhs, uint32_t rhs);
-bool dal_fixed32_32_lt(struct fixed32_32 lhs, struct fixed32_32 rhs);
-bool dal_fixed32_32_lt_int(struct fixed32_32 lhs, uint32_t rhs);
-bool dal_fixed32_32_le(struct fixed32_32 lhs, struct fixed32_32 rhs);
-bool dal_fixed32_32_le_int(struct fixed32_32 lhs, uint32_t rhs);
-bool dal_fixed32_32_eq(struct fixed32_32 lhs, struct fixed32_32 rhs);
+
+static inline struct fixed32_32 dal_fixed32_32_min(struct fixed32_32 lhs,
+						   struct fixed32_32 rhs)
+{
+	return (lhs.value < rhs.value) ? lhs : rhs;
+}
+
+static inline struct fixed32_32 dal_fixed32_32_max(struct fixed32_32 lhs,
+						   struct fixed32_32 rhs)
+{
+	return (lhs.value > rhs.value) ? lhs : rhs;
+}
+
+static inline bool dal_fixed32_32_gt(struct fixed32_32 lhs, struct fixed32_32 rhs)
+{
+	return lhs.value > rhs.value;
+}
+
+static inline bool dal_fixed32_32_gt_int(struct fixed32_32 lhs, uint32_t rhs)
+{
+	return lhs.value > ((uint64_t)rhs<<32);
+}
+
+static inline bool dal_fixed32_32_lt(struct fixed32_32 lhs, struct fixed32_32 rhs)
+{
+	return lhs.value < rhs.value;
+}
+
+static inline bool dal_fixed32_32_lt_int(struct fixed32_32 lhs, uint32_t rhs)
+{
+	return lhs.value < ((uint64_t)rhs<<32);
+}
+
+static inline bool dal_fixed32_32_le(struct fixed32_32 lhs, struct fixed32_32 rhs)
+{
+	return lhs.value <= rhs.value;
+}
+
+static inline bool dal_fixed32_32_le_int(struct fixed32_32 lhs, uint32_t rhs)
+{
+	return lhs.value <= ((uint64_t)rhs<<32);
+}
+
+static inline bool dal_fixed32_32_eq(struct fixed32_32 lhs, struct fixed32_32 rhs)
+{
+	return lhs.value == rhs.value;
+}
+
 uint32_t dal_fixed32_32_ceil(struct fixed32_32 value);
-uint32_t dal_fixed32_32_floor(struct fixed32_32 value);
+static inline uint32_t dal_fixed32_32_floor(struct fixed32_32 value)
+{
+	return value.value>>32;
+}
+
 uint32_t dal_fixed32_32_round(struct fixed32_32 value);
 
 #endif
-- 
2.7.4

