From 8508e17c70311de9de1a61c7dbb9341400235418 Mon Sep 17 00:00:00 2001
From: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date: Mon, 8 Aug 2016 18:10:09 -0400
Subject: [PATCH 0731/1722] drm/amd/dal: refactor mpo bandwidth down sequence
 step 1

Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc.c               | 42 +++++++++++-----------
 .../drm/amd/dal/dc/dce100/dce100_hw_sequencer.c    |  3 +-
 .../drm/amd/dal/dc/dce110/dce110_hw_sequencer.c    | 22 ++++++------
 .../gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c  |  3 +-
 drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h      |  3 +-
 5 files changed, 34 insertions(+), 39 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index ca715e0..167024a 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -892,8 +892,14 @@ bool dc_commit_targets(
 	/* Any pending context is no longer valid once a setmode happens*/
 	if (core_dc->pending_context) {
 		resource_validate_ctx_destruct(core_dc->pending_context);
+		dm_free(core_dc->pending_context);
 		core_dc->pending_context = NULL;
 	}
+	if (core_dc->retired_context) {
+		resource_validate_ctx_destruct(core_dc->retired_context);
+		dm_free(core_dc->retired_context);
+		core_dc->retired_context = NULL;
+	}
 
 	return (result == DC_OK);
 
@@ -1105,7 +1111,7 @@ bool dc_isr_commit_surfaces_to_target(
                 core_dc->pending_context->locked = false;
         }
         if (core_dc->pending_context) {
-                ASSERT(core_dc->retired_context == NULL);
+                ASSERT(core_dc->retired_context == NULL || core_dc->retired_context == core_dc->current_context);
                 core_dc->retired_context = core_dc->current_context;
                 core_dc->current_context = core_dc->pending_context;
                 core_dc->pending_context = NULL;
@@ -1114,42 +1120,34 @@ bool dc_isr_commit_surfaces_to_target(
         return status == DC_OK;
 }
 
-bool dc_post_commit_surfaces_to_target(
-                struct dc *dc)
+bool dc_post_commit_surfaces_to_target(struct dc *dc)
 {
         struct core_dc *core_dc = DC_TO_CORE(dc);
+	int i;
         
-	if (!core_dc->pending_context)
+        if (!core_dc->retired_context)
                 return true;
  
-        if (core_dc->pending_context->locked)
-                dc_isr_commit_surfaces_to_target(dc, NULL, NULL, 0);
- 
-        for (i = 0; i < core_dc->pending_context->res_ctx.pool->pipe_count; i++) {
-                if (core_dc->current_context->res_ctx.pipe_ctx[i].stream != NULL
-                                && core_dc->pending_context->res_ctx.pipe_ctx[i].stream == NULL) {
+        for (i = 0; i < core_dc->current_context->res_ctx.pool->pipe_count; i++) {
+                if (core_dc->retired_context->res_ctx.pipe_ctx[i].stream != NULL
+                                && core_dc->current_context->res_ctx.pipe_ctx[i].stream == NULL) { 
                         core_dc->hwss.enable_display_power_gating(
                                 core_dc->ctx, i, core_dc->ctx->dc_bios,
                                 PIPE_GATING_CONTROL_ENABLE);
                         core_dc->current_context->res_ctx.pipe_ctx[i].xfm->funcs->transform_reset(
                                         core_dc->current_context->res_ctx.pipe_ctx[i].xfm);
-                        memset(&core_dc->pending_context->res_ctx.pipe_ctx[i], 0, sizeof(struct pipe_ctx));
+                        memset(&core_dc->current_context->res_ctx.pipe_ctx[i], 0, sizeof(struct pipe_ctx));
                 }
         }
  
-        if (core_dc->hwss.decrease_bandwidth(core_dc, core_dc->pending_context))
+        if (core_dc->hwss.decrease_bandwidth(core_dc))
                 pplib_apply_display_requirements(
-                                core_dc, core_dc->pending_context, &core_dc->pending_context->pp_display_cfg);
+                                core_dc, core_dc->current_context, &core_dc->current_context->pp_display_cfg);
+ 
+        resource_validate_ctx_destruct(core_dc->retired_context);
+        dm_free(core_dc->retired_context);
+        core_dc->retired_context = NULL;
   
-	resource_validate_ctx_destruct(core_dc->current_context);
-	dm_free(core_dc->current_context);
-        core_dc->current_context = core_dc->pending_context;
-        core_dc->pending_context = NULL;
-        if (core_dc->retired_context) {
-                resource_validate_ctx_destruct(core_dc->retired_context);
-                dm_free(core_dc->retired_context);
-                core_dc->retired_context = NULL;
-        }
 	return true;
 }
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_hw_sequencer.c
index 14c5fa8..3d3ec47 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_hw_sequencer.c
@@ -242,8 +242,7 @@ static void set_displaymarks(
 	/* Do nothing until we have proper bandwitdth calcs */
 }
 
-static bool decrease_bandwidth(
-		struct core_dc *dc, struct validate_context *context)
+static bool decrease_bandwidth(struct core_dc *dc)
 {
 	/* Do nothing until we have proper bandwitdth calcs */
 	return true;
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
index 8a24658..e949d11 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
@@ -1881,30 +1881,30 @@ static void dce110_increase_watermarks_for_pipe(
 		program_wm_for_pipe(dc, pipe_ctx, context);
 }
 
-static bool dce110_decrease_bandwidth(
-		struct core_dc *dc,
-		struct validate_context *context)
+static bool dce110_decrease_bandwidth(struct core_dc *dc)
 {
 	int i;
 	bool ret = false;
 
-	for (i = 0; i < context->res_ctx.pool->pipe_count; i++) {
-		struct pipe_ctx *pipe_ctx = &context->res_ctx.pipe_ctx[i];
+	ASSERT(dc->current_context && dc->retired_context);
+
+	for (i = 0; i < dc->current_context->res_ctx.pool->pipe_count; i++) {
+		struct pipe_ctx *pipe_ctx = &dc->current_context->res_ctx.pipe_ctx[i];
 
-		if (!dc->current_context->res_ctx.pipe_ctx[i].stream
+		if (!dc->retired_context->res_ctx.pipe_ctx[i].stream
 				|| !pipe_ctx->stream)
 			continue;
 
 		/* Reverse context order to check for decrease */
-		if (did_watermarks_increase(pipe_ctx, dc->current_context, context)) {
-			program_wm_for_pipe(dc, pipe_ctx, context);
+		if (did_watermarks_increase(pipe_ctx, dc->retired_context, dc->current_context)) {
+			program_wm_for_pipe(dc, pipe_ctx, dc->current_context);
 			ret = true;
 		}
 	}
 
-	if (dc->current_context->bw_results.dispclk_khz
-			> context->bw_results.dispclk_khz) {
-		dc->hwss.set_display_clock(context);
+	if (dc->retired_context->bw_results.dispclk_khz
+			> dc->current_context->bw_results.dispclk_khz) {
+		dc->hwss.set_display_clock(dc->current_context);
 		ret = true;
 	}
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c
index 49d9a84..3f376cc 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c
@@ -226,8 +226,7 @@ static void set_displaymarks(
 	/* Do nothing until we have proper bandwitdth calcs */
 }
 
-static bool decrease_bandwidth(
-		struct core_dc *dc, struct validate_context *context)
+static bool decrease_bandwidth(struct core_dc *dc)
 {
 	/* Do nothing until we have proper bandwitdth calcs */
 	return true;
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h b/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
index cde3c0b..3ebe8c4 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
@@ -140,8 +140,7 @@ struct hw_sequencer_funcs {
 
 	void (*set_display_clock)(struct validate_context *context);
 
-	bool (*decrease_bandwidth)(struct core_dc *dc,
-			struct validate_context *context);
+	bool (*decrease_bandwidth)(struct core_dc *dc);
 
 	void (*set_drr)(struct pipe_ctx **pipe_ctx, int num_pipes,
 			int vmin, int vmax);
-- 
2.7.4

