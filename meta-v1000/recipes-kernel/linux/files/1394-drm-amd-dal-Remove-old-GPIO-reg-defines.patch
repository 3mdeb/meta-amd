From 2651b92af11cdf64529b8fac30d6699169458365 Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Wed, 19 Oct 2016 19:16:53 -0400
Subject: [PATCH 1394/1722] drm/amd/dal: Remove old GPIO reg defines

Change-Id: Ia8af548618eebb319b9db765798cc1048d58338b
Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c | 379 ---------------------
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c | 165 ---------
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h |   5 -
 .../gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c   | 379 ---------------------
 .../gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c   | 225 ++----------
 drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h           |   1 -
 drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.c          |  13 -
 drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.h          |   2 -
 8 files changed, 19 insertions(+), 1150 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
index b669641..d50643e 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
@@ -78,8 +78,6 @@ static const struct ddc_sh_mask ddc_mask = {
 		DDC_MASK_SH_LIST(_MASK)
 };
 
-/****************************** END END END new register headers */
-
 static void destruct(
 	struct hw_ddc *pin)
 {
@@ -98,371 +96,6 @@ static void destroy(
 	*ptr = NULL;
 }
 
-struct hw_ddc_dce110_init {
-	struct hw_gpio_pin_reg hw_gpio_data_reg;
-	uint32_t i2c_ddc_setup;
-};
-
-static const struct hw_ddc_dce110_init
-	hw_ddc_dce110_init_data[GPIO_DDC_LINE_COUNT] = {
-	/* GPIO_DDC_LINE_DDC1 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC1_MASK,
-				DC_GPIO_DDC1_MASK__DC_GPIO_DDC1DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_A,
-				DC_GPIO_DDC1_A__DC_GPIO_DDC1DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_EN,
-				DC_GPIO_DDC1_EN__DC_GPIO_DDC1DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_Y,
-				DC_GPIO_DDC1_Y__DC_GPIO_DDC1DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC1_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC2 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC2_MASK,
-				DC_GPIO_DDC2_MASK__DC_GPIO_DDC2DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_A,
-				DC_GPIO_DDC2_A__DC_GPIO_DDC2DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_EN,
-				DC_GPIO_DDC2_EN__DC_GPIO_DDC2DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_Y,
-				DC_GPIO_DDC2_Y__DC_GPIO_DDC2DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC2_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC3 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC3_MASK,
-				DC_GPIO_DDC3_MASK__DC_GPIO_DDC3DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_A,
-				DC_GPIO_DDC3_A__DC_GPIO_DDC3DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_EN,
-				DC_GPIO_DDC3_EN__DC_GPIO_DDC3DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_Y,
-				DC_GPIO_DDC3_Y__DC_GPIO_DDC3DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC3_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC4 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC4_MASK,
-				DC_GPIO_DDC4_MASK__DC_GPIO_DDC4DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_A,
-				DC_GPIO_DDC4_A__DC_GPIO_DDC4DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_EN,
-				DC_GPIO_DDC4_EN__DC_GPIO_DDC4DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_Y,
-				DC_GPIO_DDC4_Y__DC_GPIO_DDC4DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC4_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC5 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC5_MASK,
-				DC_GPIO_DDC5_MASK__DC_GPIO_DDC5DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_A,
-				DC_GPIO_DDC5_A__DC_GPIO_DDC5DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_EN,
-				DC_GPIO_DDC5_EN__DC_GPIO_DDC5DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_Y,
-				DC_GPIO_DDC5_Y__DC_GPIO_DDC5DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC5_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC6 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC6_MASK,
-				DC_GPIO_DDC6_MASK__DC_GPIO_DDC6DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_A,
-				DC_GPIO_DDC6_A__DC_GPIO_DDC6DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_EN,
-				DC_GPIO_DDC6_EN__DC_GPIO_DDC6DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_Y,
-				DC_GPIO_DDC6_Y__DC_GPIO_DDC6DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC6_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC_VGA */
-	{
-		{
-			{
-				mmDC_GPIO_DDCVGA_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_A,
-				DC_GPIO_DDCVGA_A__DC_GPIO_DDCVGADATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_EN,
-				DC_GPIO_DDCVGA_EN__DC_GPIO_DDCVGADATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_Y,
-				DC_GPIO_DDCVGA_Y__DC_GPIO_DDCVGADATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDCVGA_SETUP
-	},
-	/* GPIO_DDC_LINE_I2CPAD */
-	{
-		{
-			{
-				mmDC_GPIO_I2CPAD_MASK,
-				DC_GPIO_I2CPAD_MASK__DC_GPIO_SDA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_A,
-				DC_GPIO_I2CPAD_A__DC_GPIO_SDA_A_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_EN,
-				DC_GPIO_I2CPAD_EN__DC_GPIO_SDA_EN_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_Y,
-				DC_GPIO_I2CPAD_Y__DC_GPIO_SDA_Y_MASK
-			}
-		},
-		0
-	}
-};
-
-static const struct hw_ddc_dce110_init
-	hw_ddc_dce110_init_clock[GPIO_DDC_LINE_COUNT] = {
-	/* GPIO_DDC_LINE_DDC1 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC1_MASK,
-				DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_A,
-				DC_GPIO_DDC1_A__DC_GPIO_DDC1CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_EN,
-				DC_GPIO_DDC1_EN__DC_GPIO_DDC1CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_Y,
-				DC_GPIO_DDC1_Y__DC_GPIO_DDC1CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC1_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC2 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC2_MASK,
-				DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_A,
-				DC_GPIO_DDC2_A__DC_GPIO_DDC2CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_EN,
-				DC_GPIO_DDC2_EN__DC_GPIO_DDC2CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_Y,
-				DC_GPIO_DDC2_Y__DC_GPIO_DDC2CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC2_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC3 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC3_MASK,
-				DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_A,
-				DC_GPIO_DDC3_A__DC_GPIO_DDC3CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_EN,
-				DC_GPIO_DDC3_EN__DC_GPIO_DDC3CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_Y,
-				DC_GPIO_DDC3_Y__DC_GPIO_DDC3CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC3_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC4 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC4_MASK,
-				DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_A,
-				DC_GPIO_DDC4_A__DC_GPIO_DDC4CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_EN,
-				DC_GPIO_DDC4_EN__DC_GPIO_DDC4CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_Y,
-				DC_GPIO_DDC4_Y__DC_GPIO_DDC4CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC4_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC5 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC5_MASK,
-				DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_A,
-				DC_GPIO_DDC5_A__DC_GPIO_DDC5CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_EN,
-				DC_GPIO_DDC5_EN__DC_GPIO_DDC5CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_Y,
-				DC_GPIO_DDC5_Y__DC_GPIO_DDC5CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC5_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC6 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC6_MASK,
-				DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_A,
-				DC_GPIO_DDC6_A__DC_GPIO_DDC6CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_EN,
-				DC_GPIO_DDC6_EN__DC_GPIO_DDC6CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_Y,
-				DC_GPIO_DDC6_Y__DC_GPIO_DDC6CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC6_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC_VGA */
-	{
-		{
-			{
-				mmDC_GPIO_DDCVGA_MASK,
-				DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_A,
-				DC_GPIO_DDCVGA_A__DC_GPIO_DDCVGACLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_EN,
-				DC_GPIO_DDCVGA_EN__DC_GPIO_DDCVGACLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_Y,
-				DC_GPIO_DDCVGA_Y__DC_GPIO_DDCVGACLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDCVGA_SETUP
-	},
-	/* GPIO_DDC_LINE_I2CPAD */
-	{
-		{
-			{
-				mmDC_GPIO_I2CPAD_MASK,
-				DC_GPIO_I2CPAD_MASK__DC_GPIO_SCL_MASK_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_A,
-				DC_GPIO_I2CPAD_A__DC_GPIO_SCL_A_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_EN,
-				DC_GPIO_I2CPAD_EN__DC_GPIO_SCL_EN_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_Y,
-				DC_GPIO_I2CPAD_Y__DC_GPIO_SCL_Y_MASK
-			}
-		},
-		0
-	}
-};
-
 static enum gpio_result set_config(
 	struct hw_gpio_pin *ptr,
 	const struct gpio_config_data *config_data)
@@ -637,8 +270,6 @@ static bool construct(
 	uint32_t en,
 	struct dc_context *ctx)
 {
-	const struct hw_ddc_dce110_init *init;
-
 	if ((en < GPIO_DDC_LINE_MIN) || (en > GPIO_DDC_LINE_MAX)) {
 		ASSERT_CRITICAL(false);
 		return false;
@@ -653,22 +284,12 @@ static bool construct(
 
 	switch (id) {
 	case GPIO_ID_DDC_DATA:
-		init = hw_ddc_dce110_init_data + en;
-
-		ddc->base.pin_reg = init->hw_gpio_data_reg;
-		ddc->i2c_ddc_setup = init->i2c_ddc_setup;
 		ddc->regs = &ddc_data_regs[en];
 		ddc->base.regs = &ddc_data_regs[en].gpio;
-
 		break;
 	case GPIO_ID_DDC_CLOCK:
-		init = hw_ddc_dce110_init_clock + en;
-
-		ddc->base.pin_reg = init->hw_gpio_data_reg;
-		ddc->i2c_ddc_setup = init->i2c_ddc_setup;
 		ddc->regs = &ddc_clk_regs[en];
 		ddc->base.regs = &ddc_clk_regs[en].gpio;
-
 		break;
 	default:
 		ASSERT_CRITICAL(false);
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c
index 78c620a..5a90dfc 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c
@@ -91,165 +91,6 @@ static void destroy(
 	*ptr = NULL;
 }
 
-struct hw_gpio_generic_dce110_init {
-	struct hw_gpio_pin_reg hw_gpio_data_reg;
-	struct hw_hpd_dce110_addr addr;
-};
-
-static const struct hw_gpio_generic_dce110_init
-	hw_gpio_generic_dce110_init[GPIO_HPD_COUNT] = {
-	/* GPIO_HPD_1 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD1_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD1_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD1_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD1_Y_MASK
-			}
-		},
-		{
-			mmHPD0_DC_HPD_INT_STATUS,
-			mmHPD0_DC_HPD_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_2 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD2_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD2_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD2_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD2_Y_MASK
-			}
-		},
-		{
-			mmHPD1_DC_HPD_INT_STATUS,
-			mmHPD1_DC_HPD_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_3 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD3_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD3_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD3_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD3_Y_MASK
-			}
-		},
-		{
-			mmHPD2_DC_HPD_INT_STATUS,
-			mmHPD2_DC_HPD_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_4 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD4_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD4_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD4_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD4_Y_MASK
-			}
-		},
-		{
-			mmHPD3_DC_HPD_INT_STATUS,
-			mmHPD3_DC_HPD_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_5 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD5_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD5_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD5_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD5_Y_MASK
-			}
-		},
-		{
-			mmHPD4_DC_HPD_INT_STATUS,
-			mmHPD4_DC_HPD_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_6 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD6_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD6_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD6_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD6_Y_MASK
-			}
-		},
-		{
-			mmHPD5_DC_HPD_INT_STATUS,
-			mmHPD5_DC_HPD_TOGGLE_FILT_CNTL
-		}
-	}
-};
-
 static enum gpio_result get_value(
 	const struct hw_gpio_pin *ptr,
 	uint32_t *value)
@@ -305,8 +146,6 @@ static bool construct(
 	uint32_t en,
 	struct dc_context *ctx)
 {
-	const struct hw_gpio_generic_dce110_init *init;
-
 	if (id != GPIO_ID_HPD) {
 		ASSERT_CRITICAL(false);
 		return false;
@@ -324,10 +163,6 @@ static bool construct(
 
 	hpd->base.base.funcs = &funcs;
 
-	init = hw_gpio_generic_dce110_init + en;
-
-	hpd->base.pin_reg = init->hw_gpio_data_reg;
-
 	hpd->regs = &hpd_regs[en];
 	hpd->shifts = &hpd_shift;
 	hpd->masks = &hpd_mask;
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h
index 82346d5..c351175 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h
@@ -26,11 +26,6 @@
 #ifndef __DAL_HW_HPD_DCE110_H__
 #define __DAL_HW_HPD_DCE110_H__
 
-struct hw_hpd_dce110_addr {
-	uint32_t DC_HPD_INT_STATUS;
-	uint32_t DC_HPD_TOGGLE_FILT_CNTL;
-};
-
 struct hw_gpio_pin *dal_hw_hpd_dce110_create(
 	struct dc_context *ctx,
 	enum gpio_id id,
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
index f626d04..723b6c7 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
@@ -78,8 +78,6 @@ static const struct ddc_sh_mask ddc_mask = {
 		DDC_MASK_SH_LIST(_MASK)
 };
 
-/****************************** END END END new register headers */
-
 static void destruct(
 	struct hw_ddc *pin)
 {
@@ -98,371 +96,6 @@ static void destroy(
 	*ptr = NULL;
 }
 
-struct hw_ddc_dce80_init {
-	struct hw_gpio_pin_reg hw_gpio_data_reg;
-	uint32_t i2c_ddc_setup;
-};
-
-static const struct hw_ddc_dce80_init
-	hw_ddc_dce80_init_data[GPIO_DDC_LINE_COUNT] = {
-	/* GPIO_DDC_LINE_DDC1 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC1_MASK,
-				DC_GPIO_DDC1_MASK__DC_GPIO_DDC1DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_A,
-				DC_GPIO_DDC1_A__DC_GPIO_DDC1DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_EN,
-				DC_GPIO_DDC1_EN__DC_GPIO_DDC1DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_Y,
-				DC_GPIO_DDC1_Y__DC_GPIO_DDC1DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC1_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC2 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC2_MASK,
-				DC_GPIO_DDC2_MASK__DC_GPIO_DDC2DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_A,
-				DC_GPIO_DDC2_A__DC_GPIO_DDC2DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_EN,
-				DC_GPIO_DDC2_EN__DC_GPIO_DDC2DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_Y,
-				DC_GPIO_DDC2_Y__DC_GPIO_DDC2DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC2_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC3 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC3_MASK,
-				DC_GPIO_DDC3_MASK__DC_GPIO_DDC3DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_A,
-				DC_GPIO_DDC3_A__DC_GPIO_DDC3DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_EN,
-				DC_GPIO_DDC3_EN__DC_GPIO_DDC3DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_Y,
-				DC_GPIO_DDC3_Y__DC_GPIO_DDC3DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC3_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC4 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC4_MASK,
-				DC_GPIO_DDC4_MASK__DC_GPIO_DDC4DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_A,
-				DC_GPIO_DDC4_A__DC_GPIO_DDC4DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_EN,
-				DC_GPIO_DDC4_EN__DC_GPIO_DDC4DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_Y,
-				DC_GPIO_DDC4_Y__DC_GPIO_DDC4DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC4_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC5 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC5_MASK,
-				DC_GPIO_DDC5_MASK__DC_GPIO_DDC5DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_A,
-				DC_GPIO_DDC5_A__DC_GPIO_DDC5DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_EN,
-				DC_GPIO_DDC5_EN__DC_GPIO_DDC5DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_Y,
-				DC_GPIO_DDC5_Y__DC_GPIO_DDC5DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC5_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC6 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC6_MASK,
-				DC_GPIO_DDC6_MASK__DC_GPIO_DDC6DATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_A,
-				DC_GPIO_DDC6_A__DC_GPIO_DDC6DATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_EN,
-				DC_GPIO_DDC6_EN__DC_GPIO_DDC6DATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_Y,
-				DC_GPIO_DDC6_Y__DC_GPIO_DDC6DATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC6_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC_VGA */
-	{
-		{
-			{
-				mmDC_GPIO_DDCVGA_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_A,
-				DC_GPIO_DDCVGA_A__DC_GPIO_DDCVGADATA_A_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_EN,
-				DC_GPIO_DDCVGA_EN__DC_GPIO_DDCVGADATA_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_Y,
-				DC_GPIO_DDCVGA_Y__DC_GPIO_DDCVGADATA_Y_MASK
-			}
-		},
-		mmDC_I2C_DDCVGA_SETUP
-	},
-	/* GPIO_DDC_LINE_I2CPAD */
-	{
-		{
-			{
-				mmDC_GPIO_I2CPAD_MASK,
-				DC_GPIO_I2CPAD_MASK__DC_GPIO_SDA_MASK_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_A,
-				DC_GPIO_I2CPAD_A__DC_GPIO_SDA_A_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_EN,
-				DC_GPIO_I2CPAD_EN__DC_GPIO_SDA_EN_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_Y,
-				DC_GPIO_I2CPAD_Y__DC_GPIO_SDA_Y_MASK
-			}
-		},
-		0
-	}
-};
-
-static const struct hw_ddc_dce80_init
-	hw_ddc_dce80_init_clock[GPIO_DDC_LINE_COUNT] = {
-	/* GPIO_DDC_LINE_DDC1 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC1_MASK,
-				DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_A,
-				DC_GPIO_DDC1_A__DC_GPIO_DDC1CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_EN,
-				DC_GPIO_DDC1_EN__DC_GPIO_DDC1CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC1_Y,
-				DC_GPIO_DDC1_Y__DC_GPIO_DDC1CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC1_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC2 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC2_MASK,
-				DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_A,
-				DC_GPIO_DDC2_A__DC_GPIO_DDC2CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_EN,
-				DC_GPIO_DDC2_EN__DC_GPIO_DDC2CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC2_Y,
-				DC_GPIO_DDC2_Y__DC_GPIO_DDC2CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC2_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC3 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC3_MASK,
-				DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_A,
-				DC_GPIO_DDC3_A__DC_GPIO_DDC3CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_EN,
-				DC_GPIO_DDC3_EN__DC_GPIO_DDC3CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC3_Y,
-				DC_GPIO_DDC3_Y__DC_GPIO_DDC3CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC3_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC4 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC4_MASK,
-				DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_A,
-				DC_GPIO_DDC4_A__DC_GPIO_DDC4CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_EN,
-				DC_GPIO_DDC4_EN__DC_GPIO_DDC4CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC4_Y,
-				DC_GPIO_DDC4_Y__DC_GPIO_DDC4CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC4_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC5 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC5_MASK,
-				DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_A,
-				DC_GPIO_DDC5_A__DC_GPIO_DDC5CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_EN,
-				DC_GPIO_DDC5_EN__DC_GPIO_DDC5CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC5_Y,
-				DC_GPIO_DDC5_Y__DC_GPIO_DDC5CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC5_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC6 */
-	{
-		{
-			{
-				mmDC_GPIO_DDC6_MASK,
-				DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_A,
-				DC_GPIO_DDC6_A__DC_GPIO_DDC6CLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_EN,
-				DC_GPIO_DDC6_EN__DC_GPIO_DDC6CLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDC6_Y,
-				DC_GPIO_DDC6_Y__DC_GPIO_DDC6CLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDC6_SETUP
-	},
-	/* GPIO_DDC_LINE_DDC_VGA */
-	{
-		{
-			{
-				mmDC_GPIO_DDCVGA_MASK,
-				DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_MASK_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_A,
-				DC_GPIO_DDCVGA_A__DC_GPIO_DDCVGACLK_A_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_EN,
-				DC_GPIO_DDCVGA_EN__DC_GPIO_DDCVGACLK_EN_MASK
-			},
-			{
-				mmDC_GPIO_DDCVGA_Y,
-				DC_GPIO_DDCVGA_Y__DC_GPIO_DDCVGACLK_Y_MASK
-			}
-		},
-		mmDC_I2C_DDCVGA_SETUP
-	},
-	/* GPIO_DDC_LINE_I2CPAD */
-	{
-		{
-			{
-				mmDC_GPIO_I2CPAD_MASK,
-				DC_GPIO_I2CPAD_MASK__DC_GPIO_SCL_MASK_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_A,
-				DC_GPIO_I2CPAD_A__DC_GPIO_SCL_A_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_EN,
-				DC_GPIO_I2CPAD_EN__DC_GPIO_SCL_EN_MASK
-			},
-			{
-				mmDC_GPIO_I2CPAD_Y,
-				DC_GPIO_I2CPAD_Y__DC_GPIO_SCL_Y_MASK
-			}
-		},
-		0
-	}
-};
-
 static enum gpio_result set_config(
 	struct hw_gpio_pin *ptr,
 	const struct gpio_config_data *config_data)
@@ -637,8 +270,6 @@ static bool construct(
 	uint32_t en,
 	struct dc_context *ctx)
 {
-	const struct hw_ddc_dce80_init *init;
-
 	if ((en < GPIO_DDC_LINE_MIN) || (en > GPIO_DDC_LINE_MAX)) {
 		ASSERT_CRITICAL(false);
 		return false;
@@ -653,22 +284,12 @@ static bool construct(
 
 	switch (id) {
 	case GPIO_ID_DDC_DATA:
-		init = hw_ddc_dce80_init_data + en;
-
-		ddc->base.pin_reg = init->hw_gpio_data_reg;
-		ddc->i2c_ddc_setup = init->i2c_ddc_setup;
 		ddc->regs = &ddc_data_regs[en];
 		ddc->base.regs = &ddc_data_regs[en].gpio;
-
 		break;
 	case GPIO_ID_DDC_CLOCK:
-		init = hw_ddc_dce80_init_clock + en;
-
-		ddc->base.pin_reg = init->hw_gpio_data_reg;
-		ddc->i2c_ddc_setup = init->i2c_ddc_setup;
 		ddc->regs = &ddc_clk_regs[en];
 		ddc->base.regs = &ddc_clk_regs[en].gpio;
-
 		break;
 	default:
 		ASSERT_CRITICAL(false);
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c
index ea7aa7c..462acf2 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c
@@ -25,27 +25,15 @@
 
 #include "dm_services.h"
 
-/*
- * Pre-requisites: headers required by header of this unit
- */
 #include "include/gpio_types.h"
 #include "../hw_gpio.h"
 #include "../hw_hpd.h"
 
-/*
- * Header of this unit
- */
-
 #include "hw_hpd_dce80.h"
 
-/*
- * Post-requisites: headers required by this unit
- */
-
 #include "dce/dce_8_0_d.h"
 #include "dce/dce_8_0_sh_mask.h"
 
-
 #include "reg_helper.h"
 #include "../hpd_regs.h"
 
@@ -91,199 +79,27 @@ static const struct hpd_sh_mask hpd_mask = {
 		HPD_MASK_SH_LIST_DCE8(_MASK)
 };
 
-
-#define FROM_HW_HPD(ptr) \
-	container_of((ptr), struct hw_hpd_dce80, base)
-
-#define FROM_HW_GPIO(ptr) \
-	FROM_HW_HPD(container_of((ptr), struct hw_hpd, base))
-
-#define FROM_HW_GPIO_PIN(ptr) \
-	FROM_HW_GPIO(container_of((ptr), struct hw_gpio, base))
-
 static void destruct(
-	struct hw_hpd_dce80 *pin)
+	struct hw_hpd *hpd)
 {
-	dal_hw_hpd_destruct(&pin->base);
+	dal_hw_hpd_destruct(hpd);
 }
 
 static void destroy(
 	struct hw_gpio_pin **ptr)
 {
-	struct hw_hpd_dce80 *pin = FROM_HW_GPIO_PIN(*ptr);
-
-	destruct(pin);
-
-	dm_free(pin);
+	struct hw_hpd *hpd = HW_HPD_FROM_BASE(*ptr);
 
+	destruct(hpd);
+	dm_free(hpd);
 	*ptr = NULL;
 }
 
-struct hw_gpio_generic_dce80_init {
-	struct hw_gpio_pin_reg hw_gpio_data_reg;
-	struct hw_hpd_dce80_addr addr;
-};
-
-static const struct hw_gpio_generic_dce80_init
-	hw_gpio_generic_dce80_init[GPIO_HPD_COUNT] = {
-	/* GPIO_HPD_1 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD1_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD1_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD1_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD1_Y_MASK
-			}
-		},
-		{
-			mmDC_HPD1_INT_STATUS,
-			mmDC_HPD1_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_2 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD2_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD2_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD2_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD2_Y_MASK
-			}
-		},
-		{
-			mmDC_HPD2_INT_STATUS,
-			mmDC_HPD2_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_3 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD3_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD3_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD3_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD3_Y_MASK
-			}
-		},
-		{
-			mmDC_HPD3_INT_STATUS,
-			mmDC_HPD3_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_4 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD4_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD4_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD4_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD4_Y_MASK
-			}
-		},
-		{
-			mmDC_HPD4_INT_STATUS,
-			mmDC_HPD4_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_5 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD5_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD5_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD5_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD5_Y_MASK
-			}
-		},
-		{
-			mmDC_HPD5_INT_STATUS,
-			mmDC_HPD5_TOGGLE_FILT_CNTL
-		}
-	},
-	/* GPIO_HPD_1 */
-	{
-		{
-			{
-				mmDC_GPIO_HPD_MASK,
-				DC_GPIO_HPD_MASK__DC_GPIO_HPD6_MASK_MASK
-			},
-			{
-				mmDC_GPIO_HPD_A,
-				DC_GPIO_HPD_A__DC_GPIO_HPD6_A_MASK
-			},
-			{
-				mmDC_GPIO_HPD_EN,
-				DC_GPIO_HPD_EN__DC_GPIO_HPD6_EN_MASK
-			},
-			{
-				mmDC_GPIO_HPD_Y,
-				DC_GPIO_HPD_Y__DC_GPIO_HPD6_Y_MASK
-			}
-		},
-		{
-			mmDC_HPD6_INT_STATUS,
-			mmDC_HPD6_TOGGLE_FILT_CNTL
-		}
-	}
-};
-
 static enum gpio_result get_value(
 	const struct hw_gpio_pin *ptr,
 	uint32_t *value)
 {
-	struct hw_hpd_dce80 *pin = FROM_HW_GPIO_PIN(ptr);
-	struct hw_hpd *hpd = &pin->base;
+	struct hw_hpd *hpd = HW_HPD_FROM_BASE(ptr);
 	uint32_t hpd_delayed = 0;
 
 	/* in Interrupt mode we ask for SENSE bit */
@@ -306,8 +122,7 @@ static enum gpio_result set_config(
 	struct hw_gpio_pin *ptr,
 	const struct gpio_config_data *config_data)
 {
-	struct hw_hpd_dce80 *pin = FROM_HW_GPIO_PIN(ptr);
-	struct hw_hpd *hpd = &pin->base;
+	struct hw_hpd *hpd = HW_HPD_FROM_BASE(ptr);
 
 	if (!config_data)
 		return GPIO_RESULT_INVALID_DATA;
@@ -330,13 +145,11 @@ static const struct hw_gpio_pin_funcs funcs = {
 };
 
 static bool construct(
-	struct hw_hpd_dce80 *pin,
+	struct hw_hpd *hpd,
 	enum gpio_id id,
 	uint32_t en,
 	struct dc_context *ctx)
 {
-	const struct hw_gpio_generic_dce80_init *init;
-
 	if (id != GPIO_ID_HPD) {
 		BREAK_TO_DEBUGGER();
 		return false;
@@ -347,18 +160,18 @@ static bool construct(
 		return false;
 	}
 
-	if (!dal_hw_hpd_construct(&pin->base, id, en, ctx)) {
+	if (!dal_hw_hpd_construct(hpd, id, en, ctx)) {
 		BREAK_TO_DEBUGGER();
 		return false;
 	}
 
-	pin->base.base.base.funcs = &funcs;
-
-	init = hw_gpio_generic_dce80_init + en;
+	hpd->base.base.funcs = &funcs;
 
-	pin->base.base.pin_reg = init->hw_gpio_data_reg;
+	hpd->regs = &hpd_regs[en];
+	hpd->shifts = &hpd_shift;
+	hpd->masks = &hpd_mask;
 
-	pin->addr = init->addr;
+	hpd->base.regs = &hpd_regs[en].gpio;
 
 	return true;
 }
@@ -368,19 +181,19 @@ struct hw_gpio_pin *dal_hw_hpd_dce80_create(
 	enum gpio_id id,
 	uint32_t en)
 {
-	struct hw_hpd_dce80 *pin = dm_alloc(sizeof(struct hw_hpd_dce80));
+	struct hw_hpd *hpd = dm_alloc(sizeof(struct hw_hpd));
 
-	if (!pin) {
+	if (!hpd) {
 		BREAK_TO_DEBUGGER();
 		return NULL;
 	}
 
-	if (construct(pin, id, en, ctx))
-		return &pin->base.base.base;
+	if (construct(hpd, id, en, ctx))
+		return &hpd->base.base;
 
 	BREAK_TO_DEBUGGER();
 
-	dm_free(pin);
+	dm_free(hpd);
 
 	return NULL;
 }
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h b/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h
index 2f01394..bc4cce9 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h
@@ -30,7 +30,6 @@
 
 struct hw_ddc {
 	struct hw_gpio base;
-	uint32_t i2c_ddc_setup;
 	const struct ddc_registers *regs;
 	const struct ddc_sh_mask *shifts;
 	const struct ddc_sh_mask *masks;
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.c b/drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.c
index a2088be..98c162f 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.c
@@ -220,19 +220,6 @@ bool dal_hw_gpio_construct(
 
 	pin->funcs = &func;
 
-	pin->pin_reg.DC_GPIO_DATA_MASK.addr = 0;
-	pin->pin_reg.DC_GPIO_DATA_MASK.mask = 0;
-	pin->pin_reg.DC_GPIO_DATA_A.addr = 0;
-	pin->pin_reg.DC_GPIO_DATA_A.mask = 0;
-	pin->pin_reg.DC_GPIO_DATA_EN.addr = 0;
-	pin->pin_reg.DC_GPIO_DATA_EN.mask = 0;
-	pin->pin_reg.DC_GPIO_DATA_Y.addr = 0;
-	pin->pin_reg.DC_GPIO_DATA_Y.mask = 0;
-	pin->mux_reg.GPIO_MUX_CONTROL.addr = 0;
-	pin->mux_reg.GPIO_MUX_CONTROL.mask = 0;
-	pin->mux_reg.GPIO_MUX_STEREO_SEL.addr = 0;
-	pin->mux_reg.GPIO_MUX_STEREO_SEL.mask = 0;
-
 	pin->store.mask = 0;
 	pin->store.a = 0;
 	pin->store.en = 0;
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.h b/drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.h
index 34fbc11..4f7445d 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/hw_gpio.h
@@ -97,8 +97,6 @@ struct hw_gpio_mux_reg {
 struct hw_gpio {
 	struct hw_gpio_pin base;
 	const struct hw_gpio_funcs *funcs;
-	struct hw_gpio_pin_reg pin_reg;
-	struct hw_gpio_mux_reg mux_reg;
 
 	/* variables to save register value */
 	struct {
-- 
2.7.4

