From c2fc7e689c8f362fc30760ae4a6e195aaa38929d Mon Sep 17 00:00:00 2001
From: Kalyan Alle <kalle@amd.com>
Date: Mon, 10 Apr 2017 13:15:42 +0530
Subject: [PATCH 1907/3082] Resolved build/compilation issues

till temp-raven brnch point

Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu.h                |  2 ++
 drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c            |  1 +
 .../amd/display/amdgpu_dm/amdgpu_dm_mst_types.c    |  3 +-
 .../drm/amd/display/amdgpu_dm/amdgpu_dm_types.c    | 20 ++++++------
 include/drm/drm_dp_helper.h                        | 23 ++++++++++++++
 include/uapi/drm/amdgpu_drm.h                      | 36 +++++++++++++---------
 6 files changed, 57 insertions(+), 28 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu.h b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
index 10cad9f..6d188d5 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
@@ -96,6 +96,7 @@ extern int amdgpu_vm_update_context;
 extern int amdgpu_dc;
 extern int amdgpu_sched_jobs;
 extern int amdgpu_sched_hw_submission;
+extern int amdgpu_powerplay;
 extern int amdgpu_no_evict;
 extern int amdgpu_direct_gma_size;
 extern unsigned amdgpu_pcie_gen_cap;
@@ -432,6 +433,7 @@ struct amdgpu_bo {
 #if !defined(CONFIG_HSA_AMD) && !defined(CONFIG_HSA_AMD_MODULE)
 	struct drm_gem_object           gem_base;
 #endif
+	struct drm_gem_object           gem_base;
 	struct amdgpu_bo		*parent;
 	struct amdgpu_bo		*shadow;
 
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
index dc327b3..c3ffb9e 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
@@ -98,6 +98,7 @@ int amdgpu_exp_hw_support = 0;
 int amdgpu_dc = -1;
 int amdgpu_sched_jobs = 32;
 int amdgpu_sched_hw_submission = 2;
+int amdgpu_powerplay = -1;
 int amdgpu_no_evict = 0;
 int amdgpu_direct_gma_size = 0;
 unsigned amdgpu_pcie_gen_cap = 0;
diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.c b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.c
index 6909dc8..deaae08 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_mst_types.c
@@ -211,8 +211,7 @@ dm_dp_create_fake_mst_encoder(struct amdgpu_connector *connector)
 		dev,
 		&amdgpu_encoder->base,
 		NULL,
-		DRM_MODE_ENCODER_DPMST,
-		NULL);
+		DRM_MODE_ENCODER_DPMST);
 
 	drm_encoder_helper_add(encoder, &amdgpu_dm_encoder_helper_funcs);
 
diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
index fadfde5..589107e 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
@@ -156,7 +156,7 @@ static int dm_crtc_pin_cursor_bo_new(
 
 		amdgpu_crtc = to_amdgpu_crtc(crtc);
 
-		obj = drm_gem_object_lookup(file_priv, handle);
+		obj = drm_gem_object_lookup(crtc->dev, file_priv, handle);
 
 		if (!obj) {
 			DRM_ERROR(
@@ -1106,7 +1106,7 @@ retry:
 		goto fail;
 	}
 	acrtc->flip_flags = flags;
-	ret = drm_atomic_nonblocking_commit(state);
+	ret = drm_atomic_async_commit(state);
 	if (ret != 0)
 		goto fail;
 
@@ -1836,7 +1836,7 @@ int amdgpu_dm_crtc_init(struct amdgpu_display_manager *dm,
 		&dm_plane_funcs,
 		rgb_formats,
 		ARRAY_SIZE(rgb_formats),
-		DRM_PLANE_TYPE_PRIMARY, NULL);
+		DRM_PLANE_TYPE_PRIMARY);
 
 	primary_plane->crtc = &acrtc->base;
 
@@ -1847,7 +1847,7 @@ int amdgpu_dm_crtc_init(struct amdgpu_display_manager *dm,
 			&acrtc->base,
 			primary_plane,
 			NULL,
-			&amdgpu_dm_crtc_funcs, NULL);
+			&amdgpu_dm_crtc_funcs);
 
 	if (res)
 		goto fail;
@@ -2276,8 +2276,7 @@ int amdgpu_dm_encoder_init(
 	int res = drm_encoder_init(dev,
 				   &aencoder->base,
 				   &amdgpu_dm_encoder_funcs,
-				   DRM_MODE_ENCODER_TMDS,
-				   NULL);
+				   DRM_MODE_ENCODER_TMDS);
 
 	aencoder->base.possible_crtcs = amdgpu_dm_get_encoder_crtc_mask(adev);
 
@@ -2764,11 +2763,10 @@ int amdgpu_dm_atomic_commit(
 			continue;
 
 		if (page_flip_needed(plane_state, old_plane_state, false)) {
-			ret = amdgpu_crtc_page_flip_target(crtc,
-							   fb,
-							   crtc->state->event,
-							   acrtc->flip_flags,
-							   drm_crtc_vblank_count(crtc));
+			ret = amdgpu_crtc_page_flip(crtc,
+						    fb,
+						    crtc->state->event,
+						    acrtc->flip_flags);
 			/*clean up the flags for next usage*/
 			acrtc->flip_flags = 0;
 			if (ret)
diff --git a/include/drm/drm_dp_helper.h b/include/drm/drm_dp_helper.h
index bb9d0de..e815278 100644
--- a/include/drm/drm_dp_helper.h
+++ b/include/drm/drm_dp_helper.h
@@ -399,6 +399,8 @@
 # define DP_ADJUST_PRE_EMPHASIS_LANE1_MASK   0xc0
 # define DP_ADJUST_PRE_EMPHASIS_LANE1_SHIFT  6
 
+#define DP_ADJUST_REQUEST_POST_CURSOR2      0x20c
+
 #define DP_TEST_REQUEST			    0x218
 # define DP_TEST_LINK_TRAINING		    (1 << 0)
 # define DP_TEST_LINK_VIDEO_PATTERN	    (1 << 1)
@@ -414,6 +416,8 @@
 
 #define DP_TEST_PATTERN			    0x221
 
+#define DP_TEST_MISC1                       0x232
+
 #define DP_TEST_CRC_R_CR		    0x240
 #define DP_TEST_CRC_G_Y			    0x242
 #define DP_TEST_CRC_B_CB		    0x244
@@ -422,6 +426,18 @@
 # define DP_TEST_CRC_SUPPORTED		    (1 << 5)
 # define DP_TEST_COUNT_MASK		    0xf
 
+#define DP_TEST_PHY_PATTERN                 0x248
+#define DP_TEST_80BIT_CUSTOM_PATTERN_7_0    0x250
+#define DP_TEST_80BIT_CUSTOM_PATTERN_15_8   0x251
+#define DP_TEST_80BIT_CUSTOM_PATTERN_23_16  0x252
+#define DP_TEST_80BIT_CUSTOM_PATTERN_31_24  0x253
+#define DP_TEST_80BIT_CUSTOM_PATTERN_39_32  0x254
+#define DP_TEST_80BIT_CUSTOM_PATTERN_47_40  0x255
+#define DP_TEST_80BIT_CUSTOM_PATTERN_55_48  0x256
+#define DP_TEST_80BIT_CUSTOM_PATTERN_63_56  0x257
+#define DP_TEST_80BIT_CUSTOM_PATTERN_71_64  0x258
+#define DP_TEST_80BIT_CUSTOM_PATTERN_79_72  0x259
+
 #define DP_TEST_RESPONSE		    0x260
 # define DP_TEST_ACK			    (1 << 0)
 # define DP_TEST_NAK			    (1 << 1)
@@ -442,6 +458,10 @@
 #define DP_SOURCE_OUI			    0x300
 #define DP_SINK_OUI			    0x400
 #define DP_BRANCH_OUI			    0x500
+#define DP_BRANCH_ID                        0x503
+#define DP_BRANCH_REVISION_START            0x509
+#define DP_BRANCH_HW_REV                    0x509
+#define DP_BRANCH_SW_REV                    0x50A
 
 #define DP_SET_POWER                        0x600
 # define DP_SET_POWER_D0                    0x1
@@ -526,6 +546,9 @@
 #define DP_RECEIVER_ALPM_STATUS		    0x200b  /* eDP 1.4 */
 # define DP_ALPM_LOCK_TIMEOUT_ERROR	    (1 << 0)
 
+#define DP_DP13_DPCD_REV                    0x2200
+#define DP_DP13_MAX_LINK_RATE               0x2201
+
 /* DP 1.2 Sideband message defines */
 /* peer device type - DP 1.2a Table 2-92 */
 #define DP_PEER_DEVICE_NONE		0x0
diff --git a/include/uapi/drm/amdgpu_drm.h b/include/uapi/drm/amdgpu_drm.h
index d9d57c6..d890419 100644
--- a/include/uapi/drm/amdgpu_drm.h
+++ b/include/uapi/drm/amdgpu_drm.h
@@ -520,6 +520,14 @@ struct drm_amdgpu_cs_chunk_data {
 #define AMDGPU_INFO_MEMORY                      0x19
 /* Query vce clock table */
 #define AMDGPU_INFO_VCE_CLOCK_TABLE             0x1A
+/* Query vbios related information */
+#define AMDGPU_INFO_VBIOS                       0x1B
+        /* Subquery id: Query vbios size */
+        #define AMDGPU_INFO_VBIOS_SIZE          0x1
+        /* Subquery id: Query vbios image */
+        #define AMDGPU_INFO_VBIOS_IMAGE         0x2
+/* Query UVD handles */
+#define AMDGPU_INFO_NUM_HANDLES                 0x1C
 
 #define AMDGPU_INFO_MMR_SE_INDEX_SHIFT	0
 #define AMDGPU_INFO_MMR_SE_INDEX_MASK	0xff
@@ -577,22 +585,13 @@ struct drm_amdgpu_info {
 			uint32_t flags;
 		} read_mmr_reg;
 
+		struct drm_amdgpu_query_fw query_fw;
+
 		struct {
-			/** AMDGPU_INFO_FW_* */
-			uint32_t fw_type;
-			/**
-			 * Index of the IP if there are more IPs of
-			 * the same type.
-			 */
-			uint32_t ip_instance;
-			/**
-			 * Index of the engine. Whether this is used depends
-			 * on the firmware type. (e.g. MEC, SDMA)
-			 */
-			uint32_t index;
-			uint32_t _pad;
-		} query_fw;
-	};
+                        __u32 type;
+                        __u32 offset;
+		} vbios_info;
+        };
 };
 
 struct drm_amdgpu_info_gds {
@@ -708,6 +707,13 @@ struct drm_amdgpu_info_device {
 	uint32_t vce_harvest_config;
 };
 
+struct drm_amdgpu_info_num_handles {
+        /** Max handles as supported by firmware for UVD */
+        __u32  uvd_max_handles;
+        /** Handles currently in use for UVD */
+        __u32  uvd_used_handles;
+};
+
 struct drm_amdgpu_info_hw_ip {
 	/** Version of h/w IP */
 	uint32_t  hw_ip_version_major;
-- 
2.7.4

