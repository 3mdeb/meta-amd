From feacff771ed584224d437d1ec7dcf0549ccbfaf5 Mon Sep 17 00:00:00 2001
From: Alex Deucher <alexander.deucher@amd.com>
Date: Fri, 18 Mar 2016 14:36:37 -0400
Subject: [PATCH 0880/1110] drm/amd/dal/dm: remove LINUX_VERSION_CODE checks

No longer needed upstream.

Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
---
 .../gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c  | 26 ----------------------
 .../drm/amd/dal/amdgpu_dm/amdgpu_dm_mst_types.c    |  4 ----
 .../gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c    |  3 ---
 3 files changed, 33 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c
index e442318..8688ca2 100644
--- a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c
+++ b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_helpers.c
@@ -130,7 +130,6 @@ enum dc_edid_status dm_helpers_parse_edid_caps(
 	return result;
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 static struct amdgpu_connector *get_connector_for_sink(
 	struct drm_device *dev,
 	const struct dc_sink *sink)
@@ -146,7 +145,6 @@ static struct amdgpu_connector *get_connector_for_sink(
 
 	return aconnector;
 }
-#endif
 
 static struct amdgpu_connector *get_connector_for_link(
 	struct drm_device *dev,
@@ -164,7 +162,6 @@ static struct amdgpu_connector *get_connector_for_link(
 	return aconnector;
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 static void get_payload_table(
 		struct amdgpu_connector *aconnector,
 		struct dp_mst_stream_allocation_table *proposed_table)
@@ -201,7 +198,6 @@ static void get_payload_table(
 
 	mutex_unlock(&mst_mgr->payload_lock);
 }
-#endif
 
 /*
  * Writes payload allocation table in immediate downstream device.
@@ -212,7 +208,6 @@ bool dm_helpers_dp_mst_write_payload_allocation_table(
 		struct dp_mst_stream_allocation_table *proposed_table,
 		bool enable)
 {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 	struct amdgpu_device *adev = ctx->driver_context;
 	struct drm_device *dev = adev->ddev;
 	struct amdgpu_connector *aconnector;
@@ -292,9 +287,6 @@ bool dm_helpers_dp_mst_write_payload_allocation_table(
 		return false;
 
 	return true;
-#else
-	return false;
-#endif
 }
 
 /*
@@ -305,7 +297,6 @@ bool dm_helpers_dp_mst_poll_for_allocation_change_trigger(
 		struct dc_context *ctx,
 		const struct dc_stream *stream)
 {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 	struct amdgpu_device *adev = ctx->driver_context;
 	struct drm_device *dev = adev->ddev;
 	struct amdgpu_connector *aconnector;
@@ -328,9 +319,6 @@ bool dm_helpers_dp_mst_poll_for_allocation_change_trigger(
 		return false;
 
 	return true;
-#else
-	return false;
-#endif
 }
 
 bool dm_helpers_dp_mst_send_payload_allocation(
@@ -338,7 +326,6 @@ bool dm_helpers_dp_mst_send_payload_allocation(
 		const struct dc_stream *stream,
 		bool enable)
 {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 	struct amdgpu_device *adev = ctx->driver_context;
 	struct drm_device *dev = adev->ddev;
 	struct amdgpu_connector *aconnector;
@@ -367,14 +354,10 @@ bool dm_helpers_dp_mst_send_payload_allocation(
 		drm_dp_mst_deallocate_vcpi(mst_mgr, mst_port);
 
 	return true;
-#else
-	return false;
-#endif
 }
 
 void dm_helpers_dp_mst_handle_mst_hpd_rx_irq(void *param)
 {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 	uint8_t esi[8] = { 0 };
 	uint8_t dret;
 	bool new_irq_handled = true;
@@ -413,9 +396,6 @@ void dm_helpers_dp_mst_handle_mst_hpd_rx_irq(void *param)
 				DP_SINK_COUNT_ESI, esi, 8);
 		}
 	}
-#else
-	return false;
-#endif
 }
 
 bool dm_helpers_dp_mst_start_top_mgr(
@@ -423,7 +403,6 @@ bool dm_helpers_dp_mst_start_top_mgr(
 		const struct dc_link *link,
 		bool boot)
 {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 	struct amdgpu_device *adev = ctx->driver_context;
 	struct drm_device *dev = adev->ddev;
 	struct amdgpu_connector *aconnector = get_connector_for_link(dev, link);
@@ -438,16 +417,12 @@ bool dm_helpers_dp_mst_start_top_mgr(
 			aconnector, aconnector->base.base.id);
 
 	return (drm_dp_mst_topology_mgr_set_mst(&aconnector->mst_mgr, true) == 0);
-#else
-	return false;
-#endif
 }
 
 void dm_helpers_dp_mst_stop_top_mgr(
 		struct dc_context *ctx,
 		const struct dc_link *link)
 {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 	struct amdgpu_device *adev = ctx->driver_context;
 	struct drm_device *dev = adev->ddev;
 	struct amdgpu_connector *aconnector = get_connector_for_link(dev, link);
@@ -457,7 +432,6 @@ void dm_helpers_dp_mst_stop_top_mgr(
 
 	if (aconnector->mst_mgr.mst_state == true)
 		drm_dp_mst_topology_mgr_set_mst(&aconnector->mst_mgr, false);
-#endif
 }
 
 bool dm_helpers_dp_read_dpcd(
diff --git a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_mst_types.c b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_mst_types.c
index 2ab2703..b0a82a2 100644
--- a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_mst_types.c
+++ b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_mst_types.c
@@ -115,7 +115,6 @@ static ssize_t dm_dp_aux_transfer(struct drm_dp_aux *aux, struct drm_dp_aux_msg
 	return msg->size;
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 static enum drm_connector_status
 dm_dp_mst_detect(struct drm_connector *connector, bool force)
 {
@@ -455,7 +454,6 @@ struct drm_dp_mst_topology_cbs dm_mst_cbs = {
 	.hotplug = dm_dp_mst_hotplug,
 	.register_connector = dm_dp_mst_register_connector
 };
-#endif
 
 void amdgpu_dm_initialize_mst_connector(
 	struct amdgpu_display_manager *dm,
@@ -467,7 +465,6 @@ void amdgpu_dm_initialize_mst_connector(
 	aconnector->dm_dp_aux.link_index = aconnector->connector_id;
 
 	drm_dp_aux_register(&aconnector->dm_dp_aux.aux);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
 	aconnector->mst_mgr.cbs = &dm_mst_cbs;
 	drm_dp_mst_topology_mgr_init(
 		&aconnector->mst_mgr,
@@ -476,6 +473,5 @@ void amdgpu_dm_initialize_mst_connector(
 		16,
 		4,
 		aconnector->connector_id);
-#endif
 }
 
diff --git a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
index a8a2e10..ca553ce 100644
--- a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
+++ b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
@@ -1539,10 +1539,7 @@ int amdgpu_dm_crtc_init(struct amdgpu_display_manager *dm,
 	if (!primary_plane)
 		goto fail_plane;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 3, 0)
-	/* this flag doesn't exist in older kernels */
 	primary_plane->format_default = true;
-#endif
 
 	res = drm_universal_plane_init(
 		dm->adev->ddev,
-- 
2.7.4

