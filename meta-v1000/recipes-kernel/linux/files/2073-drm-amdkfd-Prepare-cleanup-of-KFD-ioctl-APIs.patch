From 2d5f575bea5f8c3a742ac406442f0bbfb81916d6 Mon Sep 17 00:00:00 2001
From: Felix Kuehling <Felix.Kuehling@amd.com>
Date: Fri, 18 Mar 2016 17:01:40 -0400
Subject: [PATCH 2073/2094] drm/amdkfd: Prepare cleanup of KFD ioctl APIs

* Remove deprecated APIs that were never upstreamed
* Add new alloc_memory_of_scratch argument structure
* Prepare removing _new suffix from the new APIs
* Prepare cleanup of memory allocation flags
* Fix 32-on-64 bit issues in some of the new APIs

This change does not break the ABI of currently used APIs. KFD and
Thunk can smoothly transition to using the non-new APIs. After that
we will make one ABI-breaking change that consolidates the ioctl number
space and memory allocation flags and fixes remaining 32-on-64-bit
issues.

Change-Id: Ib5d89db68d77f6227be63e2698fd1532ae6d39a2
Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
---
 drivers/gpu/drm/amd/amdkfd/kfd_chardev.c | 11 +++---
 include/uapi/linux/kfd_ioctl.h           | 62 ++++++++++++++++++++++++++++----
 2 files changed, 60 insertions(+), 13 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c b/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
index d4d875c..9c8b41f 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
@@ -1115,8 +1115,7 @@ kfd_ioctl_wait_events(struct file *filp, struct kfd_process *p, void *data)
 static int kfd_ioctl_alloc_scratch_memory(struct file *filep,
 					struct kfd_process *p, void *data)
 {
-	struct kfd_ioctl_alloc_memory_of_gpu_args *args =
-			(struct kfd_ioctl_alloc_memory_of_gpu_args *)data;
+	struct kfd_ioctl_alloc_memory_of_scratch_args *args = data;
 	struct kfd_process_device *pdd;
 	struct kfd_dev *dev;
 	long err;
@@ -1258,12 +1257,12 @@ static uint32_t kfd_convert_user_mem_alloction_flags(
 		goto out;
 	}
 	/* Allocate userptr BO */
-	if (userspace_flags & KFD_IOC_ALLOC_MEM_FLAGS_USERPTR) {
+	if (userspace_flags & KFD_IOC_ALLOC_MEM_FLAGS_USERPTR_OLD) {
 		kernel_allocation_flags = ALLOC_MEM_FLAGS_USERPTR;
 		goto out;
 	}
 	/* Allocate doorbell BO */
-	if (userspace_flags & KFD_IOC_ALLOC_MEM_FLAGS_DOORBELL) {
+	if (userspace_flags & KFD_IOC_ALLOC_MEM_FLAGS_DOORBELL_OLD) {
 		kernel_allocation_flags = ALLOC_MEM_FLAGS_DOORBELL;
 		goto out;
 	}
@@ -1271,7 +1270,7 @@ static uint32_t kfd_convert_user_mem_alloction_flags(
 out:
 	if (userspace_flags & KFD_IOC_ALLOC_MEM_FLAGS_DGPU_AQL_QUEUE_MEM)
 		kernel_allocation_flags |= ALLOC_MEM_FLAGS_AQL_QUEUE_MEM;
-	if (userspace_flags & KFD_IOC_ALLOC_MEM_FLAGS_COHERENT)
+	if (userspace_flags & KFD_IOC_ALLOC_MEM_FLAGS_COHERENT_OLD)
 		kernel_allocation_flags |= ALLOC_MEM_FLAGS_COHERENT;
 	/* Current HW doesn't support non paged memory */
 	kernel_allocation_flags |= ALLOC_MEM_FLAGS_NONPAGED;
@@ -1313,7 +1312,7 @@ static int kfd_ioctl_alloc_memory_of_gpu_new(struct file *filep,
 	if (IS_ERR(pdd))
 		return PTR_ERR(pdd);
 
-	if (args->flags & KFD_IOC_ALLOC_MEM_FLAGS_DOORBELL) {
+	if (args->flags & KFD_IOC_ALLOC_MEM_FLAGS_DOORBELL_OLD) {
 		if (args->size != kfd_doorbell_process_slice(dev))
 			return -EINVAL;
 		offset = kfd_get_process_doorbells(dev, p);
diff --git a/include/uapi/linux/kfd_ioctl.h b/include/uapi/linux/kfd_ioctl.h
index 6473ae9..df773de 100644
--- a/include/uapi/linux/kfd_ioctl.h
+++ b/include/uapi/linux/kfd_ioctl.h
@@ -156,12 +156,14 @@ struct kfd_ioctl_dbg_unregister_args {
 	uint32_t pad;
 };
 
+/* FIXME: This is not 32-on-64 safe, fixed upstream, we should match it */
 struct kfd_ioctl_dbg_address_watch_args {
 	uint32_t gpu_id;		/* to KFD */
 	uint32_t buf_size_in_bytes;	/*including gpu_id and buf_size */
 	void	*content_ptr;	/* a pointer to the actual content */
 };
 
+/* FIXME: This is not 32-on-64 safe, fixed upstream, we should match it */
 struct kfd_ioctl_dbg_wave_control_args {
 	uint32_t gpu_id;		/* to KFD */
 	uint32_t buf_size_in_bytes;	/*including gpu_id and buf_size */
@@ -217,7 +219,6 @@ struct kfd_ioctl_reset_event_args {
 	uint32_t pad;
 };
 
-
 struct kfd_memory_exception_failure {
 	bool NotPresent;  /* Page not present or supervisor privilege */
 	bool ReadOnly;  /* Write access to a read-only page */
@@ -226,6 +227,7 @@ struct kfd_memory_exception_failure {
 };
 
 /* memory exception data*/
+/* FIXME: Make this 32-on-64 safe. Will break ABI. */
 struct kfd_hsa_memory_exception_data {
 	uint64_t va;
 	uint32_t gpu_id;
@@ -252,7 +254,8 @@ struct kfd_ioctl_wait_events_args {
 	uint32_t wait_result;		/* from KFD */
 };
 
-struct kfd_ioctl_alloc_memory_of_gpu_args {
+/* FIXME: remove unused fields and make it 32-on-64 safe. Will break ABI. */
+struct kfd_ioctl_alloc_memory_of_scratch_args {
 	uint64_t va_addr;	/* to KFD */
 	uint64_t size;		/* to KFD */
 	uint64_t handle;	/* from KFD */
@@ -266,8 +269,12 @@ struct kfd_ioctl_free_memory_of_gpu_args {
 
 struct kfd_ioctl_map_memory_to_gpu_args {
 	uint64_t handle;			/* to KFD */
+	uint64_t device_ids_array_ptr;		/* to KFD */
+	uint32_t device_ids_array_size;		/* to KFD */
+	uint32_t pad;
 };
 
+/* TODO: remove this after KFD and Thunk have been updated */
 struct kfd_ioctl_map_memory_to_gpu_new_args {
 	uint64_t handle;			/* to KFD */
 	uint32_t *device_ids_array;		/* to KFD */
@@ -276,9 +283,13 @@ struct kfd_ioctl_map_memory_to_gpu_new_args {
 };
 
 struct kfd_ioctl_unmap_memory_from_gpu_args {
-	uint64_t handle;	/* to KFD */
+	uint64_t handle;			/* to KFD */
+	uint64_t device_ids_array_ptr;		/* to KFD */
+	uint32_t device_ids_array_size;		/* to KFD */
+	uint32_t pad;
 };
 
+/* TODO: remove this after KFD and Thunk have been updated */
 struct kfd_ioctl_unmap_memory_from_gpu_new_args {
 	uint64_t handle;	/* to KFD */
 	uint32_t *device_ids_array;             /* to KFD */
@@ -295,6 +306,7 @@ struct kfd_ioctl_open_graphic_handle_args {
 	uint32_t pad;
 };
 
+/* FIXME: Make this 32-on-64 safe. Will break ABI. */
 struct kfd_ioctl_set_process_dgpu_aperture_args {
 	uint32_t gpu_id;
 	uint64_t dgpu_base;
@@ -303,6 +315,7 @@ struct kfd_ioctl_set_process_dgpu_aperture_args {
 
 /*
  * GPU Memory allocation flags
+ * TODO: remove this after KFD and Thunk have been updated to use the new flags
  */
 #define KFD_IOC_ALLOC_MEM_FLAGS_DGPU_HOST		(1 << 0)
 #define KFD_IOC_ALLOC_MEM_FLAGS_DGPU_DEVICE		(1 << 1)
@@ -311,10 +324,41 @@ struct kfd_ioctl_set_process_dgpu_aperture_args {
 #define KFD_IOC_ALLOC_MEM_FLAGS_APU_SCRATCH		(1 << 4)
 
 #define KFD_IOC_ALLOC_MEM_FLAGS_DGPU_AQL_QUEUE_MEM		(1 << 5)
-#define KFD_IOC_ALLOC_MEM_FLAGS_USERPTR			(1 << 6)
-#define KFD_IOC_ALLOC_MEM_FLAGS_DOORBELL		(1 << 7)
-#define KFD_IOC_ALLOC_MEM_FLAGS_COHERENT		(1 << 8)
+#define KFD_IOC_ALLOC_MEM_FLAGS_USERPTR_OLD		(1 << 6)
+#define KFD_IOC_ALLOC_MEM_FLAGS_DOORBELL_OLD		(1 << 7)
+#define KFD_IOC_ALLOC_MEM_FLAGS_COHERENT_OLD		(1 << 8)
+
+/* New GPU memory allocation flags aligned with the cleaner KFD2KGD
+ * interface. */
+/*
+ * Memory types
+ */
+#define KFD_IOC_ALLOC_MEM_FLAGS_VRAM		(1 << 0)
+#define KFD_IOC_ALLOC_MEM_FLAGS_GTT		(1 << 1)
+#define KFD_IOC_ALLOC_MEM_FLAGS_USERPTR		(1 << 2)
+#define KFD_IOC_ALLOC_MEM_FLAGS_DOORBELL	(1 << 3)
+
+/*
+ * Allocation flags attributes/access options.
+ */
+#define KFD_IOC_ALLOC_MEM_FLAGS_NONPAGED	(1 << 31)
+#define KFD_IOC_ALLOC_MEM_FLAGS_READONLY	(1 << 30)
+#define KFD_IOC_ALLOC_MEM_FLAGS_PUBLIC		(1 << 29)
+#define KFD_IOC_ALLOC_MEM_FLAGS_NO_SUBSTITUTE	(1 << 28)
+#define KFD_IOC_ALLOC_MEM_FLAGS_AQL_QUEUE_MEM	(1 << 27)
+#define KFD_IOC_ALLOC_MEM_FLAGS_EXECUTE_ACCESS	(1 << 26)
+#define KFD_IOC_ALLOC_MEM_FLAGS_COHERENT	(1 << 25)
+
+struct kfd_ioctl_alloc_memory_of_gpu_args {
+	uint64_t va_addr;	/* to KFD */
+	uint64_t size;		/* to KFD */
+	uint64_t handle;	/* from KFD */
+	uint64_t mmap_offset;   /* to KFD (userptr), from KFD (mmap offset) */
+	uint32_t gpu_id;	/* to KFD */
+	uint32_t flags;
+};
 
+/* TODO: remove this after KFD and Thunk have been updated */
 struct kfd_ioctl_alloc_memory_of_gpu_new_args {
 	uint64_t va_addr;	/* to KFD */
 	uint64_t size;		/* to KFD */
@@ -495,7 +539,7 @@ struct kfd_ioctl_cross_memory_copy_args {
 		AMDKFD_IOWR(0x15, struct kfd_ioctl_open_graphic_handle_args)
 
 #define AMDKFD_IOC_ALLOC_MEMORY_OF_SCRATCH	\
-		AMDKFD_IOWR(0x16, struct kfd_ioctl_alloc_memory_of_gpu_args)
+		AMDKFD_IOWR(0x16, struct kfd_ioctl_alloc_memory_of_scratch_args)
 
 #define AMDKFD_IOC_SET_CU_MASK		\
 		AMDKFD_IOW(0x17, struct kfd_ioctl_set_cu_mask_args)
@@ -504,14 +548,18 @@ struct kfd_ioctl_cross_memory_copy_args {
 		AMDKFD_IOW(0x18,	\
 		struct kfd_ioctl_set_process_dgpu_aperture_args)
 
+/* TODO: Remove this after KFD and Thunk has been updated */
 #define AMDKFD_IOC_ALLOC_MEMORY_OF_GPU_NEW		\
 		AMDKFD_IOWR(0x19, struct kfd_ioctl_alloc_memory_of_gpu_new_args)
 
 #define AMDKFD_IOC_SET_TRAP_HANDLER		\
 		AMDKFD_IOW(0x1a, struct kfd_ioctl_set_trap_handler_args)
 
+/* TODO: Remove this after KFD and Thunk has been updated */
 #define AMDKFD_IOC_MAP_MEMORY_TO_GPU_NEW		\
 		AMDKFD_IOWR(0x1b, struct kfd_ioctl_map_memory_to_gpu_new_args)
+
+/* TODO: Remove this after KFD and Thunk has been updated */
 #define AMDKFD_IOC_UNMAP_MEMORY_FROM_GPU_NEW	\
 		AMDKFD_IOWR(0x1c, struct kfd_ioctl_unmap_memory_from_gpu_new_args)
 
-- 
2.7.4

