From 8ffb4f5fbb861efca748a439fabdb97fad5c93bf Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Wed, 24 Jun 2015 09:54:01 -0400
Subject: [PATCH 291/343] drm/amdgpu: Use CGS for DAL register access

Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Reviewed-by: Mykola Lysenko <Mykola.Lysenko@amd.com>
Signed-off-by: Sanjay R Mehta <sanju.mehta@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c | 32 -------------------
 drivers/gpu/drm/amd/amdgpu/amdgpu_dm.c           | 14 +++++++++
 drivers/gpu/drm/amd/amdgpu/amdgpu_dm.h           |  1 +
 drivers/gpu/drm/amd/dal/dal_services.h           | 39 +++++++++++++++++++-----
 drivers/gpu/drm/amd/dal/dal_services_types.h     |  2 ++
 drivers/gpu/drm/amd/dal/include/dal_types.h      |  2 ++
 drivers/gpu/drm/amd/dal/interface/dal.c          |  2 +-
 7 files changed, 52 insertions(+), 40 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c
index 9b08f44..71b9a6d 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c
@@ -49,38 +49,6 @@
 #include "amdgpu_notifications.h"
 */
 
-uint32_t dal_read_reg(
-	struct dal_context *ctx,
-	uint32_t address)
-{
-	uint32_t value = amdgpu_mm_rreg(ctx->driver_context, address, false);
-
-#if defined(__DAL_REGISTER_LOGGER__)
-	if (true == dal_reg_logger_should_dump_register()) {
-		dal_reg_logger_rw_count_increment();
-		DRM_INFO("%s 0x%x 0x%x\n", __func__, address, value);
-	}
-#endif
-
-	return value;
-}
-
-
-void dal_write_reg(
-	struct dal_context *ctx,
-	uint32_t address,
-	uint32_t value)
-{
-#if defined(__DAL_REGISTER_LOGGER__)
-	if (true == dal_reg_logger_should_dump_register()) {
-		dal_reg_logger_rw_count_increment();
-		DRM_INFO("%s 0x%x 0x%x\n", __func__, address, value);
-	}
-#endif
-
-	amdgpu_mm_wreg(ctx->driver_context, address, value, false);
-}
-
 /* if the pointer is not NULL, the allocated memory is zeroed */
 void *dal_alloc(uint32_t size)
 {
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_dm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_dm.c
index 86a8fad..0af22fd 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_dm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_dm.c
@@ -612,6 +612,15 @@ int amdgpu_dm_init(struct amdgpu_device *adev)
 
 	init_data.driver = adev;
 
+	adev->dm.cgs_device = amdgpu_cgs_create_device(adev);
+
+	if (!adev->dm.cgs_device) {
+		DRM_ERROR("amdgpu: failed to create cgs device.\n");
+		goto error;
+	}
+
+	init_data.cgs_device = adev->dm.cgs_device;
+
 	adev->dm.dal = NULL;
 
 	/* enable gpu scaling in DAL */
@@ -677,6 +686,11 @@ void amdgpu_dm_fini(struct amdgpu_device *adev)
 
 	/*amdgpu_dm_irq_fini(adev);*/
 
+	if (adev->dm.cgs_device) {
+		amdgpu_cgs_destroy_device(adev->dm.cgs_device);
+		adev->dm.cgs_device = NULL;
+	}
+
 	dal_destroy(&adev->dm.dal);
 	return;
 }
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_dm.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_dm.h
index ae6fb4e..3e17122 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_dm.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_dm.h
@@ -67,6 +67,7 @@ struct common_irq_params {
 
 struct amdgpu_display_manager {
 	struct dal *dal;
+	void *cgs_device;
 	/* lock to be used when DAL is called from SYNC IRQ context */
 	spinlock_t dal_lock;
 
diff --git a/drivers/gpu/drm/amd/dal/dal_services.h b/drivers/gpu/drm/amd/dal/dal_services.h
index e2aae26e..17681bf 100644
--- a/drivers/gpu/drm/amd/dal/dal_services.h
+++ b/drivers/gpu/drm/amd/dal/dal_services.h
@@ -90,10 +90,24 @@ int32_t dal_strncmp(const int8_t *p1, const int8_t *p2, uint32_t count);
  * GPU registers access
  *
  */
-
-uint32_t dal_read_reg(
+#ifndef BUILD_DAL_TEST
+static inline uint32_t dal_read_reg(
 	struct dal_context *ctx,
-	uint32_t address);
+	uint32_t address)
+{
+	uint32_t value = cgs_read_register(ctx->cgs_device, address);
+
+#if defined(__DAL_REGISTER_LOGGER__)
+	if (true == dal_reg_logger_should_dump_register()) {
+		dal_reg_logger_rw_count_increment();
+		DRM_INFO("%s 0x%x 0x%x\n", __func__, address, value);
+	}
+#endif
+	return value;
+}
+#else
+uint32_t dal_read_reg(struct dal_context *ctx, uint32_t address);
+#endif
 
 static inline uint32_t get_reg_field_value_ex(
 	uint32_t reg_value,
@@ -125,10 +139,23 @@ static inline uint32_t set_reg_field_value_ex(
 		reg_name ## __ ## reg_field ## _MASK,\
 		reg_name ## __ ## reg_field ## __SHIFT)
 
-void dal_write_reg(
+#ifndef BUILD_DAL_TEST
+static inline void dal_write_reg(
 	struct dal_context *ctx,
 	uint32_t address,
-	uint32_t value);
+	uint32_t value)
+{
+#if defined(__DAL_REGISTER_LOGGER__)
+	if (true == dal_reg_logger_should_dump_register()) {
+		dal_reg_logger_rw_count_increment();
+		DRM_INFO("%s 0x%x 0x%x\n", __func__, address, value);
+	}
+#endif
+	cgs_write_register(ctx->cgs_device, address, value);
+}
+#else
+void dal_write_reg(struct dal_context *ctx, uint32_t address, uint32_t value);
+#endif
 
 static inline uint32_t dal_read_index_reg(
 	struct dal_context *ctx,
@@ -183,8 +210,6 @@ bool dal_get_platform_info(
 	struct dal_context *dal_context,
 	struct platform_info_params *params);
 
-
-
 /**************************************
  * Calls to Power Play (PP) component
  **************************************/
diff --git a/drivers/gpu/drm/amd/dal/dal_services_types.h b/drivers/gpu/drm/amd/dal/dal_services_types.h
index d4865e47..7bad47c 100644
--- a/drivers/gpu/drm/amd/dal/dal_services_types.h
+++ b/drivers/gpu/drm/amd/dal/dal_services_types.h
@@ -34,6 +34,8 @@
 #include <linux/types.h>
 #include <drm/drmP.h>
 
+#include "cgs_linux.h"
+
 /* The same symbols are defined in amdsoc.h, redefined here just in
  * case DAL need to work with other drivers besides amdsoc. */
 #if defined(__BIG_ENDIAN) && !defined(BIGENDIAN_CPU)
diff --git a/drivers/gpu/drm/amd/dal/include/dal_types.h b/drivers/gpu/drm/amd/dal/include/dal_types.h
index 719f867d..9eb8059 100644
--- a/drivers/gpu/drm/amd/dal/include/dal_types.h
+++ b/drivers/gpu/drm/amd/dal/include/dal_types.h
@@ -173,6 +173,7 @@ struct dal_init_data {
 	struct bdf_info bdf_info;
 	struct dal_override_parameters display_param;
 	void *driver; /* dal_context */
+	void *cgs_device;
 };
 
 
@@ -194,6 +195,7 @@ struct dal_context {
 	void *driver_context; /* e.g. amdsoc_device */
 #endif
 	struct dal_logger *logger;
+	void *cgs_device;
 };
 
 /* Wireless display structs */
diff --git a/drivers/gpu/drm/amd/dal/interface/dal.c b/drivers/gpu/drm/amd/dal/interface/dal.c
index 106e12d..23bc611 100644
--- a/drivers/gpu/drm/amd/dal/interface/dal.c
+++ b/drivers/gpu/drm/amd/dal/interface/dal.c
@@ -116,7 +116,6 @@ struct dal *dal_create(struct dal_init_data *init)
 		return NULL;
 	}
 
-
 	if (dal_construct(init, dal_instance))
 		return dal_instance;
 	else {
@@ -153,6 +152,7 @@ static bool dal_construct(struct dal_init_data *init,
 	struct dal_context *dal_context = &dal_instance->dal_context;
 	dal_instance->init_data = *init;
 	dal_instance->dal_context.driver_context = init->driver;
+	dal_instance->dal_context.cgs_device = init->cgs_device;
 
 	/* Logger */
 
-- 
1.9.1

