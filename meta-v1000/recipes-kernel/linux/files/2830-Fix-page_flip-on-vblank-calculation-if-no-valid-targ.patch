From 1395f71d5639ab10dd96cf597f1c6ca9f88706f4 Mon Sep 17 00:00:00 2001
From: "Perneel, Luc" <Luc.Perneel@barco.com>
Date: Tue, 26 Sep 2017 16:22:35 +0200
Subject: [PATCH 2830/2831] Fix page_flip on vblank calculation if no valid
 target_vblank is present.

When a flip page is requested, the work is deferred in case a vblank is
busy. Otherwise the page flip done interrupt will be triggered immediately.
After the calculation, it is the target_vblank is checked as well.
However, target_vblank is not calculated (and thus invalid) if the
crtc functions do not provide a page_flip_target function, in which case
the target_vblank should not be used.

Using this invalid target_vblank causes the page flip not to be delayed,
even when the vblank is busy. This causes to flip the page multiple times
and thus higher redraw rates then necessary.

This can easily be tested by the libdrm provided modetest (using the -v
option) which will detect much higher frame rates than the display is
configured. Due to this issue, CPU time can be lost by generating higher
redraw rates in some applications than necessary.
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_display.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_display.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_display.c
index 0236ab97..da7c0f4 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_display.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_display.c
@@ -84,15 +84,16 @@ static void amdgpu_flip_work_func(struct work_struct *__work)
 
 	/* Wait until we're out of the vertical blank period before the one
 	 * targeted by the flip
+	 * In case of page_flip_target support, target_blank should be checked as well!
 	 */
 	if (amdgpu_crtc->enabled &&
 	    (amdgpu_get_crtc_scanoutpos(adev->ddev, work->crtc_id, 0,
 					&vpos, &hpos, NULL, NULL,
 					&crtc->hwmode)
 	     & (DRM_SCANOUTPOS_VALID | DRM_SCANOUTPOS_IN_VBLANK)) ==
-	    (DRM_SCANOUTPOS_VALID | DRM_SCANOUTPOS_IN_VBLANK) &&
+	    (DRM_SCANOUTPOS_VALID | DRM_SCANOUTPOS_IN_VBLANK) && (!crtc->funcs->page_flip_target ||
 	    (int)(work->target_vblank -
-		  amdgpu_get_vblank_counter_kms(adev->ddev, amdgpu_crtc->crtc_id)) > 0) {
+		  amdgpu_get_vblank_counter_kms(adev->ddev, amdgpu_crtc->crtc_id)) > 0)) {
 		schedule_delayed_work(&work->flip_work, usecs_to_jiffies(1000));
 		return;
 	}
-- 
2.7.4

