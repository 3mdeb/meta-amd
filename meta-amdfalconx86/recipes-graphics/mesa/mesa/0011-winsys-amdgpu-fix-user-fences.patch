From 0755663c34a1995d4fdae679aead8edd711975c1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>
Date: Wed, 22 Jul 2015 19:03:48 +0200
Subject: [PATCH 11/16] winsys/amdgpu: fix user fences
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

UVD/VCE doesn't support user fences and the offset is in bytes, not qword.

Signed-off-by: Christian KÃ¶nig <christian.koenig@amd.com>
Signed-off-by: Arindam Nath <arindam.nath@amd.com>
---
 src/gallium/winsys/amdgpu/drm/amdgpu_cs.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/src/gallium/winsys/amdgpu/drm/amdgpu_cs.c b/src/gallium/winsys/amdgpu/drm/amdgpu_cs.c
index e2ff032..5910325 100644
--- a/src/gallium/winsys/amdgpu/drm/amdgpu_cs.c
+++ b/src/gallium/winsys/amdgpu/drm/amdgpu_cs.c
@@ -98,8 +98,7 @@ bool amdgpu_fence_wait(struct pipe_fence_handle *fence, uint64_t timeout,
       return false;
 
    user_fence_cpu = rfence->user_fence_cpu_address;
-
-   if (*user_fence_cpu >= rfence->fence) {
+   if (user_fence_cpu && *user_fence_cpu >= rfence->fence) {
 	rfence->signalled = true;
 	return true;
    }
@@ -582,7 +581,7 @@ void amdgpu_cs_emit_ioctl_oneshot(struct amdgpu_cs *cs, struct amdgpu_cs_context
    csc->request.fence_info.handle = NULL;
    if (csc->request.ip_type != AMDGPU_HW_IP_UVD && csc->request.ip_type != AMDGPU_HW_IP_VCE) {
 	csc->request.fence_info.handle = cs->ctx->user_fence_bo;
-	csc->request.fence_info.offset = cs->base.ring_type;
+	csc->request.fence_info.offset = cs->base.ring_type * 8;
    }
    r = amdgpu_cs_submit(cs->ctx->ctx, 0, &csc->request, 1);
    if (r) {
@@ -595,9 +594,11 @@ void amdgpu_cs_emit_ioctl_oneshot(struct amdgpu_cs *cs, struct amdgpu_cs_context
       amdgpu_fence_signalled(csc->fence);
    } else {
       /* Success. */
-      uint64_t *user_fence_cpu_address = cs->ctx->user_fence_cpu_address_base +
-				csc->request.fence_info.offset;
-      amdgpu_fence_submitted(csc->fence, &csc->request, user_fence_cpu_address);
+      uint64_t *user_fence = NULL;
+      if (csc->request.ip_type != AMDGPU_HW_IP_UVD && csc->request.ip_type != AMDGPU_HW_IP_VCE)
+         user_fence = cs->ctx->user_fence_cpu_address_base +
+                      csc->request.fence_info.offset / 8;
+      amdgpu_fence_submitted(csc->fence, &csc->request, user_fence);
 
       pipe_mutex_lock(ws->bo_fence_lock);
       for (i = 0; i < csc->num_buffers; i++)
-- 
1.9.1

