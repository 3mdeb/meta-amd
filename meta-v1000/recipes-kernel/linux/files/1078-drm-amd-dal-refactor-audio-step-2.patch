From b52a1eb1bb73623109469a9fcbe7c1ee702a0530 Mon Sep 17 00:00:00 2001
From: Tony Cheng <tony.cheng@amd.com>
Date: Tue, 13 Sep 2016 16:29:47 -0400
Subject: [PATCH 1078/1722] drm/amd/dal: refactor audio step 2

- add mute/unmute to stream_encoder
- macro to update registers
- assign AFMT_AUDIO_PACKET_CONTROL mm offset
- remove obsolete mute/umute code in audio

Change-Id: I08e3cf4f9b808dfd072a2f38fb79f5bc2c1b77c5
Signed-off-by: Tony Cheng <tony.cheng@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/audio/audio.h           | 10 ----
 drivers/gpu/drm/amd/dal/dc/audio/audio_base.c      | 40 --------------
 .../gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c | 62 ----------------------
 .../amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c  | 40 --------------
 .../gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c   | 62 ----------------------
 .../amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c    | 40 --------------
 drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h    | 10 ----
 drivers/gpu/drm/amd/dal/dc/core/dc_link.c          |  5 +-
 .../gpu/drm/amd/dal/dc/dce100/dce100_resource.c    |  3 +-
 .../drm/amd/dal/dc/dce110/dce110_hw_sequencer.c    |  4 +-
 .../gpu/drm/amd/dal/dc/dce110/dce110_resource.c    |  3 +-
 .../drm/amd/dal/dc/dce110/dce110_stream_encoder.c  | 20 ++++++-
 .../drm/amd/dal/dc/dce110/dce110_stream_encoder.h  |  7 +++
 .../gpu/drm/amd/dal/dc/dce112/dce112_resource.c    |  3 +-
 drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c  |  3 +-
 .../drm/amd/dal/dc/dce80/dce80_stream_encoder.c    |  4 +-
 drivers/gpu/drm/amd/dal/dc/dm_services.h           |  3 ++
 drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h |  4 ++
 .../amd/dal/dc/virtual/virtual_stream_encoder.c    |  6 +++
 19 files changed, 55 insertions(+), 274 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/audio/audio.h b/drivers/gpu/drm/amd/dal/dc/audio/audio.h
index cf8d507..294ae61 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/audio.h
+++ b/drivers/gpu/drm/amd/dal/dc/audio/audio.h
@@ -76,16 +76,6 @@ struct audio_funcs {
 	 * disable_azalia_audio_jack_presence
 	 */
 
-	enum audio_result (*unmute)(
-		struct audio *audio,
-		enum engine_id engine_id,
-		enum signal_type signal);
-
-	enum audio_result (*mute)(
-		struct audio *audio,
-		enum engine_id engine_id,
-		enum signal_type signal);
-
 	/* SW initialization that cannot be done in constructor. This will
 	 * be done is audio_power_up but is not in audio_interface. It is only
 	 * called by power_up
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/audio_base.c b/drivers/gpu/drm/amd/dal/dc/audio/audio_base.c
index 2f30d96..6214acb 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/audio_base.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/audio_base.c
@@ -81,26 +81,6 @@ static enum audio_result disable_output(
 	return AUDIO_RESULT_OK;
 }
 
-static enum audio_result unmute(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	/*DCE specific, must be implemented in derived*/
-	BREAK_TO_DEBUGGER();
-	return AUDIO_RESULT_OK;
-}
-
-static enum audio_result mute(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	/*DCE specific, must be implemented in derived*/
-	BREAK_TO_DEBUGGER();
-	return AUDIO_RESULT_OK;
-}
-
 static enum audio_result initialize(
 	struct audio *audio)
 {
@@ -127,8 +107,6 @@ static const struct audio_funcs audio_funcs = {
 	.setup = setup,
 	.enable_output = enable_output,
 	.disable_output = disable_output,
-	.unmute = unmute,
-	.mute = mute,
 	.initialize = initialize,
 	.setup_audio_wall_dto = setup_audio_wall_dto,
 };
@@ -258,24 +236,6 @@ enum audio_result dal_audio_disable_output(
 	return audio->funcs->disable_output(audio, engine_id, signal);
 }
 
-/* unmute audio */
-enum audio_result dal_audio_unmute(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	return audio->funcs->unmute(audio, engine_id, signal);
-}
-
-/* mute audio */
-enum audio_result dal_audio_mute(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	return audio->funcs->mute(audio, engine_id, signal);
-}
-
 /* update audio wall clock source */
 void dal_audio_setup_audio_wall_dto(
 	struct audio *audio,
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c b/drivers/gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c
index b7baad5..4869e3c 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c
@@ -212,66 +212,6 @@ static enum audio_result disable_output(
 }
 
 /**
-* unmute
-*
-* @brief
-*  unmute audio, to be called by dal_audio_unmute
-*
-*/
-static enum audio_result unmute(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	switch (signal) {
-	case SIGNAL_TYPE_HDMI_TYPE_A:
-	case SIGNAL_TYPE_DISPLAY_PORT:
-	case SIGNAL_TYPE_DISPLAY_PORT_MST:
-	case SIGNAL_TYPE_EDP:
-		/* unmute Azalia audio */
-		audio->hw_ctx->funcs->unmute_azalia_audio(
-				audio->hw_ctx, engine_id);
-		break;
-	case SIGNAL_TYPE_WIRELESS:
-		/*Do nothing for wireless display*/
-		break;
-	default:
-		return AUDIO_RESULT_ERROR;
-	}
-	return AUDIO_RESULT_OK;
-}
-
-/**
-* mute
-*
-* @brief
-*  mute audio, to be called  by dal_audio_nmute
-*
-*/
-static enum audio_result mute(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	switch (signal) {
-	case SIGNAL_TYPE_HDMI_TYPE_A:
-	case SIGNAL_TYPE_DISPLAY_PORT:
-	case SIGNAL_TYPE_DISPLAY_PORT_MST:
-	case SIGNAL_TYPE_EDP:
-		/* mute Azalia audio */
-		audio->hw_ctx->funcs->mute_azalia_audio(
-				audio->hw_ctx, engine_id);
-		break;
-	case SIGNAL_TYPE_WIRELESS:
-		/*Do nothing for wireless display*/
-		break;
-	default:
-		return AUDIO_RESULT_ERROR;
-	}
-	return AUDIO_RESULT_OK;
-}
-
-/**
 * initialize
 *
 * @brief
@@ -325,8 +265,6 @@ static const struct audio_funcs funcs = {
 	.setup = setup,
 	.enable_output = enable_output,
 	.disable_output = disable_output,
-	.unmute = unmute,
-	.mute = mute,
 	.initialize = initialize,
 	.setup_audio_wall_dto = setup_audio_wall_dto,
 };
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c b/drivers/gpu/drm/amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c
index 24ef235..7734099 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c
@@ -1463,42 +1463,6 @@ static void setup_azalia(
 	configure_azalia(hw_ctx, signal, crtc_info, audio_info);
 }
 
-/* unmute audio */
-static void unmute_azalia_audio(
-	const struct hw_ctx_audio *hw_ctx,
-	enum engine_id engine_id)
-{
-	const uint32_t addr = mmAFMT_AUDIO_PACKET_CONTROL +
-		engine_offset[engine_id];
-
-	uint32_t value = 0;
-
-	value = dm_read_reg(hw_ctx->ctx, addr);
-
-	set_reg_field_value(value, 1,
-		AFMT_AUDIO_PACKET_CONTROL, AFMT_AUDIO_SAMPLE_SEND);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-}
-
-/* mute audio */
-static void mute_azalia_audio(
-	const struct hw_ctx_audio *hw_ctx,
-	enum engine_id engine_id)
-{
-	const uint32_t addr = mmAFMT_AUDIO_PACKET_CONTROL +
-		engine_offset[engine_id];
-
-	uint32_t value = 0;
-
-	value = dm_read_reg(hw_ctx->ctx, addr);
-
-	set_reg_field_value(value, 0,
-		AFMT_AUDIO_PACKET_CONTROL, AFMT_AUDIO_SAMPLE_SEND);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-}
-
 /* enable channel splitting mapping */
 static void setup_channel_splitting_mapping(
 	const struct hw_ctx_audio *hw_ctx,
@@ -1729,10 +1693,6 @@ static const struct hw_ctx_audio_funcs funcs = {
 		disable_dp_audio,
 	.setup_azalia =
 		setup_azalia,
-	.unmute_azalia_audio =
-		unmute_azalia_audio,
-	.mute_azalia_audio =
-		mute_azalia_audio,
 	.hw_initialize =
 		hw_initialize,
 	.get_azalia_clock_info_hdmi =
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c b/drivers/gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c
index b4fb9ed..b1e366e 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c
@@ -185,66 +185,6 @@ static enum audio_result disable_output(
 }
 
 /**
-* unmute
-*
-* @brief
-*  unmute audio, to be called by dal_audio_unmute
-*
-* @param
-*  engine_id         - engine id
-*/
-static enum audio_result unmute(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	switch (signal) {
-	case SIGNAL_TYPE_HDMI_TYPE_A:
-	case SIGNAL_TYPE_WIRELESS:
-	case SIGNAL_TYPE_DISPLAY_PORT:
-	case SIGNAL_TYPE_DISPLAY_PORT_MST:
-	case SIGNAL_TYPE_EDP:
-		/* unmute Azalia audio */
-		audio->hw_ctx->funcs->unmute_azalia_audio(
-				audio->hw_ctx, engine_id);
-		break;
-	default:
-		return AUDIO_RESULT_ERROR;
-	}
-	return AUDIO_RESULT_OK;
-}
-
-/**
-* mute
-*
-* @brief
-*  mute audio, to be called  by dal_audio_nmute
-*
-* @param
-*  engine_id         - engine id
-*/
-static enum audio_result mute(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	switch (signal) {
-	case SIGNAL_TYPE_HDMI_TYPE_A:
-	case SIGNAL_TYPE_WIRELESS:
-	case SIGNAL_TYPE_DISPLAY_PORT:
-	case SIGNAL_TYPE_DISPLAY_PORT_MST:
-	case SIGNAL_TYPE_EDP:
-		/* mute Azalia audio */
-		audio->hw_ctx->funcs->mute_azalia_audio(
-				audio->hw_ctx, engine_id);
-		break;
-	default:
-		return AUDIO_RESULT_ERROR;
-	}
-	return AUDIO_RESULT_OK;
-}
-
-/**
 * initialize
 *
 * @brief
@@ -304,8 +244,6 @@ static const struct audio_funcs funcs = {
 	.setup = setup,
 	.enable_output = enable_output,
 	.disable_output = disable_output,
-	.unmute = unmute,
-	.mute = mute,
 	.initialize = initialize,
 	.setup_audio_wall_dto = setup_audio_wall_dto,
 };
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c b/drivers/gpu/drm/amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c
index edca4d0..5021d0e 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c
@@ -1397,42 +1397,6 @@ static void setup_azalia(
 	configure_azalia(hw_ctx, signal, crtc_info, audio_info);
 }
 
-/* unmute audio */
-static void unmute_azalia_audio(
-	const struct hw_ctx_audio *hw_ctx,
-	enum engine_id engine_id)
-{
-	const uint32_t addr = mmAFMT_AUDIO_PACKET_CONTROL +
-		engine_offset[engine_id];
-
-	uint32_t value = 0;
-
-	value = dm_read_reg(hw_ctx->ctx, addr);
-
-	set_reg_field_value(value, 1,
-		AFMT_AUDIO_PACKET_CONTROL, AFMT_AUDIO_SAMPLE_SEND);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-}
-
-/* mute audio */
-static void mute_azalia_audio(
-	const struct hw_ctx_audio *hw_ctx,
-	enum engine_id engine_id)
-{
-	const uint32_t addr = mmAFMT_AUDIO_PACKET_CONTROL +
-		engine_offset[engine_id];
-
-	uint32_t value = 0;
-
-	value = dm_read_reg(hw_ctx->ctx, addr);
-
-	set_reg_field_value(value, 0,
-		AFMT_AUDIO_PACKET_CONTROL, AFMT_AUDIO_SAMPLE_SEND);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-}
-
 /* initialize HW state */
 static void hw_initialize(
 	const struct hw_ctx_audio *hw_ctx)
@@ -1613,10 +1577,6 @@ static const struct hw_ctx_audio_funcs funcs = {
 		disable_dp_audio,
 	.setup_azalia =
 		setup_azalia,
-	.unmute_azalia_audio =
-		unmute_azalia_audio,
-	.mute_azalia_audio =
-		mute_azalia_audio,
 	.hw_initialize =
 		hw_initialize,
 	.get_azalia_clock_info_hdmi =
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h b/drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h
index d6beb67..f1f9343 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h
+++ b/drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h
@@ -100,16 +100,6 @@ struct hw_ctx_audio_funcs {
 		const struct audio_pll_info *pll_info,
 		const struct audio_info *audio_info);
 
-	/* unmute audio */
-	void (*unmute_azalia_audio)(
-		const struct hw_ctx_audio *hw_ctx,
-		enum engine_id engine_id);
-
-	/* mute audio */
-	void (*mute_azalia_audio)(
-		const struct hw_ctx_audio *hw_ctx,
-		enum engine_id engine_id);
-
 	/* initialize HW state */
 	void (*hw_initialize)(
 		const struct hw_ctx_audio *hw_ctx);
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_link.c b/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
index d1e3754..ae34228 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
@@ -1310,8 +1310,9 @@ static enum dc_status enable_link(struct pipe_ctx *pipe_ctx)
 				pipe_ctx->stream_enc->id);
 
 		/* un-mute audio */
-		dal_audio_unmute(pipe_ctx->audio, pipe_ctx->stream_enc->id,
-				pipe_ctx->stream->signal);
+		/* TODO: audio should be per stream rather than per link */
+		pipe_ctx->stream_enc->funcs->audio_mute_control(
+			pipe_ctx->stream_enc, false);
 	}
 
 	return status;
diff --git a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
index ed5510c..aaa3ee0 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
@@ -299,7 +299,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.HDMI_INFOFRAME_CONTROL0 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL0,\
 	.HDMI_INFOFRAME_CONTROL1 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL1,\
 	.HDMI_VBI_PACKET_CONTROL = mmDIG ## id ## _HDMI_VBI_PACKET_CONTROL,\
-	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL\
+	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL,\
+	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
 }
 
 static const struct dce110_stream_enc_registers stream_enc_regs[] = {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
index b4a4955..5777c45 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
@@ -581,8 +581,8 @@ static void disable_stream(struct pipe_ctx *pipe_ctx)
 
 	if (pipe_ctx->audio) {
 		/* mute audio */
-		dal_audio_mute(pipe_ctx->audio, pipe_ctx->stream_enc->id,
-				pipe_ctx->stream->signal);
+		pipe_ctx->stream_enc->funcs->audio_mute_control(
+			pipe_ctx->stream_enc, true);
 
 		/* TODO: notify audio driver for if audio modes list changed
 		 * add audio mode list change flag */
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
index df0df34..0b630f0 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
@@ -247,7 +247,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.HDMI_INFOFRAME_CONTROL0 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL0,\
 	.HDMI_INFOFRAME_CONTROL1 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL1,\
 	.HDMI_VBI_PACKET_CONTROL = mmDIG ## id ## _HDMI_VBI_PACKET_CONTROL,\
-	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL\
+	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL,\
+	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
 }
 
 static const struct dce110_stream_enc_registers stream_enc_regs[] = {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c
index 63b2df1..3f56e87 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c
@@ -1069,6 +1069,22 @@ static void dce110_stream_encoder_dp_unblank(
 	dm_write_reg(ctx, addr, value);
 }
 
+#define LINK_REG_UPDATE_N(reg_name, n, ...)	\
+		generic_reg_update_ex(enc110->base.ctx, LINK_REG(reg_name), dm_read_reg(enc110->base.ctx, LINK_REG(reg_name)), n, __VA_ARGS__)
+
+#define LINK_REG_UPDATE(reg_name, field, val)	\
+		LINK_REG_UPDATE_N(reg_name, 1, FD(reg_name##__##field), val)
+
+void dce110_audio_mute_control(
+	struct stream_encoder *enc,
+	bool mute)
+{
+	struct dce110_stream_encoder *enc110 = DCE110STRENC_FROM_STRENC(enc);
+
+	LINK_REG_UPDATE(AFMT_AUDIO_PACKET_CONTROL, AFMT_AUDIO_SAMPLE_SEND, !mute);
+}
+
+
 static const struct stream_encoder_funcs dce110_str_enc_funcs = {
 	.dp_set_stream_attribute =
 		dce110_stream_encoder_dp_set_stream_attribute,
@@ -1089,7 +1105,9 @@ static const struct stream_encoder_funcs dce110_str_enc_funcs = {
 	.dp_blank =
 		dce110_stream_encoder_dp_blank,
 	.dp_unblank =
-		dce110_stream_encoder_dp_unblank
+		dce110_stream_encoder_dp_unblank,
+
+	.audio_mute_control = dce110_audio_mute_control,
 };
 
 bool dce110_stream_encoder_construct(
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.h b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.h
index de2090a..6942517 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.h
@@ -59,6 +59,9 @@ struct dce110_stream_enc_registers {
 	uint32_t HDMI_INFOFRAME_CONTROL1;
 	uint32_t HDMI_VBI_PACKET_CONTROL;
 	uint32_t TMDS_CNTL;
+
+	/* audio stream registers */
+	uint32_t AFMT_AUDIO_PACKET_CONTROL;
 };
 
 struct dce110_stream_encoder {
@@ -73,4 +76,8 @@ bool dce110_stream_encoder_construct(
 	enum engine_id eng_id,
 	const struct dce110_stream_enc_registers *regs);
 
+
+void dce110_audio_mute_control(
+	struct stream_encoder *enc, bool mute);
+
 #endif /* __DC_STREAM_ENCODER_DCE110_H__ */
diff --git a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
index ae86620..7d8df53 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
@@ -293,7 +293,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.HDMI_INFOFRAME_CONTROL0 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL0,\
 	.HDMI_INFOFRAME_CONTROL1 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL1,\
 	.HDMI_VBI_PACKET_CONTROL = mmDIG ## id ## _HDMI_VBI_PACKET_CONTROL,\
-	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL\
+	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL,\
+	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
 }
 
 static const struct dce110_stream_enc_registers stream_enc_regs[] = {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
index af2dc67..bf303b8 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
@@ -298,7 +298,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.HDMI_INFOFRAME_CONTROL0 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL0,\
 	.HDMI_INFOFRAME_CONTROL1 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL1,\
 	.HDMI_VBI_PACKET_CONTROL = mmDIG ## id ## _HDMI_VBI_PACKET_CONTROL,\
-	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL\
+	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL,\
+	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
 }
 
 static const struct dce110_stream_enc_registers stream_enc_regs[] = {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c
index e811658..0b61de7 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c
@@ -1071,7 +1071,9 @@ static const struct stream_encoder_funcs dce80_str_enc_funcs = {
 	.dp_blank =
 		dce80_stream_encoder_dp_blank,
 	.dp_unblank =
-		dce80_stream_encoder_dp_unblank
+		dce80_stream_encoder_dp_unblank,
+
+	.audio_mute_control = dce110_audio_mute_control,
 };
 
 bool dce80_stream_encoder_construct(
diff --git a/drivers/gpu/drm/amd/dal/dc/dm_services.h b/drivers/gpu/drm/amd/dal/dc/dm_services.h
index 81609a4..d49a145 100644
--- a/drivers/gpu/drm/amd/dal/dc/dm_services.h
+++ b/drivers/gpu/drm/amd/dal/dc/dm_services.h
@@ -142,6 +142,9 @@ static inline uint32_t set_reg_field_value_ex(
 void generic_reg_update_ex(const struct dc_context *ctx,
 		uint32_t addr, uint32_t reg_val, int n, ...);
 
+#define FD(reg_field)	reg_field ## __SHIFT, \
+						reg_field ## _MASK
+
 /**************************************
  * Power Play (PP) interfaces
  **************************************/
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h b/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h
index a31dcc9..e999387 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h
@@ -82,6 +82,10 @@ struct stream_encoder_funcs {
 	void (*dp_unblank)(
 		struct stream_encoder *enc,
 		const struct encoder_unblank_param *param);
+
+	void (*audio_mute_control)(
+		struct stream_encoder *enc,
+		bool mute);
 };
 
 #endif /* STREAM_ENCODER_H_ */
diff --git a/drivers/gpu/drm/amd/dal/dc/virtual/virtual_stream_encoder.c b/drivers/gpu/drm/amd/dal/dc/virtual/virtual_stream_encoder.c
index f04ba2a..30d07ef 100644
--- a/drivers/gpu/drm/amd/dal/dc/virtual/virtual_stream_encoder.c
+++ b/drivers/gpu/drm/amd/dal/dc/virtual/virtual_stream_encoder.c
@@ -66,6 +66,10 @@ static void virtual_stream_encoder_dp_unblank(
 	struct stream_encoder *enc,
 	const struct encoder_unblank_param *param) {}
 
+static void virtual_audio_mute_control(
+	struct stream_encoder *enc,
+	bool mute) {}
+
 static const struct stream_encoder_funcs virtual_str_enc_funcs = {
 	.dp_set_stream_attribute =
 		virtual_stream_encoder_dp_set_stream_attribute,
@@ -87,6 +91,8 @@ static const struct stream_encoder_funcs virtual_str_enc_funcs = {
 		virtual_stream_encoder_dp_blank,
 	.dp_unblank =
 		virtual_stream_encoder_dp_unblank,
+
+	.audio_mute_control = virtual_audio_mute_control,
 };
 
 bool virtual_stream_encoder_construct(
-- 
2.7.4

