From 8e9de20f08b5526fbc470d1df795c88d5721f2cd Mon Sep 17 00:00:00 2001
From: Vitaly Prosyak <vitaly.prosyak@amd.com>
Date: Thu, 20 Oct 2016 12:48:15 -0500
Subject: [PATCH 1384/1722] drm/amd/dal: kernel panic is observed while running
 pts benchamrs

Address of surface available after pin.

Change-Id: I3e5dcef9878adf958b5d6dddf931433530865cd9
Signed-off-by: Vitaly Prosyak <vitaly.prosyak@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
index de5b233..69d1edb 100644
--- a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
+++ b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
@@ -414,16 +414,16 @@ static bool get_fb_info(
 }
 static void fill_plane_attributes_from_fb(
 	struct dc_surface *surface,
-	const struct amdgpu_framebuffer *amdgpu_fb)
+	const struct amdgpu_framebuffer *amdgpu_fb, bool addReq)
 {
 	uint64_t tiling_flags;
-	uint64_t fb_location;
+	uint64_t fb_location = 0;
 	const struct drm_framebuffer *fb = &amdgpu_fb->base;
 
 	get_fb_info(
 		amdgpu_fb,
 		&tiling_flags,
-		&fb_location);
+		addReq == true ? &fb_location:NULL);
 
 	surface->address.type                = PLN_ADDR_TYPE_GRAPHICS;
 	surface->address.grph.addr.low_part  = lower_32_bits(fb_location);
@@ -542,7 +542,7 @@ static void fill_gamma_from_crtc(
 
 static void fill_plane_attributes(
 			struct dc_surface *surface,
-			struct drm_plane_state *state)
+			struct drm_plane_state *state, bool addrReq)
 {
 	const struct amdgpu_framebuffer *amdgpu_fb =
 		to_amdgpu_framebuffer(state->fb);
@@ -551,7 +551,8 @@ static void fill_plane_attributes(
 	fill_rects_from_plane_state(state, surface);
 	fill_plane_attributes_from_fb(
 		surface,
-		amdgpu_fb);
+		amdgpu_fb,
+		addrReq);
 
 	/* In case of gamma set, update gamma value */
 	if (crtc->mode.private_flags &
@@ -663,7 +664,7 @@ static void dm_dc_surface_commit(
 	}
 
 	/* Surface programming */
-	fill_plane_attributes(dc_surface, crtc->primary->state);
+	fill_plane_attributes(dc_surface, crtc->primary->state, true);
 	if (crtc->mode.private_flags &
 		AMDGPU_CRTC_MODE_PRIVATE_FLAGS_GAMMASET) {
 		/* reset trigger of gamma */
@@ -3135,7 +3136,8 @@ int amdgpu_dm_atomic_check(struct drm_device *dev,
 				surface = dc_create_surface(dc);
 				fill_plane_attributes(
 					surface,
-					plane_state);
+					plane_state,
+					false);
 
 				add_val_sets_surface(
 							set,
-- 
2.7.4

