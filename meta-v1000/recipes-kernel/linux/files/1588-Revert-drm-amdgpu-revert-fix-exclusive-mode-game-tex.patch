From c67c4382c10804de3b2afc84416a89019bba8166 Mon Sep 17 00:00:00 2001
From: "Hongbo.He" <Hongbo.He@amd.com>
Date: Tue, 6 Dec 2016 16:23:39 +0800
Subject: [PATCH 1588/2094] Revert "drm/amdgpu: "revert fix exclusive mode game
 texture blank(v2)""

This reverts commit 3bf3029fd2416d63d5439fde2412e76ac77d081f.

Change-Id: I10ce2f9a2d3716d3b0e0eced8e7c9a6b32411ba8

Signed-off-by: Avinash M N <avimn@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_ib.c  | 8 ++++++++
 drivers/gpu/drm/amd/amdgpu/amdgpu_sem.c | 3 ++-
 2 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_ib.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_ib.c
index 025e03b..4e60573 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_ib.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_ib.c
@@ -130,6 +130,7 @@ int amdgpu_ib_schedule(struct amdgpu_ring *ring, unsigned num_ibs,
 
 	unsigned i;
 	int r = 0;
+	unsigned extra_nop = 0;
 
 	if (num_ibs == 0)
 		return -EINVAL;
@@ -156,6 +157,11 @@ int amdgpu_ib_schedule(struct amdgpu_ring *ring, unsigned num_ibs,
 	alloc_size = ring->funcs->emit_frame_size + num_ibs *
 		ring->funcs->emit_ib_size;
 
+	if (job && !job->vm_needs_flush && ring->funcs->type == AMDGPU_RING_TYPE_GFX) {
+		extra_nop = 128;
+		alloc_size += extra_nop;
+	}
+
 	r = amdgpu_ring_alloc(ring, alloc_size);
 	if (r) {
 		dev_err(adev->dev, "scheduling IB failed (%d).\n", r);
@@ -173,6 +179,8 @@ int amdgpu_ib_schedule(struct amdgpu_ring *ring, unsigned num_ibs,
 		ring->funcs->insert_start(ring);
 
 	if (vm) {
+		amdgpu_ring_insert_nop(ring, extra_nop); /* prevent CE go too fast than DE */
+
 		r = amdgpu_vm_flush(ring, job);
 		if (r) {
 			amdgpu_ring_undo(ring);
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_sem.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_sem.c
index 0302ea6..2533a46 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_sem.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_sem.c
@@ -318,7 +318,8 @@ void amdgpu_sem_destroy(struct amdgpu_fpriv *fpriv, u32 handle)
 	idr_remove(&fpriv->sem_handles, handle);
 	spin_unlock(&fpriv->sem_handles_lock);
 
-	kref_sub(&sem->kref, 2, amdgpu_sem_free);
+	kref_put(&sem->kref, amdgpu_sem_free);
+	kref_put(&sem->kref, amdgpu_sem_free);
 }
 
 static struct fence *amdgpu_sem_get_fence(struct amdgpu_fpriv *fpriv,
-- 
2.7.4

