From bae3a732e0be00a287d6910cd07625950c2b9d8a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>
Date: Tue, 4 Oct 2016 13:38:20 +0200
Subject: [PATCH 1163/1722] drm/amdgpu: revert "use more than 64KB fragment
 size if possible"
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This reverts commit 1dcd32fb9c54334ec948a0f18174a748d6b14364.

The block size is indeed an equal match, so this can cause performance regressions.

Signed-off-by: Christian KÃ¶nig <christian.koenig@amd.com>
Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c | 18 +++++++-----------
 1 file changed, 7 insertions(+), 11 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
index bdb4d0a..4b45c2c 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
@@ -993,12 +993,12 @@ static void amdgpu_vm_frag_ptes(struct amdgpu_pte_update_params        *params,
          * allocation size to the fragment size.
          */
  
-        const uint64_t frag_align = 1 << AMDGPU_LOG2_PAGES_PER_FRAG; 
-
-        uint64_t frag_start = ALIGN(start, frag_align);
-        uint64_t frag_end = end & ~(frag_align - 1);
- 
-        uint32_t frag;
+        /* SI and newer are optimized for 64KB */
+        uint64_t frag_flags = AMDGPU_PTE_FRAG(AMDGPU_LOG2_PAGES_PER_FRAG);
+        uint64_t frag_align = 1 << AMDGPU_LOG2_PAGES_PER_FRAG;
+       
+	uint64_t frag_start = ALIGN(start, frag_align);
+	uint64_t frag_end = end & ~(frag_align - 1);
  
         /* system pages are non continuously */
         if (params->src || !(flags & AMDGPU_PTE_VALID) ||
@@ -1007,10 +1007,6 @@ static void amdgpu_vm_frag_ptes(struct amdgpu_pte_update_params        *params,
                 amdgpu_vm_update_ptes(params, vm, start, end, dst, flags);
                 return;
         }
-
-        /* use more than 64KB fragment size if possible */
-        frag = lower_32_bits(frag_start | frag_end);
-        frag = likely(frag) ? __ffs(frag) : 31;
  
         /* handle the 4K area at the beginning */
         if (start != frag_start) {
@@ -1021,7 +1017,7 @@ static void amdgpu_vm_frag_ptes(struct amdgpu_pte_update_params        *params,
  
         /* handle the area in the middle */
         amdgpu_vm_update_ptes(params, vm, frag_start, frag_end, dst,
-                              flags | AMDGPU_PTE_FRAG(frag));
+                              flags | frag_flags);
  
         /* handle the 4K area at the end */
         if (frag_end != end) {
-- 
2.7.4

