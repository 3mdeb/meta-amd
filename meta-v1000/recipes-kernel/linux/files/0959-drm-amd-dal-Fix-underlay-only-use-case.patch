From 3341e1e1a37fc84c96e21857833cc0a81325215f Mon Sep 17 00:00:00 2001
From: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date: Tue, 23 Aug 2016 14:24:16 -0400
Subject: [PATCH 0959/1722] drm/amd/dal: Fix underlay only use-case

Change-Id: I36926eb163cd7af9db26eefa0e62d7e0c29b2d77
Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc.c               | 22 +++-----
 drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c  | 37 -------------
 drivers/gpu/drm/amd/dal/dc/dc.h                    |  2 +-
 .../drm/amd/dal/dc/dce110/dce110_hw_sequencer.c    | 60 ++++++++--------------
 .../gpu/drm/amd/dal/dc/dce110/dce110_resource.c    |  4 +-
 drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h      |  8 ---
 6 files changed, 31 insertions(+), 102 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index 2148809..fd3df1f 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -1403,20 +1403,8 @@ void dc_update_surfaces_for_target(struct dc *dc, struct dc_surface_update *upda
 			return;
 		}
 
-		if (updates[i].flip_addr)
-			core_dc->hwss.pipe_control_lock(
-						core_dc->ctx,
-						pipe_ctx->pipe_idx,
-						PIPE_LOCK_CONTROL_SURFACE,
-						true);
-
 		if (updates[i].plane_info || updates[i].scaling_info || is_new_surface[i]) {
 
-			if (updates[i].flip_addr) {
-				surface->public.address = updates[i].flip_addr->address;
-				surface->public.flip_immediate = updates[i].flip_addr->flip_immediate;
-			}
-
 			if (updates[i].plane_info) {
 				surface->public.color_space = updates[i].plane_info->color_space;
 				surface->public.format = updates[i].plane_info->format;
@@ -1439,13 +1427,17 @@ void dc_update_surfaces_for_target(struct dc *dc, struct dc_surface_update *upda
 				pipe_ctx->scl_data.recout.height -= 2;
 				pipe_ctx->scl_data.recout.width -= 2;
 			}
-			core_dc->hwss.update_plane_addr(core_dc, pipe_ctx);
-
 
-		} else if (updates[i].flip_addr) {
+		}
+		if (updates[i].flip_addr) {
 			surface->public.address = updates[i].flip_addr->address;
 			surface->public.flip_immediate = updates[i].flip_addr->flip_immediate;
 
+			core_dc->hwss.pipe_control_lock(
+						core_dc->ctx,
+						pipe_ctx->pipe_idx,
+						PIPE_LOCK_CONTROL_SURFACE,
+						true);
 			core_dc->hwss.update_plane_addr(core_dc, pipe_ctx);
 		}
 
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c
index 933311e..6252e3f 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_hw_sequencer.c
@@ -53,43 +53,6 @@ static const struct tg_color black_color_format[] = {
 	{0x1a2, 0x20, 0x1a2},
 };
 
-static bool front_end_need_program(struct pipe_ctx *old_pipe, struct pipe_ctx *new_pipe)
-{
-	/*TODO: Findout if this is sufficient comparison*/
-
-	if (new_pipe->bottom_pipe && !old_pipe->bottom_pipe)
-		return true;
-
-	if (!new_pipe->bottom_pipe && old_pipe->bottom_pipe)
-		return true;
-
-	/* The scl_data comparison handles the hsplit case where the surface is unmodified*/
-	return new_pipe->surface != old_pipe->surface || memcmp(&old_pipe->scl_data,
-			&new_pipe->scl_data,
-			sizeof(struct scaler_data));
-}
-
-/* loop all children pipes belong to one otg */
-void hw_sequencer_program_pipe_tree(
-	struct core_dc *dc,
-	struct validate_context *context,
-	struct pipe_ctx *const head_pipe_ctx,
-	void (*program_func)(struct core_dc *dc,
-			struct pipe_ctx *pipe_ctx,
-			struct validate_context *context))
-{
-	struct pipe_ctx *pipe_ctx_cur = head_pipe_ctx;
-
-	do {
-		struct pipe_ctx *old_pipe_ctx = &dc->current_context->res_ctx.pipe_ctx[pipe_ctx_cur->pipe_idx];
-		if (front_end_need_program(old_pipe_ctx, pipe_ctx_cur))
-			program_func(dc, pipe_ctx_cur, context);
-
-		/* get pointer to child pipe */
-		pipe_ctx_cur = pipe_ctx_cur->bottom_pipe;
-	} while (pipe_ctx_cur != NULL);
-}
-
 void color_space_to_black_color(
 		enum dc_color_space colorspace,
 	struct tg_color *black_color)
diff --git a/drivers/gpu/drm/amd/dal/dc/dc.h b/drivers/gpu/drm/amd/dal/dc/dc.h
index 5f3642e..ce24705 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc.h
+++ b/drivers/gpu/drm/amd/dal/dc/dc.h
@@ -178,7 +178,7 @@ struct dc_plane_info {
 	enum surface_pixel_format format;
 	enum dc_rotation_angle rotation;
 	enum plane_stereo_format stereo_format;
-	enum dc_color_space color_space;
+	enum dc_color_space color_space; /*todo: wrong place, fits in scaling info*/
 	bool visible;
 };
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
index f0cb5fb..5c9f0a3 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
@@ -1514,29 +1514,21 @@ static void set_default_colors(struct pipe_ctx *pipe_ctx)
 					pipe_ctx->opp, &default_adjust);
 }
 
-static bool blender_configuration_changed(struct pipe_ctx *pipe_ctx, struct pipe_ctx *old_pipe_ctx)
-{
-	if (pipe_ctx->bottom_pipe && !old_pipe_ctx->bottom_pipe)
-		return true;
-
-	if (!pipe_ctx->bottom_pipe && old_pipe_ctx->bottom_pipe)
-		return true;
-
-	return false;
-}
-
 static void program_blender_if_needed(const struct core_dc *dc,
 		struct pipe_ctx *pipe_ctx)
 {
-	struct pipe_ctx *old_pipe_ctx = &dc->current_context->res_ctx.pipe_ctx[pipe_ctx->pipe_idx];
 	enum blender_mode blender_mode = BLENDER_MODE_CURRENT_PIPE;
 
-	if (!old_pipe_ctx->stream || blender_configuration_changed(pipe_ctx, old_pipe_ctx)) {
-		if (pipe_ctx->bottom_pipe)
-			blender_mode = BLENDER_MODE_BLENDING;
-		dc->hwss.set_blender_mode(
-			(struct core_dc *)dc, pipe_ctx->pipe_idx, blender_mode);
+	if (pipe_ctx->bottom_pipe) {
+		if (pipe_ctx->bottom_pipe->surface->public.visible) {
+			if (pipe_ctx->surface->public.visible)
+				blender_mode = BLENDER_MODE_BLENDING;
+			else
+				blender_mode = BLENDER_MODE_OTHER_PIPE;
+		}
 	}
+	dc->hwss.set_blender_mode(
+		(struct core_dc *)dc, pipe_ctx->pipe_idx, blender_mode);
 }
 
 /**
@@ -1890,13 +1882,6 @@ static void dce110_set_bandwidth(struct core_dc *dc)
 	dc->hwss.set_display_clock(dc->current_context);
 }
 
-static void dce110_program_blending(struct core_dc *dc,
-		struct pipe_ctx *pipe_ctx,
-		struct validate_context *context)
-{
-	program_blender_if_needed(dc, pipe_ctx);
-}
-
 static void dce110_program_front_end_for_pipe(struct core_dc *dc,
 		struct pipe_ctx *pipe_ctx,
 		struct validate_context *context)
@@ -1911,15 +1896,14 @@ static void dce110_program_front_end_for_pipe(struct core_dc *dc,
 
 	memset(&tbl_entry, 0, sizeof(tbl_entry));
 
-	if (blender_configuration_changed(pipe_ctx, &dc->current_context->res_ctx.pipe_ctx[pipe_ctx->pipe_idx]))
-		dc->hwss.pipe_control_lock(
-				dc->ctx,
-				pipe_ctx->pipe_idx,
-				PIPE_LOCK_CONTROL_GRAPHICS |
-				PIPE_LOCK_CONTROL_SCL |
-				PIPE_LOCK_CONTROL_BLENDER |
-				PIPE_LOCK_CONTROL_MODE,
-				true);
+	dc->hwss.pipe_control_lock(
+			dc->ctx,
+			pipe_ctx->pipe_idx,
+			PIPE_LOCK_CONTROL_GRAPHICS |
+			PIPE_LOCK_CONTROL_SCL |
+			PIPE_LOCK_CONTROL_BLENDER |
+			PIPE_LOCK_CONTROL_MODE,
+			true);
 
 	if (dc->current_context)
 		old_pipe = &dc->current_context->res_ctx.pipe_ctx[pipe_ctx->pipe_idx];
@@ -2076,16 +2060,14 @@ static void dce110_apply_ctx_to_surface(
 	int i;
 
 	for (i = 0; i < context->res_ctx.pool->pipe_count; i++) {
-		struct pipe_ctx *head_pipe = &context->res_ctx.pipe_ctx[i];
+		struct pipe_ctx *pipe_ctx = &context->res_ctx.pipe_ctx[i];
 
-		if (!head_pipe->surface || head_pipe->top_pipe != NULL)
+		if (!pipe_ctx->surface)
 			continue;
 
-		hw_sequencer_program_pipe_tree(dc, context, head_pipe,
-				dce110_program_front_end_for_pipe);
+		dce110_program_front_end_for_pipe(dc, pipe_ctx, context);
+		program_blender_if_needed(dc, pipe_ctx);
 
-		hw_sequencer_program_pipe_tree(dc, context, head_pipe,
-				dce110_program_blending);
 	}
 
 }
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
index 8f335af..3750cd5 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
@@ -916,9 +916,9 @@ static bool dce110_validate_surface_sets(
 		if (set[i].surface_count > 2)
 			return false;
 
-		if (set[i].surfaces[0]->clip_rect.width
+		if (set[i].surfaces[0]->src_rect.width
 				!= set[i].target->streams[0]->src.width
-				|| set[i].surfaces[0]->clip_rect.height
+				|| set[i].surfaces[0]->src_rect.height
 				!= set[i].target->streams[0]->src.height)
 			return false;
 		if (set[i].surfaces[0]->format
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h b/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
index 9cad1b4..ed81f83 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
@@ -148,14 +148,6 @@ struct hw_sequencer_funcs {
 			int vmin, int vmax);
 };
 
-void hw_sequencer_program_pipe_tree(
-	struct core_dc *dc,
-	struct validate_context *context,
-	struct pipe_ctx *const head_pipe_ctx,
-	void (*program_func)(struct core_dc *dc,
-			struct pipe_ctx *pipe_ctx,
-			struct validate_context *context));
-
 void color_space_to_black_color(
 		enum dc_color_space colorspace,
 	struct tg_color *black_color);
-- 
2.7.4

