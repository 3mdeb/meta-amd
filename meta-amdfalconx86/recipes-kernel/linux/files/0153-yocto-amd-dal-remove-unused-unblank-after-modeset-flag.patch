From e08de3c64f83b55f2fe4ac1ab25ec8f15d2cbbd5 Mon Sep 17 00:00:00 2001
From: Jordan Lazare <Jordan.Lazare@amd.com>
Date: Thu, 11 Jun 2015 14:54:03 -0500
Subject: [PATCH 267/343] amd/dal: remove unused unblank after modeset flag

Signed-off-by: Jordan Lazare <Jordan.Lazare@amd.com>
Reviewed-by: Yeh, Eagle <Eagle.Yeh@amd.com>
Signed-off-by: Sanjay R Mehta <sanju.mehta@amd.com>
---
 .../dal/display_service/ds_dispatch_mode_setting.c | 26 +++++-----------------
 .../drm/amd/dal/display_service/path_mode_set.c    | 14 ------------
 .../drm/amd/dal/include/path_mode_set_interface.h  |  9 --------
 3 files changed, 5 insertions(+), 44 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/display_service/ds_dispatch_mode_setting.c b/drivers/gpu/drm/amd/dal/display_service/ds_dispatch_mode_setting.c
index 008c1b0..197b1aa 100644
--- a/drivers/gpu/drm/amd/dal/display_service/ds_dispatch_mode_setting.c
+++ b/drivers/gpu/drm/amd/dal/display_service/ds_dispatch_mode_setting.c
@@ -69,8 +69,7 @@ static bool build_hw_path_mode(
 /* Program HW layer through HWSS */
 static bool program_hw(
 	struct ds_dispatch *ds,
-	bool enable_display,
-	bool unblank_source);
+	bool enable_display);
 
 /* Update notification and flags after set mode */
 static void post_mode_change_update(
@@ -945,13 +944,8 @@ enum ds_return dal_ds_dispatch_set_mode(
 		bool enable_display =
 			!dal_pms_is_display_power_off_required(path_mode_set);
 
-		bool unblank_source =
-			dal_pms_is_unblank_source_required(path_mode_set);
-
-		result = (program_hw(
-				ds_dispatch,
-				enable_display,
-				unblank_source) ? DS_SUCCESS : DS_ERROR);
+		result = (program_hw(ds_dispatch, enable_display)
+				? DS_SUCCESS : DS_ERROR);
 	}
 
 	if (result == DS_SUCCESS) {
@@ -1152,7 +1146,7 @@ enum ds_return do_reset_mode(
 	}
 
 	if (do_hw_programming)
-		ret = (program_hw(ds_dispatch, false, false) ?
+		ret = (program_hw(ds_dispatch, false) ?
 				DS_SUCCESS : DS_ERROR);
 
 	post_mode_change_update(ds_dispatch);
@@ -1357,8 +1351,7 @@ static bool ds_dispatch_construct(
  */
 static bool program_hw(
 	struct ds_dispatch *ds,
-	bool enable_display,
-	bool unblank_source)
+	bool enable_display)
 {
 	uint32_t path_num = dal_pms_with_data_get_path_mode_num(ds->set);
 
@@ -1400,15 +1393,6 @@ static bool program_hw(
 		if (enable_display)
 			enable_output(ds, hw_mode_set);
 
-		/* Unblank source*/
-		if (unblank_source)
-			for (i = 0; i < num; ++i) {
-				struct hw_path_mode *hw_mode =
-					dal_hw_path_mode_set_get_path_by_index(
-							hw_mode_set, i);
-				dal_hw_sequencer_enable_memory_requests(
-						ds->hwss, hw_mode);
-			}
 	}
 
 	/* TODO: update ISR and DRR setup */
diff --git a/drivers/gpu/drm/amd/dal/display_service/path_mode_set.c b/drivers/gpu/drm/amd/dal/display_service/path_mode_set.c
index f89683a..6700f78 100644
--- a/drivers/gpu/drm/amd/dal/display_service/path_mode_set.c
+++ b/drivers/gpu/drm/amd/dal/display_service/path_mode_set.c
@@ -155,20 +155,6 @@ const struct path_mode *dal_pms_get_path_mode_for_display_index(
 	return NULL;
 }
 
-/* Add control flag to unblank source after set mode */
-void dal_pms_unblank_source_after_set_mode(
-		struct path_mode_set *set,
-		bool unblank)
-{
-	set->control_flags.bits.UNBLANCK_SOURCE_AFTER_SETMODE = unblank;
-}
-
-/* Return control flag if source needs to be unblankced after set mode */
-bool dal_pms_is_unblank_source_required(const struct path_mode_set *set)
-{
-	return set->control_flags.bits.UNBLANCK_SOURCE_AFTER_SETMODE;
-}
-
 /* Add control flag to keep display powered off */
 void dal_pms_keep_display_powered_off(
 		struct path_mode_set *set,
diff --git a/drivers/gpu/drm/amd/dal/include/path_mode_set_interface.h b/drivers/gpu/drm/amd/dal/include/path_mode_set_interface.h
index 748f55c..e164fbf 100644
--- a/drivers/gpu/drm/amd/dal/include/path_mode_set_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/path_mode_set_interface.h
@@ -86,15 +86,6 @@ bool dal_pms_remove_path_mode(
 	struct path_mode_set *set,
 	struct path_mode *mode);
 
-/* Add control flag to unblank source after set mode */
-void dal_pms_unblank_source_after_set_mode(
-	struct path_mode_set *set,
-	bool unblank);
-
-/* Return control flag if source needs to be unblankced after set mode */
-bool dal_pms_is_unblank_source_required(
-	const struct path_mode_set *set);
-
 /* Add control flag to keep display powered off */
 void dal_pms_keep_display_powered_off(
 	struct path_mode_set *set,
-- 
1.9.1

