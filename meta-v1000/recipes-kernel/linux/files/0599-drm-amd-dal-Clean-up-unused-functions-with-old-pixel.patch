From 463c58d5972fccc0418aa3da6788a52d14cab482 Mon Sep 17 00:00:00 2001
From: Jordan Lazare <Jordan.Lazare@amd.com>
Date: Fri, 27 May 2016 18:38:03 -0400
Subject: [PATCH 0599/1722] drm/amd/dal: Clean up unused functions with old
 pixel format

Change-Id: I7885c357e9e12c223b2dc2a95021cc36c87bf477
Signed-off-by: Jordan Lazare <Jordan.Lazare@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/dce110/dce110_ipp.h     |  4 -
 .../gpu/drm/amd/dal/dc/dce110/dce110_ipp_gamma.c   | 99 ----------------------
 2 files changed, 103 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_ipp.h b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_ipp.h
index b20a8e7..60eebde 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_ipp.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_ipp.h
@@ -73,8 +73,4 @@ void dce110_ipp_program_prescale(
  */
 void dce110_helper_select_lut(struct dce110_ipp *ipp110);
 
-void dce110_helper_program_black_white_offset(
-	struct dce110_ipp *ipp110,
-	enum pixel_format surface_pixel_format);
-
 #endif /*__DC_IPP_DCE110_H__*/
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_ipp_gamma.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_ipp_gamma.c
index 5d0fc59..79a6a6d 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_ipp_gamma.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_ipp_gamma.c
@@ -48,14 +48,6 @@ static void set_lut_inc(
 	bool is_float,
 	bool is_signed);
 
-static void program_black_offsets(
-	struct dce110_ipp *ipp110,
-	struct dev_c_lut16 *offset);
-
-static void program_white_offsets(
-	struct dce110_ipp *ipp110,
-	struct dev_c_lut16 *offset);
-
 bool dce110_ipp_set_degamma(
 	struct input_pixel_processor *ipp,
 	enum ipp_degamma_mode mode)
@@ -309,94 +301,3 @@ void dce110_helper_select_lut(struct dce110_ipp *ipp110)
 		dm_write_reg(ipp110->base.ctx, addr, value);
 	}
 }
-
-static void program_black_offsets(
-	struct dce110_ipp *ipp110,
-	struct dev_c_lut16 *offset)
-{
-	dm_write_reg(ipp110->base.ctx,
-		DCP_REG(mmDC_LUT_BLACK_OFFSET_RED),
-		offset->red);
-	dm_write_reg(ipp110->base.ctx,
-		DCP_REG(mmDC_LUT_BLACK_OFFSET_GREEN),
-		offset->green);
-	dm_write_reg(ipp110->base.ctx,
-		DCP_REG(mmDC_LUT_BLACK_OFFSET_BLUE),
-		offset->blue);
-}
-
-static void program_white_offsets(
-	struct dce110_ipp *ipp110,
-	struct dev_c_lut16 *offset)
-{
-	dm_write_reg(ipp110->base.ctx,
-		DCP_REG(mmDC_LUT_WHITE_OFFSET_RED),
-		offset->red);
-	dm_write_reg(ipp110->base.ctx,
-		DCP_REG(mmDC_LUT_WHITE_OFFSET_GREEN),
-		offset->green);
-	dm_write_reg(ipp110->base.ctx,
-		DCP_REG(mmDC_LUT_WHITE_OFFSET_BLUE),
-		offset->blue);
-}
-
-void dce110_helper_program_black_white_offset(
-	struct dce110_ipp *ipp110,
-	enum pixel_format surface_pixel_format)
-{
-	struct dev_c_lut16 black_offset;
-	struct dev_c_lut16 white_offset;
-
-	/* get black offset */
-
-	switch (surface_pixel_format) {
-	case PIXEL_FORMAT_FP16:
-		/* sRGB gamut, [0.0...1.0] */
-		black_offset.red = 0;
-		black_offset.green = 0;
-		black_offset.blue = 0;
-	break;
-
-	case PIXEL_FORMAT_ARGB2101010_XRBIAS:
-		/* [-1.0...3.0] */
-		black_offset.red = 0x100;
-		black_offset.green = 0x100;
-		black_offset.blue = 0x100;
-	break;
-
-	default:
-		black_offset.red = 0;
-		black_offset.green = 0;
-		black_offset.blue = 0;
-	}
-
-	/* get white offset */
-
-	switch (surface_pixel_format) {
-	case PIXEL_FORMAT_FP16:
-		white_offset.red = 0x3BFF;
-		white_offset.green = 0x3BFF;
-		white_offset.blue = 0x3BFF;
-	break;
-
-	case PIXEL_FORMAT_ARGB2101010_XRBIAS:
-		white_offset.red = 0x37E;
-		white_offset.green = 0x37E;
-		white_offset.blue = 0x37E;
-		break;
-
-	case PIXEL_FORMAT_ARGB8888:
-		white_offset.red = 0xFF;
-		white_offset.green = 0xFF;
-		white_offset.blue = 0xFF;
-		break;
-
-	default:
-		white_offset.red = 0x3FF;
-		white_offset.green = 0x3FF;
-		white_offset.blue = 0x3FF;
-	}
-
-	program_black_offsets(ipp110, &black_offset);
-	program_white_offsets(ipp110, &white_offset);
-}
-- 
2.7.4

