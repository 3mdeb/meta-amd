From 463e00259579b7c83017ca1d7f478222c7e04df6 Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Tue, 12 Apr 2016 09:36:51 +1000
Subject: [PATCH 0541/1722] drm/amd/dal: drop
 prepare_scratch_active_and_requested

None of this code was being called from anywhere.

Signed-off-by: Dave Airlie <airlied@redhat.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c      | 35 ---------
 .../gpu/drm/amd/dal/dc/bios/bios_parser_helper.h   |  5 --
 .../dal/dc/bios/dce110/bios_parser_helper_dce110.c | 91 ----------------------
 .../dal/dc/bios/dce112/bios_parser_helper_dce112.c | 91 ----------------------
 .../dal/dc/bios/dce80/bios_parser_helper_dce80.c   | 85 --------------------
 5 files changed, 307 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c b/drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c
index 266cd3e..2fa8922 100644
--- a/drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c
+++ b/drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c
@@ -4145,41 +4145,6 @@ void dc_bios_set_scratch_acc_mode_change(struct dc_bios *dcb)
 #endif
 }
 
-/**
- * bios_parser_prepare_scratch_active_and_requested
- *
- * @brief
- *  update VBIOS scratch registers about active and requested displays
- *
- * @param
- *  enum controller_id - controller Id
- *  enum signal_type signal - signal type used on display
- *  const struct connector_device_tag_info * - pointer to display type and
- *  enum Id
- */
-void dc_bios_prepare_scratch_active_and_requested(struct dc_bios *dcb,
-						  enum controller_id controller_id,
-						  enum signal_type signal,
-						  const struct connector_device_tag_info *device_tag)
-{
-	struct bios_parser *bp = BP_FROM_DCB(dcb);
-
-#ifdef CONFIG_DRM_AMD_DAL_VBIOS_PRESENT
-	bp->bios_helper->prepare_scratch_active_and_requested(
-			bp->ctx,
-			&bp->vbios_helper_data,
-			controller_id,
-			signal,
-			device_tag);
-#else
-	dal_logger_write(bp->ctx->logger,
-			LOG_MAJOR_BIOS,
-			LOG_MINOR_BIOS_CMD_TABLE,
-			"%s: VBIOS is not supported", __func__);
-#endif
-}
-
-
 /*
  * get_integrated_info_v8
  *
diff --git a/drivers/gpu/drm/amd/dal/dc/bios/bios_parser_helper.h b/drivers/gpu/drm/amd/dal/dc/bios/bios_parser_helper.h
index 481a83e..7a34892 100644
--- a/drivers/gpu/drm/amd/dal/dc/bios/bios_parser_helper.h
+++ b/drivers/gpu/drm/amd/dal/dc/bios/bios_parser_helper.h
@@ -55,11 +55,6 @@ struct bios_parser_helper {
 		struct dc_context *ctx);
 	bool (*is_accelerated_mode)(
 		struct dc_context *ctx);
-	void (*prepare_scratch_active_and_requested)(
-		struct dc_context *ctx,
-		struct vbios_helper_data *data,
-		enum controller_id id, enum signal_type s,
-		const struct connector_device_tag_info *dev_tag);
 	enum lcd_scale (*get_scratch_lcd_scale)(
 		struct dc_context *ctx);
 };
diff --git a/drivers/gpu/drm/amd/dal/dc/bios/dce110/bios_parser_helper_dce110.c b/drivers/gpu/drm/amd/dal/dc/bios/dce110/bios_parser_helper_dce110.c
index 3ed297b..c1f364a 100644
--- a/drivers/gpu/drm/amd/dal/dc/bios/dce110/bios_parser_helper_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/bios/dce110/bios_parser_helper_dce110.c
@@ -79,95 +79,6 @@ static enum lcd_scale get_scratch_lcd_scale(
 		return LCD_SCALE_NONE;
 }
 
-/**
- * prepare_scratch_active_and_requested
- *
- * @brief
- *  prepare and update VBIOS scratch pad registers about active and requested
- *  displays
- *
- * @param
- * data - helper's shared data
- * enum controller_ild - controller Id
- * enum signal_type - signal type used on display
- * const struct connector_device_tag_info* - pointer to display type and enum id
- */
-static void prepare_scratch_active_and_requested(
-	struct dc_context *ctx,
-	struct vbios_helper_data *data,
-	enum controller_id id,
-	enum signal_type s,
-	const struct connector_device_tag_info *dev_tag)
-{
-	switch (s) {
-	case SIGNAL_TYPE_DVI_SINGLE_LINK:
-	case SIGNAL_TYPE_DVI_DUAL_LINK:
-	case SIGNAL_TYPE_HDMI_TYPE_A:
-	case SIGNAL_TYPE_DISPLAY_PORT:
-	case SIGNAL_TYPE_DISPLAY_PORT_MST:
-		if (dev_tag->dev_id.device_type == DEVICE_TYPE_DFP)
-			switch (dev_tag->dev_id.enum_id) {
-			case 1:
-				data->requested |= ATOM_S6_ACC_REQ_DFP1;
-				data->active |= ATOM_S3_DFP1_ACTIVE;
-				break;
-			case 2:
-				data->requested |= ATOM_S6_ACC_REQ_DFP2;
-				data->active |= ATOM_S3_DFP2_ACTIVE;
-				break;
-			case 3:
-				data->requested |= ATOM_S6_ACC_REQ_DFP3;
-				data->active |= ATOM_S3_DFP3_ACTIVE;
-				break;
-			case 4:
-				data->requested |= ATOM_S6_ACC_REQ_DFP4;
-				data->active |= ATOM_S3_DFP4_ACTIVE;
-				break;
-			case 5:
-				data->requested |= ATOM_S6_ACC_REQ_DFP5;
-				data->active |= ATOM_S3_DFP5_ACTIVE;
-				break;
-			case 6:
-				data->requested |= ATOM_S6_ACC_REQ_DFP6;
-				data->active |= ATOM_S3_DFP6_ACTIVE;
-				break;
-			default:
-				break;
-			}
-		break;
-	case SIGNAL_TYPE_LVDS:
-	case SIGNAL_TYPE_EDP:
-		data->requested |= ATOM_S6_ACC_REQ_LCD1;
-		data->active |= ATOM_S3_LCD1_ACTIVE;
-		break;
-	case SIGNAL_TYPE_RGB:
-		if (dev_tag->dev_id.device_type == DEVICE_TYPE_CRT)
-			switch (dev_tag->dev_id.enum_id) {
-			case 1:
-				data->requested |= ATOM_S6_ACC_REQ_CRT1;
-				data->active |= ATOM_S3_CRT1_ACTIVE;
-				break;
-			case 2:
-				dal_logger_write(ctx->logger,
-					LOG_MAJOR_BIOS,
-					LOG_MINOR_COMPONENT_BIOS,
-					"%s: DAL does not support DAC2!\n",
-					__func__);
-				break;
-			default:
-				break;
-			}
-		break;
-	default:
-		dal_logger_write(ctx->logger,
-				LOG_MAJOR_BIOS,
-				LOG_MINOR_COMPONENT_BIOS,
-				"%s: No such signal!\n",
-				__func__);
-		break;
-	}
-}
-
 /*
  * is_accelerated_mode
  *
@@ -281,8 +192,6 @@ static const struct bios_parser_helper bios_parser_helper_funcs = {
 	.detect_sink = detect_sink,
 	.get_scratch_lcd_scale = get_scratch_lcd_scale,
 	.is_accelerated_mode = is_accelerated_mode,
-	.prepare_scratch_active_and_requested =
-			prepare_scratch_active_and_requested,
 };
 
 /*
diff --git a/drivers/gpu/drm/amd/dal/dc/bios/dce112/bios_parser_helper_dce112.c b/drivers/gpu/drm/amd/dal/dc/bios/dce112/bios_parser_helper_dce112.c
index 45339e7..fbe3b67 100644
--- a/drivers/gpu/drm/amd/dal/dc/bios/dce112/bios_parser_helper_dce112.c
+++ b/drivers/gpu/drm/amd/dal/dc/bios/dce112/bios_parser_helper_dce112.c
@@ -78,95 +78,6 @@ static enum lcd_scale get_scratch_lcd_scale(
 		return LCD_SCALE_NONE;
 }
 
-/**
- * prepare_scratch_active_and_requested
- *
- * @brief
- *  prepare and update VBIOS scratch pad registers about active and requested
- *  displays
- *
- * @param
- * data - helper's shared data
- * enum controller_ild - controller Id
- * enum signal_type - signal type used on display
- * const struct connector_device_tag_info* - pointer to display type and enum id
- */
-static void prepare_scratch_active_and_requested(
-	struct dc_context *ctx,
-	struct vbios_helper_data *data,
-	enum controller_id id,
-	enum signal_type s,
-	const struct connector_device_tag_info *dev_tag)
-{
-	switch (s) {
-	case SIGNAL_TYPE_DVI_SINGLE_LINK:
-	case SIGNAL_TYPE_DVI_DUAL_LINK:
-	case SIGNAL_TYPE_HDMI_TYPE_A:
-	case SIGNAL_TYPE_DISPLAY_PORT:
-	case SIGNAL_TYPE_DISPLAY_PORT_MST:
-		if (dev_tag->dev_id.device_type == DEVICE_TYPE_DFP)
-			switch (dev_tag->dev_id.enum_id) {
-			case 1:
-				data->requested |= ATOM_S6_ACC_REQ_DFP1;
-				data->active |= ATOM_S3_DFP1_ACTIVE;
-				break;
-			case 2:
-				data->requested |= ATOM_S6_ACC_REQ_DFP2;
-				data->active |= ATOM_S3_DFP2_ACTIVE;
-				break;
-			case 3:
-				data->requested |= ATOM_S6_ACC_REQ_DFP3;
-				data->active |= ATOM_S3_DFP3_ACTIVE;
-				break;
-			case 4:
-				data->requested |= ATOM_S6_ACC_REQ_DFP4;
-				data->active |= ATOM_S3_DFP4_ACTIVE;
-				break;
-			case 5:
-				data->requested |= ATOM_S6_ACC_REQ_DFP5;
-				data->active |= ATOM_S3_DFP5_ACTIVE;
-				break;
-			case 6:
-				data->requested |= ATOM_S6_ACC_REQ_DFP6;
-				data->active |= ATOM_S3_DFP6_ACTIVE;
-				break;
-			default:
-				break;
-			}
-		break;
-	case SIGNAL_TYPE_LVDS:
-	case SIGNAL_TYPE_EDP:
-		data->requested |= ATOM_S6_ACC_REQ_LCD1;
-		data->active |= ATOM_S3_LCD1_ACTIVE;
-		break;
-	case SIGNAL_TYPE_RGB:
-		if (dev_tag->dev_id.device_type == DEVICE_TYPE_CRT)
-			switch (dev_tag->dev_id.enum_id) {
-			case 1:
-				data->requested |= ATOM_S6_ACC_REQ_CRT1;
-				data->active |= ATOM_S3_CRT1_ACTIVE;
-				break;
-			case 2:
-				dal_logger_write(ctx->logger,
-					LOG_MAJOR_BIOS,
-					LOG_MINOR_COMPONENT_BIOS,
-					"%s: DAL does not support DAC2!\n",
-					__func__);
-				break;
-			default:
-				break;
-			}
-		break;
-	default:
-		dal_logger_write(ctx->logger,
-				LOG_MAJOR_BIOS,
-				LOG_MINOR_COMPONENT_BIOS,
-				"%s: No such signal!\n",
-				__func__);
-		break;
-	}
-}
-
 /*
  * is_accelerated_mode
  *
@@ -265,8 +176,6 @@ static const struct bios_parser_helper bios_parser_helper_funcs = {
 	.detect_sink = detect_sink,
 	.get_scratch_lcd_scale = get_scratch_lcd_scale,
 	.is_accelerated_mode = is_accelerated_mode,
-	.prepare_scratch_active_and_requested =
-			prepare_scratch_active_and_requested,
 	.set_scratch_acc_mode_change = set_scratch_acc_mode_change
 };
 
diff --git a/drivers/gpu/drm/amd/dal/dc/bios/dce80/bios_parser_helper_dce80.c b/drivers/gpu/drm/amd/dal/dc/bios/dce80/bios_parser_helper_dce80.c
index 70735be..0ee5854 100644
--- a/drivers/gpu/drm/amd/dal/dc/bios/dce80/bios_parser_helper_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/bios/dce80/bios_parser_helper_dce80.c
@@ -129,89 +129,6 @@ static bool is_accelerated_mode(
 	return (value & ATOM_S6_ACC_MODE) ? true : false;
 }
 
-/**
- * prepare_scratch_active_and_requested
- *
- * @brief
- *  prepare and update VBIOS scratch pad registers about active and requested
- *  displays
- *
- * @param
- * data - helper's shared data
- * enum controller_ild - controller Id
- * enum signal_type - signal type used on display
- * const struct connector_device_tag_info* - pointer to display type and enum id
- */
-static void prepare_scratch_active_and_requested(
-	struct dc_context *ctx,
-	struct vbios_helper_data *data,
-	enum controller_id id,
-	enum signal_type s,
-	const struct connector_device_tag_info *dev_tag)
-{
-	switch (s) {
-	case SIGNAL_TYPE_DVI_SINGLE_LINK:
-	case SIGNAL_TYPE_DVI_DUAL_LINK:
-	case SIGNAL_TYPE_HDMI_TYPE_A:
-	case SIGNAL_TYPE_DISPLAY_PORT:
-	case SIGNAL_TYPE_DISPLAY_PORT_MST:
-		if (dev_tag->dev_id.device_type == DEVICE_TYPE_DFP)
-			switch (dev_tag->dev_id.enum_id) {
-			case 1:
-				data->requested |= ATOM_S6_ACC_REQ_DFP1;
-				data->active |= ATOM_S3_DFP1_ACTIVE;
-				break;
-			case 2:
-				data->requested |= ATOM_S6_ACC_REQ_DFP2;
-				data->active |= ATOM_S3_DFP2_ACTIVE;
-				break;
-			case 3:
-				data->requested |= ATOM_S6_ACC_REQ_DFP3;
-				data->active |= ATOM_S3_DFP3_ACTIVE;
-				break;
-			case 4:
-				data->requested |= ATOM_S6_ACC_REQ_DFP4;
-				data->active |= ATOM_S3_DFP4_ACTIVE;
-				break;
-			case 5:
-				data->requested |= ATOM_S6_ACC_REQ_DFP5;
-				data->active |= ATOM_S3_DFP5_ACTIVE;
-				break;
-			case 6:
-				data->requested |= ATOM_S6_ACC_REQ_DFP6;
-				data->active |= ATOM_S3_DFP6_ACTIVE;
-				break;
-			default:
-				break;
-			}
-		break;
-	case SIGNAL_TYPE_LVDS:
-	case SIGNAL_TYPE_EDP:
-		data->requested |= ATOM_S6_ACC_REQ_LCD1;
-		data->active |= ATOM_S3_LCD1_ACTIVE;
-		break;
-	case SIGNAL_TYPE_RGB:
-		if (dev_tag->dev_id.device_type == DEVICE_TYPE_CRT)
-			switch (dev_tag->dev_id.enum_id) {
-			case 1:
-				data->requested |= ATOM_S6_ACC_REQ_CRT1;
-				data->active |= ATOM_S3_CRT1_ACTIVE;
-				break;
-			case 2:
-				/* TODO: DALASSERT_MSG(false, ("%s: DCE 8.0 Does
-				 *  not support DAC2!", __FUNCTION__));
-				 */
-			default:
-				break;
-			}
-		break;
-	default:
-		BREAK_TO_DEBUGGER();
-		break;
-	}
-}
-
-
 static enum lcd_scale get_scratch_lcd_scale(
 	struct dc_context *ctx)
 {
@@ -232,8 +149,6 @@ static const struct bios_parser_helper bios_parser_helper_funcs = {
 	.detect_sink = detect_sink,
 	.get_scratch_lcd_scale = get_scratch_lcd_scale,
 	.is_accelerated_mode = is_accelerated_mode,
-	.prepare_scratch_active_and_requested =
-		prepare_scratch_active_and_requested,
 };
 
 const struct bios_parser_helper *dal_bios_parser_helper_dce80_get_table()
-- 
2.7.4

