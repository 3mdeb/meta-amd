From 5d9a8d4cfbd651b6b435ce04cd1be9d23b106ef3 Mon Sep 17 00:00:00 2001
From: Tony Cheng <tony.cheng@amd.com>
Date: Sat, 15 Oct 2016 22:19:13 -0400
Subject: [PATCH 1335/1722] drm/amd/dal: rework logic of determine number of
 audio

- move logic out of hw_ctx_adapter_service
- HDMI fuse read by resource
- PORT_CONNECTIVITY read by audio object in multi-stream audio support case
- remove hw_ctx_adapter_service

* note: minor sequence change.  old logic will not read DC_PINSTRAPS if HDMI_DISABLE=0.  new logic read both registers in all cases.

Change-Id: Ib03d64f6a780dc9128e084bc492660205403b068
Signed-off-by: Tony Cheng <tony.cheng@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/adapter/Makefile        |  28 +-
 .../gpu/drm/amd/dal/dc/adapter/adapter_service.c   |  76 ------
 .../gpu/drm/amd/dal/dc/adapter/adapter_service.h   |   1 -
 .../adapter/dce110/hw_ctx_adapter_service_dce110.c | 290 --------------------
 .../adapter/dce110/hw_ctx_adapter_service_dce110.h |  39 ---
 .../adapter/dce112/hw_ctx_adapter_service_dce112.c | 291 ---------------------
 .../adapter/dce112/hw_ctx_adapter_service_dce112.h |  39 ---
 .../adapter/dce80/hw_ctx_adapter_service_dce80.c   | 249 ------------------
 .../adapter/dce80/hw_ctx_adapter_service_dce80.h   |  39 ---
 .../diagnostics/hw_ctx_adapter_service_diag.c      | 100 -------
 .../diagnostics/hw_ctx_adapter_service_diag.h      |  32 ---
 .../amd/dal/dc/adapter/hw_ctx_adapter_service.c    | 129 ---------
 .../amd/dal/dc/adapter/hw_ctx_adapter_service.h    |  70 -----
 drivers/gpu/drm/amd/dal/dc/core/dc.c               |  10 -
 drivers/gpu/drm/amd/dal/dc/core/dc_link.c          |  24 +-
 drivers/gpu/drm/amd/dal/dc/core/dc_resource.c      |  71 ++++-
 drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c         |  18 ++
 .../gpu/drm/amd/dal/dc/dce100/dce100_resource.c    |  76 +++---
 .../gpu/drm/amd/dal/dc/dce110/dce110_resource.c    |  30 ++-
 .../gpu/drm/amd/dal/dc/dce112/dce112_resource.c    |  27 +-
 drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c  |  29 +-
 drivers/gpu/drm/amd/dal/dc/inc/core_types.h        |   7 +
 drivers/gpu/drm/amd/dal/dc/inc/hw/audio.h          |   4 +
 drivers/gpu/drm/amd/dal/dc/inc/resource.h          |  10 +-
 .../amd/dal/include/adapter_service_interface.h    |  11 -
 .../drm/amd/dal/include/adapter_service_types.h    |   9 -
 26 files changed, 232 insertions(+), 1477 deletions(-)
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/dce110/hw_ctx_adapter_service_dce110.c
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/dce110/hw_ctx_adapter_service_dce110.h
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/dce112/hw_ctx_adapter_service_dce112.c
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/dce112/hw_ctx_adapter_service_dce112.h
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/dce80/hw_ctx_adapter_service_dce80.c
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/dce80/hw_ctx_adapter_service_dce80.h
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/diagnostics/hw_ctx_adapter_service_diag.c
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/diagnostics/hw_ctx_adapter_service_diag.h
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/hw_ctx_adapter_service.c
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/adapter/hw_ctx_adapter_service.h

diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/Makefile b/drivers/gpu/drm/amd/dal/dc/adapter/Makefile
index 370323e..a70cf13 100644
--- a/drivers/gpu/drm/amd/dal/dc/adapter/Makefile
+++ b/drivers/gpu/drm/amd/dal/dc/adapter/Makefile
@@ -2,35 +2,9 @@
 # Makefile for the 'adapter' sub-component of DAL.
 # It provides the control and status of HW adapter.
 
-ADAPTER = adapter_service.o hw_ctx_adapter_service.o wireless_data_source.o
+ADAPTER = adapter_service.o wireless_data_source.o
 
 AMD_DAL_ADAPTER = $(addprefix $(AMDDALPATH)/dc/adapter/,$(ADAPTER))
 
 AMD_DAL_FILES += $(AMD_DAL_ADAPTER)
 
-###############################################################################
-# DCE 8x
-###############################################################################
-
-ifdef CONFIG_DRM_AMD_DAL_DCE8_0
-AMD_DAL_FILES += $(AMDDALPATH)/dc/adapter/dce80/hw_ctx_adapter_service_dce80.o
-endif
-
-
-###############################################################################
-# DCE 11x
-###############################################################################
-
-ifdef CONFIG_DRM_AMD_DAL_DCE11_0
-AMD_DAL_FILES += $(AMDDALPATH)/dc/adapter/dce110/hw_ctx_adapter_service_dce110.o
-endif
-
-ifdef CONFIG_DRM_AMD_DAL_DCE11_2
-AMD_DAL_FILES += $(AMDDALPATH)/dc/adapter/dce112/hw_ctx_adapter_service_dce112.o
-endif
-
-###############################################################################
-# FPGA Diagnositcs
-###############################################################################
-
-AMD_DAL_FILES += $(AMDDALPATH)/dc/adapter/diagnostics/hw_ctx_adapter_service_diag.o
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
index ca75705..790e836 100644
--- a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
+++ b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
@@ -36,19 +36,10 @@
 
 #include "adapter_service.h"
 
-#include "hw_ctx_adapter_service.h"
 #include "wireless_data_source.h"
 
 #include "atom.h"
 
-#include "dce80/hw_ctx_adapter_service_dce80.h"
-
-#include "dce110/hw_ctx_adapter_service_dce110.h"
-
-#include "dce112/hw_ctx_adapter_service_dce112.h"
-
-#include "diagnostics/hw_ctx_adapter_service_diag.h"
-
 #define ABSOLUTE_BACKLIGHT_MAX 255
 #define DEFAULT_MIN_BACKLIGHT 12
 #define DEFAULT_MAX_BACKLIGHT 255
@@ -632,34 +623,6 @@ static bool generate_feature_set(
 }
 
 /*
- * create_hw_ctx
- *
- * Create HW context for adapter service. This is DCE specific.
- */
-static struct hw_ctx_adapter_service *create_hw_ctx(
-	enum dce_version dce_version,
-	enum dce_environment dce_environment,
-	struct dc_context *ctx)
-{
-	if (IS_FPGA_MAXIMUS_DC(dce_environment))
-		return dal_adapter_service_create_hw_ctx_diag(ctx);
-
-	switch (dce_version) {
-	case DCE_VERSION_8_0:
-		return dal_adapter_service_create_hw_ctx_dce80(ctx);
-	case DCE_VERSION_10_0:
-		return dal_adapter_service_create_hw_ctx_dce110(ctx);
-	case DCE_VERSION_11_0:
-		return dal_adapter_service_create_hw_ctx_dce110(ctx);
-	case DCE_VERSION_11_2:
-		return dal_adapter_service_create_hw_ctx_dce112(ctx);
-	default:
-		ASSERT_CRITICAL(false);
-		return NULL;
-	}
-}
-
-/*
  * adapter_service_destruct
  *
  * Release memory of objects in adapter service
@@ -669,7 +632,6 @@ static void adapter_service_destruct(
 {
 	struct dc_bios *dcb = as->ctx->dc_bios;
 
-	dal_adapter_service_destroy_hw_ctx(&as->hw_ctx);
 	dal_i2caux_destroy(&as->i2caux);
 	dal_gpio_service_destroy(&as->gpio_service);
 	dal_asic_capability_destroy(&as->asic_cap);
@@ -755,17 +717,6 @@ static bool adapter_service_construct(
 		goto failed_to_create_i2caux;
 	}
 
-	/* Create Adapter Service HW Context*/
-	as->hw_ctx = create_hw_ctx(
-			dce_version,
-			as->dce_environment,
-			as->ctx);
-
-	if (!as->hw_ctx) {
-		ASSERT_CRITICAL(false);
-		goto failed_to_create_hw_ctx;
-	}
-
 	/* Integrated info is not provided on discrete ASIC. NULL is allowed */
 	if (dcb->funcs->create_integrated_info)
 		as->integrated_info = dcb->funcs->create_integrated_info(dcb);
@@ -783,9 +734,6 @@ static bool adapter_service_construct(
 	return true;
 
 failed_to_generate_features:
-	dal_adapter_service_destroy_hw_ctx(&as->hw_ctx);
-
-failed_to_create_hw_ctx:
 	dal_i2caux_destroy(&as->i2caux);
 
 failed_to_create_i2caux:
@@ -1162,17 +1110,6 @@ bool dal_adapter_service_get_firmware_info(
 }
 
 /*
- * dal_adapter_service_get_audio_support
- *
- * Get information on audio support
- */
-union audio_support dal_adapter_service_get_audio_support(
-	struct adapter_service *as)
-{
-	return dal_adapter_service_hw_ctx_get_audio_support(as->hw_ctx);
-}
-
-/*
  * dal_adapter_service_get_stream_engines_num
  *
  * Get number of stream engines
@@ -1260,19 +1197,6 @@ struct i2caux *dal_adapter_service_get_i2caux(
 	return as->i2caux;
 }
 
-bool dal_adapter_service_initialize_hw_data(
-	struct adapter_service *as)
-{
-	return as->hw_ctx->funcs->power_up(as->hw_ctx);
-}
-
-struct graphics_object_id dal_adapter_service_enum_audio_object(
-	struct adapter_service *as,
-	uint32_t index)
-{
-	return as->hw_ctx->funcs->enum_audio_object(as->hw_ctx, index);
-}
-
 bool dal_adapter_service_get_embedded_panel_info(
 	struct adapter_service *as,
 	struct embedded_panel_info *info)
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.h b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.h
index aa3fe1c..957bc25 100644
--- a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.h
+++ b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.h
@@ -47,7 +47,6 @@ struct adapter_service {
 	struct gpio_service *gpio_service;
 	struct i2caux *i2caux;
 	struct wireless_data wireless_data;
-	struct hw_ctx_adapter_service *hw_ctx;
 	struct integrated_info *integrated_info;
 	uint32_t platform_methods_mask;
 	uint32_t ac_level_percentage;
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/dce110/hw_ctx_adapter_service_dce110.c b/drivers/gpu/drm/amd/dal/dc/adapter/dce110/hw_ctx_adapter_service_dce110.c
deleted file mode 100644
index 1080953..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/dce110/hw_ctx_adapter_service_dce110.c
+++ /dev/null
@@ -1,290 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#include "dm_services.h"
-
-#include "../hw_ctx_adapter_service.h"
-
-#include "hw_ctx_adapter_service_dce110.h"
-
-#include "include/logger_interface.h"
-#include "include/grph_object_id.h"
-
-#include "dce/dce_11_0_d.h"
-#include "dce/dce_11_0_sh_mask.h"
-
-#ifndef mmCC_DC_HDMI_STRAPS
-#define mmCC_DC_HDMI_STRAPS 0x4819
-#define CC_DC_HDMI_STRAPS__HDMI_DISABLE_MASK 0x40
-#define CC_DC_HDMI_STRAPS__HDMI_DISABLE__SHIFT 0x6
-#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER_MASK 0x700
-#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER__SHIFT 0x8
-#endif
-
-static const struct graphics_object_id invalid_go = {
-	0, ENUM_ID_UNKNOWN, OBJECT_TYPE_UNKNOWN, 0
-};
-
-/* Macro */
-#define AUDIO_STRAPS_HDMI_ENABLE 0x2
-
-#define FROM_HW_CTX(ptr) \
-	container_of((ptr), struct hw_ctx_adapter_service_dce110, base)
-
-static const uint32_t audio_index_reg_offset[] = {
-	/*CZ has 3 DIGs but 4 audio endpoints*/
-	mmAZF0ENDPOINT0_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT1_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT2_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT3_AZALIA_F0_CODEC_ENDPOINT_INDEX
-};
-
-static const uint32_t audio_data_reg_offset[] = {
-	mmAZF0ENDPOINT0_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT1_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT2_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT3_AZALIA_F0_CODEC_ENDPOINT_DATA,
-};
-
-enum {
-	MAX_NUMBER_OF_AUDIO_PINS = 4
-};
-
-static void destruct(
-	struct hw_ctx_adapter_service_dce110 *hw_ctx)
-{
-	/* There is nothing to destruct at the moment */
-	dal_adapter_service_destruct_hw_ctx(&hw_ctx->base);
-}
-
-static void destroy(
-	struct hw_ctx_adapter_service *ptr)
-{
-	struct hw_ctx_adapter_service_dce110 *hw_ctx =
-		FROM_HW_CTX(ptr);
-
-	destruct(hw_ctx);
-
-	dm_free(hw_ctx);
-}
-
-/*
- * enum_audio_object
- *
- * @brief enumerate audio object
- *
- * @param
- * const struct hw_ctx_adapter_service *hw_ctx - [in] provides num of endpoints
- * uint32_t index - [in] audio index
- *
- * @return
- * grphic object id
- */
-static struct graphics_object_id enum_audio_object(
-	const struct hw_ctx_adapter_service *hw_ctx,
-	uint32_t index)
-{
-	uint32_t number_of_connected_audio_endpoints =
-		FROM_HW_CTX(hw_ctx)->number_of_connected_audio_endpoints;
-
-	if (index >= number_of_connected_audio_endpoints ||
-			number_of_connected_audio_endpoints == 0)
-		return invalid_go;
-	else
-		return dal_graphics_object_id_init(
-			AUDIO_ID_INTERNAL_AZALIA,
-			(enum object_enum_id)(index + 1),
-			OBJECT_TYPE_AUDIO);
-}
-
-static uint32_t get_number_of_connected_audio_endpoints_multistream(
-		struct dc_context *ctx)
-{
-	uint32_t num_connected_audio_endpoints = 0;
-	uint32_t i;
-	uint32_t default_config =
-	ixAZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT;
-
-	/* find the total number of streams available via the
-	 * AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT
-	 * registers (one for each pin) starting from pin 1
-	 * up to the max number of audio pins.
-	 * We stop on the first pin where
-	 * PORT_CONNECTIVITY == 1 (as instructed by HW team).
-	 */
-	for (i = 0; i < MAX_NUMBER_OF_AUDIO_PINS; i++) {
-		uint32_t value = 0;
-
-		set_reg_field_value(value,
-			default_config,
-			AZALIA_F0_CODEC_ENDPOINT_INDEX,
-			AZALIA_ENDPOINT_REG_INDEX);
-
-		dm_write_reg(ctx, audio_index_reg_offset[i], value);
-
-		value = 0;
-		value = dm_read_reg(ctx, audio_data_reg_offset[i]);
-
-		/* 1 means not supported*/
-		if (get_reg_field_value(value,
-		AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT,
-		PORT_CONNECTIVITY) == 1)
-			break;
-
-		num_connected_audio_endpoints++;
-	}
-
-	return num_connected_audio_endpoints;
-
-}
-
-/*
- * get_number_of_connected_audio_endpoints
- */
-static uint32_t get_number_of_connected_audio_endpoints(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	uint32_t addr = mmCC_DC_HDMI_STRAPS;
-	uint32_t value = 0;
-	uint32_t field = 0;
-
-	if (hw_ctx->cached_audio_straps == AUDIO_STRAPS_NOT_ALLOWED)
-		/* audio straps indicate no audio supported */
-		return 0;
-
-	value = dm_read_reg(hw_ctx->ctx, addr);
-
-	field = get_reg_field_value(
-			value, CC_DC_HDMI_STRAPS, AUDIO_STREAM_NUMBER);
-	if (field == 1)
-		/* multi streams not supported */
-		return 1;
-	else if (field == 0)
-		/* multi streams supported */
-		return get_number_of_connected_audio_endpoints_multistream(
-				hw_ctx->ctx);
-
-	/* unexpected value */
-	ASSERT_CRITICAL(false);
-	return field;
-}
-
-/*
- * power_up
- *
- * @brief
- * Determine and cache audio support from register.
- *
- * @param
- * struct hw_ctx_adapter_service *hw_ctx - [in] adapter service hw context
- *
- * @return
- * true if succeed, false otherwise
- */
-static bool power_up(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	struct hw_ctx_adapter_service_dce110 *hw_ctx_dce11 =
-			FROM_HW_CTX(hw_ctx);
-	/* Allow DP audio all the time
-	 * without additional pinstrap check on Fusion */
-
-	{
-		uint32_t value = 0;
-		uint32_t field = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, mmCC_DC_HDMI_STRAPS);
-		field = get_reg_field_value(
-				value, CC_DC_HDMI_STRAPS, HDMI_DISABLE);
-
-		if (field == 0) {
-			hw_ctx->cached_audio_straps = AUDIO_STRAPS_DP_HDMI_AUDIO;
-		} else {
-			value = dm_read_reg(
-					hw_ctx->ctx, mmDC_PINSTRAPS);
-			field = get_reg_field_value(
-						value,
-						DC_PINSTRAPS,
-						DC_PINSTRAPS_AUDIO);
-
-			if (field & AUDIO_STRAPS_HDMI_ENABLE)
-				hw_ctx->cached_audio_straps =
-					AUDIO_STRAPS_DP_HDMI_AUDIO_ON_DONGLE;
-			else
-				hw_ctx->cached_audio_straps =
-						AUDIO_STRAPS_DP_AUDIO_ALLOWED;
-		}
-
-	}
-
-	/* get the number of connected audio endpoints */
-	hw_ctx_dce11->number_of_connected_audio_endpoints =
-		get_number_of_connected_audio_endpoints(hw_ctx);
-
-	return true;
-}
-
-static const struct hw_ctx_adapter_service_funcs funcs = {
-	.destroy = destroy,
-	.power_up = power_up,
-	.enum_audio_object = enum_audio_object,
-};
-
-static bool construct(
-	struct hw_ctx_adapter_service_dce110 *hw_ctx,
-	struct dc_context *ctx)
-{
-	if (!dal_adapter_service_construct_hw_ctx(&hw_ctx->base, ctx)) {
-		ASSERT_CRITICAL(false);
-		return false;
-	}
-
-	hw_ctx->base.funcs = &funcs;
-	hw_ctx->number_of_connected_audio_endpoints = 0;
-
-	return true;
-}
-
-struct hw_ctx_adapter_service *
-	dal_adapter_service_create_hw_ctx_dce110(
-			struct dc_context *ctx)
-{
-	struct hw_ctx_adapter_service_dce110 *hw_ctx =
-			dm_alloc(sizeof(struct hw_ctx_adapter_service_dce110));
-
-	if (!hw_ctx) {
-		ASSERT_CRITICAL(false);
-		return NULL;
-	}
-
-	if (construct(hw_ctx, ctx))
-		return &hw_ctx->base;
-
-	ASSERT_CRITICAL(false);
-
-	dm_free(hw_ctx);
-
-	return NULL;
-}
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/dce110/hw_ctx_adapter_service_dce110.h b/drivers/gpu/drm/amd/dal/dc/adapter/dce110/hw_ctx_adapter_service_dce110.h
deleted file mode 100644
index 72b2103..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/dce110/hw_ctx_adapter_service_dce110.h
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_HW_CTX_ADAPTER_SERVICE_DCE110_H__
-#define __DAL_HW_CTX_ADAPTER_SERVICE_DCE110_H__
-
-struct hw_ctx_adapter_service_dce110 {
-	struct hw_ctx_adapter_service base;
-	uint32_t number_of_connected_audio_endpoints;
-};
-
-struct hw_ctx_adapter_service *
-	dal_adapter_service_create_hw_ctx_dce110(
-			struct dc_context *ctx);
-
-#endif /* __DAL_HW_CTX_ADAPTER_SERVICE_DCE110_H__ */
-
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/dce112/hw_ctx_adapter_service_dce112.c b/drivers/gpu/drm/amd/dal/dc/adapter/dce112/hw_ctx_adapter_service_dce112.c
deleted file mode 100644
index 029e3ae..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/dce112/hw_ctx_adapter_service_dce112.c
+++ /dev/null
@@ -1,291 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#include "dm_services.h"
-
-#include "../hw_ctx_adapter_service.h"
-
-#include "hw_ctx_adapter_service_dce112.h"
-
-#include "include/logger_interface.h"
-#include "include/grph_object_id.h"
-
-#include "dce/dce_11_2_d.h"
-#include "dce/dce_11_2_sh_mask.h"
-
-#ifndef mmCC_DC_HDMI_STRAPS
-#define mmCC_DC_HDMI_STRAPS 0x4819
-#define CC_DC_HDMI_STRAPS__HDMI_DISABLE_MASK 0x40
-#define CC_DC_HDMI_STRAPS__HDMI_DISABLE__SHIFT 0x6
-#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER_MASK 0x700
-#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER__SHIFT 0x8
-#endif
-
-static const struct graphics_object_id invalid_go = {
-	0, ENUM_ID_UNKNOWN, OBJECT_TYPE_UNKNOWN, 0
-};
-
-/* Macro */
-#define AUDIO_STRAPS_HDMI_ENABLE 0x2
-
-#define FROM_HW_CTX(ptr) \
-	container_of((ptr), struct hw_ctx_adapter_service_dce112, base)
-
-static const uint32_t audio_index_reg_offset[] = {
-	/*CZ has 3 DIGs but 4 audio endpoints*/
-	mmAZF0ENDPOINT0_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT1_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT2_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT3_AZALIA_F0_CODEC_ENDPOINT_INDEX
-};
-
-static const uint32_t audio_data_reg_offset[] = {
-	mmAZF0ENDPOINT0_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT1_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT2_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT3_AZALIA_F0_CODEC_ENDPOINT_DATA,
-};
-
-enum {
-	MAX_NUMBER_OF_AUDIO_PINS = 4
-};
-
-static void destruct(
-	struct hw_ctx_adapter_service_dce112 *hw_ctx)
-{
-	/* There is nothing to destruct at the moment */
-	dal_adapter_service_destruct_hw_ctx(&hw_ctx->base);
-}
-
-static void destroy(
-	struct hw_ctx_adapter_service *ptr)
-{
-	struct hw_ctx_adapter_service_dce112 *hw_ctx =
-		FROM_HW_CTX(ptr);
-
-	destruct(hw_ctx);
-
-	dm_free(hw_ctx);
-}
-
-/*
- * enum_audio_object
- *
- * @brief enumerate audio object
- *
- * @param
- * const struct hw_ctx_adapter_service *hw_ctx - [in] provides num of endpoints
- * uint32_t index - [in] audio index
- *
- * @return
- * grphic object id
- */
-static struct graphics_object_id enum_audio_object(
-	const struct hw_ctx_adapter_service *hw_ctx,
-	uint32_t index)
-{
-	uint32_t number_of_connected_audio_endpoints =
-		FROM_HW_CTX(hw_ctx)->number_of_connected_audio_endpoints;
-
-	if (index >= number_of_connected_audio_endpoints ||
-			number_of_connected_audio_endpoints == 0)
-		return invalid_go;
-	else
-		return dal_graphics_object_id_init(
-			AUDIO_ID_INTERNAL_AZALIA,
-			(enum object_enum_id)(index + 1),
-			OBJECT_TYPE_AUDIO);
-}
-
-static uint32_t get_number_of_connected_audio_endpoints_multistream(
-		struct dc_context *ctx)
-{
-	uint32_t num_connected_audio_endpoints = 0;
-	uint32_t i;
-	uint32_t default_config =
-	ixAZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT;
-
-	/* find the total number of streams available via the
-	 * AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT
-	 * registers (one for each pin) starting from pin 1
-	 * up to the max number of audio pins.
-	 * We stop on the first pin where
-	 * PORT_CONNECTIVITY == 1 (as instructed by HW team).
-	 */
-	for (i = 0; i < MAX_NUMBER_OF_AUDIO_PINS; i++) {
-		uint32_t value = 0;
-
-		set_reg_field_value(value,
-			default_config,
-			AZALIA_F0_CODEC_ENDPOINT_INDEX,
-			AZALIA_ENDPOINT_REG_INDEX);
-
-		dm_write_reg(ctx, audio_index_reg_offset[i], value);
-
-		value = 0;
-		value = dm_read_reg(ctx, audio_data_reg_offset[i]);
-
-		/* 1 means not supported*/
-		if (get_reg_field_value(value,
-		AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT,
-		PORT_CONNECTIVITY) == 1)
-			break;
-
-		num_connected_audio_endpoints++;
-	}
-
-	return num_connected_audio_endpoints;
-
-}
-
-/*
- * get_number_of_connected_audio_endpoints
- */
-static uint32_t get_number_of_connected_audio_endpoints(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	uint32_t addr = mmCC_DC_HDMI_STRAPS;
-	uint32_t value = 0;
-	uint32_t field = 0;
-
-	if (hw_ctx->cached_audio_straps == AUDIO_STRAPS_NOT_ALLOWED)
-		/* audio straps indicate no audio supported */
-		return 0;
-
-	value = dm_read_reg(hw_ctx->ctx, addr);
-
-	field = get_reg_field_value(
-			value, CC_DC_HDMI_STRAPS, AUDIO_STREAM_NUMBER);
-	if (field == 1)
-		/* multi streams not supported */
-		return 1;
-	else if (field == 0)
-		/* multi streams supported */
-		return get_number_of_connected_audio_endpoints_multistream(
-				hw_ctx->ctx);
-
-	/* unexpected value */
-	ASSERT_CRITICAL(false);
-	return field;
-}
-
-/*
- * power_up
- *
- * @brief
- * Determine and cache audio support from register.
- *
- * @param
- * struct hw_ctx_adapter_service *hw_ctx - [in] adapter service hw context
- *
- * @return
- * true if succeed, false otherwise
- */
-static bool power_up(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	struct hw_ctx_adapter_service_dce112 *hw_ctx_dce11 =
-			FROM_HW_CTX(hw_ctx);
-	/* Allow DP audio all the time
-	 * without additional pinstrap check on Fusion */
-
-	{
-		uint32_t value = 0;
-		uint32_t field = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, mmCC_DC_HDMI_STRAPS);
-		field = get_reg_field_value(
-				value, CC_DC_HDMI_STRAPS, HDMI_DISABLE);
-
-		if (field == 0) {
-			hw_ctx->cached_audio_straps = AUDIO_STRAPS_DP_HDMI_AUDIO;
-		} else {
-			value = dm_read_reg(
-					hw_ctx->ctx, mmDC_PINSTRAPS);
-			field = get_reg_field_value(
-						value,
-						DC_PINSTRAPS,
-						DC_PINSTRAPS_AUDIO);
-
-			if (field & AUDIO_STRAPS_HDMI_ENABLE)
-				hw_ctx->cached_audio_straps =
-					AUDIO_STRAPS_DP_HDMI_AUDIO_ON_DONGLE;
-			else
-				hw_ctx->cached_audio_straps =
-						AUDIO_STRAPS_DP_AUDIO_ALLOWED;
-		}
-
-	}
-
-	/* get the number of connected audio endpoints */
-	hw_ctx_dce11->number_of_connected_audio_endpoints =
-		get_number_of_connected_audio_endpoints(hw_ctx);
-
-	return true;
-}
-
-
-static const struct hw_ctx_adapter_service_funcs funcs = {
-	.destroy = destroy,
-	.power_up = power_up,
-	.enum_audio_object = enum_audio_object,
-};
-
-static bool construct(
-	struct hw_ctx_adapter_service_dce112 *hw_ctx,
-	struct dc_context *ctx)
-{
-	if (!dal_adapter_service_construct_hw_ctx(&hw_ctx->base, ctx)) {
-		ASSERT_CRITICAL(false);
-		return false;
-	}
-
-	hw_ctx->base.funcs = &funcs;
-	hw_ctx->number_of_connected_audio_endpoints = 0;
-
-	return true;
-}
-
-struct hw_ctx_adapter_service *
-	dal_adapter_service_create_hw_ctx_dce112(
-			struct dc_context *ctx)
-{
-	struct hw_ctx_adapter_service_dce112 *hw_ctx =
-			dm_alloc(sizeof(struct hw_ctx_adapter_service_dce112));
-
-	if (!hw_ctx) {
-		ASSERT_CRITICAL(false);
-		return NULL;
-	}
-
-	if (construct(hw_ctx, ctx))
-		return &hw_ctx->base;
-
-	ASSERT_CRITICAL(false);
-
-	dm_free(hw_ctx);
-
-	return NULL;
-}
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/dce112/hw_ctx_adapter_service_dce112.h b/drivers/gpu/drm/amd/dal/dc/adapter/dce112/hw_ctx_adapter_service_dce112.h
deleted file mode 100644
index bc60030..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/dce112/hw_ctx_adapter_service_dce112.h
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_HW_CTX_ADAPTER_SERVICE_DCE112_H__
-#define __DAL_HW_CTX_ADAPTER_SERVICE_DCE112_H__
-
-struct hw_ctx_adapter_service_dce112 {
-	struct hw_ctx_adapter_service base;
-	uint32_t number_of_connected_audio_endpoints;
-};
-
-struct hw_ctx_adapter_service *
-	dal_adapter_service_create_hw_ctx_dce112(
-			struct dc_context *ctx);
-
-#endif /* __DAL_HW_CTX_ADAPTER_SERVICE_DCE112_H__ */
-
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/dce80/hw_ctx_adapter_service_dce80.c b/drivers/gpu/drm/amd/dal/dc/adapter/dce80/hw_ctx_adapter_service_dce80.c
deleted file mode 100644
index 5f005b0..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/dce80/hw_ctx_adapter_service_dce80.c
+++ /dev/null
@@ -1,249 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#include "dm_services.h"
-#include "include/adapter_service_types.h"
-#include "include/grph_object_id.h"
-#include "../hw_ctx_adapter_service.h"
-
-#include "hw_ctx_adapter_service_dce80.h"
-
-#include "dce/dce_8_0_d.h"
-#include "dce/dce_8_0_sh_mask.h"
-
-#ifndef mmCC_DC_HDMI_STRAPS
-#define mmCC_DC_HDMI_STRAPS 0x1918
-#define CC_DC_HDMI_STRAPS__HDMI_DISABLE_MASK 0x40
-#define CC_DC_HDMI_STRAPS__HDMI_DISABLE__SHIFT 0x6
-#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER_MASK 0x700
-#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER__SHIFT 0x8
-#endif
-
-enum {
-	MAX_NUMBER_OF_AUDIO_PINS = 7
-};
-
-static const uint32_t audio_index_reg_offset[] = {
-	mmAZF0ENDPOINT0_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT1_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT2_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT3_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT4_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	mmAZF0ENDPOINT5_AZALIA_F0_CODEC_ENDPOINT_INDEX,
-	/* TR, BN has 7 audio endpoints but 6 DIGs */
-	mmAZF0ENDPOINT6_AZALIA_F0_CODEC_ENDPOINT_INDEX
-};
-
-static const uint32_t audio_data_reg_offset[] = {
-	mmAZF0ENDPOINT0_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT1_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT2_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT3_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT4_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT5_AZALIA_F0_CODEC_ENDPOINT_DATA,
-	mmAZF0ENDPOINT6_AZALIA_F0_CODEC_ENDPOINT_DATA
-};
-
-static const struct graphics_object_id invalid_go = {
-	0, ENUM_ID_UNKNOWN, OBJECT_TYPE_UNKNOWN
-};
-
-#define FROM_HW_CTX(ptr) \
-	container_of((ptr), struct hw_ctx_adapter_service_dce80, base)
-
-static void destruct(
-	struct hw_ctx_adapter_service_dce80 *hw_ctx)
-{
-	/* There is nothing to destruct at the moment */
-
-	dal_adapter_service_destruct_hw_ctx(&hw_ctx->base);
-}
-
-static void destroy(
-	struct hw_ctx_adapter_service *ptr)
-{
-	struct hw_ctx_adapter_service_dce80 *hw_ctx =
-		FROM_HW_CTX(ptr);
-
-	destruct(hw_ctx);
-
-	dm_free(hw_ctx);
-}
-
-static uint32_t get_number_of_connected_audio_endpoints_multistream(
-		struct hw_ctx_adapter_service *hw_ctx)
-{
-	struct dc_context *ctx = hw_ctx->ctx;
-	uint32_t num_connected_audio_endpoints = 0;
-	uint32_t i;
-	uint32_t default_config =
-	ixAZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT;
-
-	/* find the total number of streams available via the
-	 * AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT
-	 * registers (one for each pin) starting from pin 1
-	 * up to the max number of audio pins.
-	 * We stop on the first pin where
-	 * PORT_CONNECTIVITY == 1 (as instructed by HW team).
-	 */
-	for (i = 0; i < MAX_NUMBER_OF_AUDIO_PINS; i++) {
-		uint32_t value = 0;
-
-		set_reg_field_value(value,
-			default_config,
-			AZALIA_F0_CODEC_ENDPOINT_INDEX,
-			AZALIA_ENDPOINT_REG_INDEX);
-
-		dm_write_reg(ctx, audio_index_reg_offset[i], value);
-
-		value = 0;
-		value = dm_read_reg(ctx, audio_data_reg_offset[i]);
-
-		/* 1 means not supported*/
-		if (get_reg_field_value(value,
-		AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT,
-		PORT_CONNECTIVITY) == 1)
-			break;
-
-		num_connected_audio_endpoints++;
-	}
-
-	return num_connected_audio_endpoints;
-}
-
-static uint32_t get_number_of_connected_audio_endpoints(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	uint32_t addr = mmCC_DC_HDMI_STRAPS;
-	uint32_t value = 0;
-	uint32_t field = 0;
-
-	if (hw_ctx->cached_audio_straps == AUDIO_STRAPS_NOT_ALLOWED)
-		/* audio straps indicate no audio supported */
-		return 0;
-
-	value = dm_read_reg(hw_ctx->ctx, addr);
-
-	field = get_reg_field_value(
-			value, CC_DC_HDMI_STRAPS, AUDIO_STREAM_NUMBER);
-	if (field == 1)
-		/* multi streams not supported */
-		return 1;
-	else if (field == 0)
-		/* multi streams supported */
-		return get_number_of_connected_audio_endpoints_multistream(
-				hw_ctx);
-
-	/* unexpected value */
-	ASSERT_CRITICAL(false);
-	return field;
-}
-
-static bool power_up(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	uint32_t value = 0;
-	uint32_t field = 0;
-
-	value = dm_read_reg(hw_ctx->ctx, mmCC_DC_HDMI_STRAPS);
-	field = get_reg_field_value(
-			value, CC_DC_HDMI_STRAPS, HDMI_DISABLE);
-
-	if (field == 0) {
-		hw_ctx->cached_audio_straps = AUDIO_STRAPS_DP_HDMI_AUDIO;
-	} else {
-		value = dm_read_reg(
-				hw_ctx->ctx, mmDC_PINSTRAPS);
-		field = get_reg_field_value(
-					value,
-					DC_PINSTRAPS,
-					DC_PINSTRAPS_AUDIO);
-	}
-
-	/* get the number of connected audio endpoints */
-	FROM_HW_CTX(hw_ctx)->number_of_connected_audio_endpoints =
-		get_number_of_connected_audio_endpoints(hw_ctx);
-
-	return true;
-}
-
-static struct graphics_object_id enum_audio_object(
-	const struct hw_ctx_adapter_service *hw_ctx,
-	uint32_t index)
-{
-	uint32_t number_of_connected_audio_endpoints =
-		FROM_HW_CTX(hw_ctx)->number_of_connected_audio_endpoints;
-
-	if (index >= number_of_connected_audio_endpoints)
-		return invalid_go;
-	else
-		return dal_graphics_object_id_init(
-			AUDIO_ID_INTERNAL_AZALIA,
-			(enum object_enum_id)(index + 1),
-			OBJECT_TYPE_AUDIO);
-}
-
-static const struct hw_ctx_adapter_service_funcs funcs = {
-	destroy,
-	power_up,
-	enum_audio_object,
-};
-
-static bool construct(
-	struct hw_ctx_adapter_service_dce80 *hw_ctx,
-	struct dc_context *ctx)
-{
-	if (!dal_adapter_service_construct_hw_ctx(&hw_ctx->base, ctx)) {
-		BREAK_TO_DEBUGGER();
-		return false;
-	}
-
-	hw_ctx->base.funcs = &funcs;
-
-	hw_ctx->number_of_connected_audio_endpoints = 0;
-
-	return true;
-}
-
-struct hw_ctx_adapter_service *
-	dal_adapter_service_create_hw_ctx_dce80(struct dc_context *ctx)
-{
-	struct hw_ctx_adapter_service_dce80 *hw_ctx =
-			dm_alloc(sizeof(struct hw_ctx_adapter_service_dce80));
-
-	if (!hw_ctx) {
-		BREAK_TO_DEBUGGER();
-		return NULL;
-	}
-
-	if (construct(hw_ctx, ctx))
-		return &hw_ctx->base;
-
-	BREAK_TO_DEBUGGER();
-
-	dm_free(hw_ctx);
-
-	return NULL;
-}
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/dce80/hw_ctx_adapter_service_dce80.h b/drivers/gpu/drm/amd/dal/dc/adapter/dce80/hw_ctx_adapter_service_dce80.h
deleted file mode 100644
index 9fddbe03..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/dce80/hw_ctx_adapter_service_dce80.h
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_HW_CTX_ADAPTER_SERVICE_DCE80_H__
-#define __DAL_HW_CTX_ADAPTER_SERVICE_DCE80_H__
-
-struct hw_ctx_adapter_service_dce80 {
-	struct hw_ctx_adapter_service base;
-	uint32_t number_of_connected_audio_endpoints;
-};
-
-struct hw_ctx_adapter_service *
-	dal_adapter_service_create_hw_ctx_dce80(
-			struct dc_context *ctx);
-
-#endif /* __DAL_HW_CTX_ADAPTER_SERVICE_DCE80_H__ */
-
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/diagnostics/hw_ctx_adapter_service_diag.c b/drivers/gpu/drm/amd/dal/dc/adapter/diagnostics/hw_ctx_adapter_service_diag.c
deleted file mode 100644
index a64b0ef..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/diagnostics/hw_ctx_adapter_service_diag.c
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Copyright 2012-16 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-/* FPGA Diagnostics version of AS HW CTX. */
-
-#include "dm_services.h"
-
-#include "../hw_ctx_adapter_service.h"
-
-#include "hw_ctx_adapter_service_diag.h"
-
-#include "include/logger_interface.h"
-#include "include/grph_object_id.h"
-
-static const struct graphics_object_id invalid_go = {
-	0, ENUM_ID_UNKNOWN, OBJECT_TYPE_UNKNOWN
-};
-
-static void destroy(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-}
-
-static bool power_up(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	return true;
-}
-
-static struct graphics_object_id enum_audio_object(
-	const struct hw_ctx_adapter_service *hw_ctx,
-	uint32_t index)
-{
-	return invalid_go;
-}
-
-static const struct hw_ctx_adapter_service_funcs funcs = {
-	destroy,
-	power_up,
-	enum_audio_object,
-};
-
-static bool construct(
-	struct hw_ctx_adapter_service *hw_ctx,
-	struct dc_context *ctx)
-
-{
-	if (!dal_adapter_service_construct_hw_ctx(hw_ctx, ctx)) {
-		ASSERT_CRITICAL(false);
-		return false;
-	}
-
-	hw_ctx->funcs = &funcs;
-
-	return true;
-}
-
-struct hw_ctx_adapter_service *dal_adapter_service_create_hw_ctx_diag(
-	struct dc_context *ctx)
-{
-	struct hw_ctx_adapter_service *hw_ctx = dm_alloc(sizeof(*hw_ctx));
-
-	if (!hw_ctx) {
-		ASSERT_CRITICAL(false);
-		return NULL;
-	}
-
-	if (construct(hw_ctx, ctx))
-		return hw_ctx;
-
-	ASSERT_CRITICAL(false);
-
-	dm_free(hw_ctx);
-
-	return NULL;
-}
-
-/*****************************************************************************/
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/diagnostics/hw_ctx_adapter_service_diag.h b/drivers/gpu/drm/amd/dal/dc/adapter/diagnostics/hw_ctx_adapter_service_diag.h
deleted file mode 100644
index d939bef..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/diagnostics/hw_ctx_adapter_service_diag.h
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * Copyright 2012-16 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_HW_CTX_ADAPTER_SERVICE_DIAG_H__
-#define __DAL_HW_CTX_ADAPTER_SERVICE_DIAG_H__
-
-struct hw_ctx_adapter_service *dal_adapter_service_create_hw_ctx_diag(
-		struct dc_context *ctx);
-
-#endif /* __DAL_HW_CTX_ADAPTER_SERVICE_DIAG_H__ */
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/hw_ctx_adapter_service.c b/drivers/gpu/drm/amd/dal/dc/adapter/hw_ctx_adapter_service.c
deleted file mode 100644
index b569fb2..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/hw_ctx_adapter_service.c
+++ /dev/null
@@ -1,129 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#include "dm_services.h"
-#include "include/adapter_service_types.h"
-#include "include/grph_object_id.h"
-#include "hw_ctx_adapter_service.h"
-
-static const struct graphics_object_id invalid_go = {
-	0, ENUM_ID_UNKNOWN, OBJECT_TYPE_UNKNOWN
-};
-
-static void destroy(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	/* Attention!
-	 * You must override impl method in derived class */
-	BREAK_TO_DEBUGGER();
-}
-
-static bool power_up(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	/* Attention!
-	 * You must override impl method in derived class */
-	BREAK_TO_DEBUGGER();
-
-	return false;
-}
-
-static struct graphics_object_id enum_audio_object(
-	const struct hw_ctx_adapter_service *hw_ctx,
-	uint32_t index)
-{
-	/* by default, we only allow one audio */
-
-	if (index > 0)
-		return invalid_go;
-	else if (hw_ctx->cached_audio_straps == AUDIO_STRAPS_NOT_ALLOWED)
-		return invalid_go;
-	else
-		return dal_graphics_object_id_init(
-			AUDIO_ID_INTERNAL_AZALIA,
-			ENUM_ID_1,
-			OBJECT_TYPE_AUDIO);
-}
-
-static const struct hw_ctx_adapter_service_funcs funcs = {
-	destroy,
-	power_up,
-	enum_audio_object,
-};
-
-bool dal_adapter_service_construct_hw_ctx(
-	struct hw_ctx_adapter_service *hw_ctx,
-	struct dc_context *ctx)
-{
-
-	hw_ctx->ctx = ctx;
-	hw_ctx->funcs = &funcs;
-	hw_ctx->cached_audio_straps = AUDIO_STRAPS_NOT_ALLOWED;
-
-	return true;
-}
-
-union audio_support dal_adapter_service_hw_ctx_get_audio_support(
-	const struct hw_ctx_adapter_service *hw_ctx)
-{
-	union audio_support result;
-
-	result.raw = 0;
-
-	switch (hw_ctx->cached_audio_straps) {
-	case AUDIO_STRAPS_DP_HDMI_AUDIO:
-		result.bits.HDMI_AUDIO_NATIVE = true;
-		/* do not break ! */
-	case AUDIO_STRAPS_DP_HDMI_AUDIO_ON_DONGLE:
-		result.bits.HDMI_AUDIO_ON_DONGLE = true;
-		/* do not break ! */
-	case AUDIO_STRAPS_DP_AUDIO_ALLOWED:
-		result.bits.DP_AUDIO = true;
-		break;
-	default:
-		break;
-	}
-
-	return result;
-}
-
-void dal_adapter_service_destruct_hw_ctx(
-	struct hw_ctx_adapter_service *hw_ctx)
-{
-	/* There is nothing to destruct at the moment */
-}
-
-void dal_adapter_service_destroy_hw_ctx(
-	struct hw_ctx_adapter_service **ptr)
-{
-	if (!ptr || !*ptr) {
-		BREAK_TO_DEBUGGER();
-		return;
-	}
-
-	(*ptr)->funcs->destroy(*ptr);
-
-	*ptr = NULL;
-}
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/hw_ctx_adapter_service.h b/drivers/gpu/drm/amd/dal/dc/adapter/hw_ctx_adapter_service.h
deleted file mode 100644
index 8cce26f..0000000
--- a/drivers/gpu/drm/amd/dal/dc/adapter/hw_ctx_adapter_service.h
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_HW_CTX_ADAPTER_SERVICE_H__
-#define __DAL_HW_CTX_ADAPTER_SERVICE_H__
-
-enum audio_straps {
-	AUDIO_STRAPS_NOT_ALLOWED = 0,
-	AUDIO_STRAPS_DP_AUDIO_ALLOWED,
-	AUDIO_STRAPS_DP_HDMI_AUDIO_ON_DONGLE,
-	AUDIO_STRAPS_DP_HDMI_AUDIO
-};
-
-struct hw_ctx_adapter_service;
-
-struct hw_ctx_adapter_service_funcs {
-	void (*destroy)(
-		struct hw_ctx_adapter_service *hw_ctx);
-	/* Initializes relevant HW registers
-	 * and caches relevant data from HW registers */
-	bool (*power_up)(
-		struct hw_ctx_adapter_service *hw_ctx);
-	/* Enumerate audio objects */
-	struct graphics_object_id (*enum_audio_object)(
-		const struct hw_ctx_adapter_service *hw_ctx,
-		uint32_t index);
-};
-
-struct hw_ctx_adapter_service {
-	struct dc_context *ctx;
-	const struct hw_ctx_adapter_service_funcs *funcs;
-	enum audio_straps cached_audio_straps;
-};
-
-bool dal_adapter_service_construct_hw_ctx(
-	struct hw_ctx_adapter_service *hw_ctx,
-	struct dc_context *ctx);
-
-union audio_support dal_adapter_service_hw_ctx_get_audio_support(
-	const struct hw_ctx_adapter_service *hw_ctx);
-
-void dal_adapter_service_destruct_hw_ctx(
-	struct hw_ctx_adapter_service *hw_ctx);
-
-void dal_adapter_service_destroy_hw_ctx(
-	struct hw_ctx_adapter_service **ptr);
-
-#endif /* __DAL_HW_CTX_ADAPTER_SERVICE_H__ */
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index d6a0258..f1207a7 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -514,16 +514,6 @@ static bool construct(struct core_dc *dc,
 			dm_error("%s: create_as() failed!\n", __func__);
 			goto as_fail;
 		}
-
-		/* Initialize HW controlled by Adapter Service */
-		if (false == dal_adapter_service_initialize_hw_data(
-				as)) {
-			dm_error("%s: dal_adapter_service_initialize_hw_data()"\
-					"  failed!\n", __func__);
-			/* Note that AS exist, so have to destroy it.*/
-			goto as_fail;
-		}
-
 	}
 
 	dc->res_pool = dc_create_resource_pool(
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_link.c b/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
index 62a83f0..98e033b 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
@@ -399,11 +399,9 @@ static enum signal_type link_detect_sink(struct core_link *link)
 	case CONNECTOR_ID_HDMI_TYPE_A: {
 		/* check audio support:
 		 * if native HDMI is not supported, switch to DVI */
-		union audio_support audio_support =
-			dal_adapter_service_get_audio_support(
-				link->adapter_srv);
+		struct audio_support *aud_support = &link->dc->res_pool->audio_support;
 
-		if (!audio_support.bits.HDMI_AUDIO_NATIVE)
+		if (!aud_support->hdmi_audio_native)
 			if (link->link_id.id == CONNECTOR_ID_HDMI_TYPE_A)
 				result = SIGNAL_TYPE_DVI_SINGLE_LINK;
 	}
@@ -426,13 +424,13 @@ static enum signal_type link_detect_sink(struct core_link *link)
 
 static enum signal_type decide_signal_from_strap_and_dongle_type(
 		enum display_dongle_type dongle_type,
-		union audio_support *audio_support)
+		struct audio_support *audio_support)
 {
 	enum signal_type signal = SIGNAL_TYPE_NONE;
 
 	switch (dongle_type) {
 	case DISPLAY_DONGLE_DP_HDMI_DONGLE:
-		if (audio_support->bits.HDMI_AUDIO_ON_DONGLE)
+		if (audio_support->hdmi_audio_on_dongle)
 			signal =  SIGNAL_TYPE_HDMI_TYPE_A;
 		else
 			signal = SIGNAL_TYPE_DVI_SINGLE_LINK;
@@ -441,7 +439,7 @@ static enum signal_type decide_signal_from_strap_and_dongle_type(
 		signal = SIGNAL_TYPE_DVI_SINGLE_LINK;
 		break;
 	case DISPLAY_DONGLE_DP_HDMI_MISMATCHED_DONGLE:
-		if (audio_support->bits.HDMI_AUDIO_NATIVE)
+		if (audio_support->hdmi_audio_native)
 			signal =  SIGNAL_TYPE_HDMI_TYPE_A;
 		else
 			signal = SIGNAL_TYPE_DVI_SINGLE_LINK;
@@ -457,7 +455,7 @@ static enum signal_type decide_signal_from_strap_and_dongle_type(
 static enum signal_type dp_passive_dongle_detection(
 		struct ddc_service *ddc,
 		struct display_sink_capability *sink_cap,
-		union audio_support *audio_support)
+		struct audio_support *audio_support)
 {
 	dal_ddc_service_i2c_query_dp_dual_mode_adaptor(
 						ddc, sink_cap);
@@ -515,7 +513,7 @@ static void detect_dp(
 	struct core_link *link,
 	struct display_sink_capability *sink_caps,
 	bool *converter_disable_audio,
-	union audio_support *audio_support,
+	struct audio_support *audio_support,
 	bool boot)
 {
 	sink_caps->signal = link_detect_sink(link);
@@ -594,9 +592,7 @@ bool dc_link_detect(const struct dc_link *dc_link, bool boot)
 	struct display_sink_capability sink_caps = { 0 };
 	uint8_t i;
 	bool converter_disable_audio = false;
-	union audio_support audio_support =
-		dal_adapter_service_get_audio_support(
-			link->adapter_srv);
+	struct audio_support *aud_support = &link->dc->res_pool->audio_support;
 	enum dc_edid_status edid_status;
 	struct dc_context *dc_ctx = link->ctx;
 	struct dc_sink *dc_sink;
@@ -624,7 +620,7 @@ bool dc_link_detect(const struct dc_link *dc_link, bool boot)
 		switch (link->public.connector_signal) {
 		case SIGNAL_TYPE_HDMI_TYPE_A: {
 			sink_caps.transaction_type = DDC_TRANSACTION_TYPE_I2C;
-			if (audio_support.bits.HDMI_AUDIO_NATIVE)
+			if (aud_support->hdmi_audio_native)
 				sink_caps.signal = SIGNAL_TYPE_HDMI_TYPE_A;
 			else
 				sink_caps.signal = SIGNAL_TYPE_DVI_SINGLE_LINK;
@@ -656,7 +652,7 @@ bool dc_link_detect(const struct dc_link *dc_link, bool boot)
 				link,
 				&sink_caps,
 				&converter_disable_audio,
-				&audio_support, boot);
+				aud_support, boot);
 
 			/* Active dongle downstream unplug */
 			if (link->public.type == dc_connection_active_dongle
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c b/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
index c5956e8..2c4646c 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
@@ -100,8 +100,41 @@ struct resource_pool *dc_create_resource_pool(struct adapter_service *adapter_se
 }
 
 
+static void update_num_audio(
+	const struct resource_straps *straps,
+	unsigned int *num_audio,
+	struct audio_support *aud_support)
+{
+	/* dal_adapter_service_hw_ctx_get_audio_support */
+	bool dp_audio = false;
+	bool hdmi_audio_on_dongle = false;
+	bool hdmi_audio_native = false;
+
+	if (straps->hdmi_disable == 0) {
+		aud_support->hdmi_audio_native = true;
+		aud_support->hdmi_audio_on_dongle = true;
+		aud_support->dp_audio = true;
+	} else {
+		if (straps->dc_pinstraps_audio & 0x2) {
+			aud_support->hdmi_audio_on_dongle = true;
+			aud_support->dp_audio = true;
+		} else {
+			aud_support->dp_audio = true;
+		}
+	}
+
+	switch (straps->audio_stream_number) {
+	case 0: /* multi streams supported */
+		break;
+	case 1: /* multi streams not supported */
+		*num_audio = 1;
+		break;
+	default:
+		DC_ERR("DC: unexpected audio fuse!\n");
+	};
+}
+
 bool resource_construct(
-	struct adapter_service *adapter_serv,
 	unsigned int num_virtual_links,
 	struct core_dc *dc,
 	struct resource_pool *pool,
@@ -110,23 +143,35 @@ bool resource_construct(
 {
 	struct dc_context *ctx = dc->ctx;
 	int i;
-
+	unsigned int num_audio = caps->num_audio;
+	struct resource_straps straps = {0};
+
+	if (!IS_FPGA_MAXIMUS_DC(dc->ctx->dce_environment))
+		create_funcs->read_dce_straps(dc->ctx, &straps);
+
+	/* find the total number of streams available via the
+	 * AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT
+	 * registers (one for each pin) starting from pin 1
+	 * up to the max number of audio pins.
+	 * We stop on the first pin where
+	 * PORT_CONNECTIVITY == 1 (as instructed by HW team).
+	 */
 	pool->audio_count = 0;
-	for (i = 0; i < pool->pipe_count && i < caps->num_audio; i++) {
-		struct graphics_object_id obj_id;
-
-		obj_id = dal_adapter_service_enum_audio_object(adapter_serv, i);
-		if (false == dal_graphics_object_id_is_valid(obj_id)) {
-			/* no more valid audio objects */
-			break;
-		}
+	update_num_audio(&straps, &num_audio, &pool->audio_support);
+	for (i = 0; i < pool->pipe_count && i < num_audio; i++) {
+		struct audio *aud = create_funcs->create_audio(ctx, i);
 
-		pool->audios[i] = create_funcs->create_audio(ctx, i);
-
-		if (pool->audios[i] == NULL) {
+		if (aud == NULL) {
 			DC_ERR("DC: failed to create audio!\n");
 			return false;
 		}
+
+		if (!aud->funcs->endpoint_valid(aud)) {
+			aud->funcs->destroy(&aud);
+			break;
+		}
+
+		pool->audios[i] = aud;
 		pool->audio_count++;
 	}
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c b/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c
index ebac254..2701ece 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c
@@ -841,6 +841,22 @@ void dce_aud_wall_dto_setup(
 	}
 }
 
+bool dce_aud_endpoint_valid(
+		struct audio *audio)
+{
+	uint32_t value;
+	uint32_t port_connectivity;
+
+	value = AZ_REG_READ(
+			AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT);
+
+	port_connectivity = get_reg_field_value(value,
+			AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT,
+			PORT_CONNECTIVITY);
+
+	return !(port_connectivity == 1);
+}
+
 /* initialize HW state */
 void dce_aud_hw_init(
 		struct audio *audio)
@@ -866,11 +882,13 @@ void dce_aud_hw_init(
 }
 
 static const struct audio_funcs funcs = {
+	.endpoint_valid = dce_aud_endpoint_valid,
 	.hw_init = dce_aud_hw_init,
 	.wall_dto_setup = dce_aud_wall_dto_setup,
 	.az_enable = dce_aud_az_enable,
 	.az_disable = dce_aud_az_disable,
 	.az_configure = dce_aud_az_configure,
+	.destroy = dce_aud_destroy,
 };
 
 void dce_aud_destroy(struct audio **audio)
diff --git a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
index f4b1eca..ac85178 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
@@ -45,6 +45,9 @@
 #include "dce110/dce110_clock_source.h"
 #include "dce/dce_audio.h"
 #include "dce100/dce100_hw_sequencer.h"
+
+#include "reg_helper.h"
+
 #include "dce/dce_10_0_d.h"
 #include "dce/dce_10_0_sh_mask.h"
 
@@ -341,6 +344,44 @@ static const struct dce110_opp_reg_offsets dce100_opp_reg_offsets[] = {
 }
 };
 
+static const struct resource_caps res_cap = {
+	.num_audio = 6,
+};
+
+#define CTX  ctx
+#define REG(reg) mm ## reg
+
+#ifndef mmCC_DC_HDMI_STRAPS
+#define mmCC_DC_HDMI_STRAPS 0x1918
+#define CC_DC_HDMI_STRAPS__HDMI_DISABLE_MASK 0x40
+#define CC_DC_HDMI_STRAPS__HDMI_DISABLE__SHIFT 0x6
+#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER_MASK 0x700
+#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER__SHIFT 0x8
+#endif
+
+static void read_dce_straps(
+	struct dc_context *ctx,
+	struct resource_straps *straps)
+{
+	REG_GET_2(CC_DC_HDMI_STRAPS,
+			HDMI_DISABLE, &straps->hdmi_disable,
+			AUDIO_STREAM_NUMBER, &straps->audio_stream_number);
+
+	REG_GET(DC_PINSTRAPS, DC_PINSTRAPS_AUDIO, &straps->dc_pinstraps_audio);
+}
+
+static struct audio *create_audio(
+		struct dc_context *ctx, unsigned int inst)
+{
+	return dce_audio_create(ctx, inst,
+			&audio_regs[inst], &audio_shift, &audio_mask);
+}
+
+static const struct resource_create_funcs res_create_funcs = {
+	.read_dce_straps = read_dce_straps,
+	.create_audio = create_audio,
+};
+
 static struct timing_generator *dce100_timing_generator_create(
 		struct adapter_service *as,
 		struct dc_context *ctx,
@@ -942,26 +983,6 @@ static bool construct(
 		}
 	}
 
-	pool->base.audio_count = 0;
-	for (i = 0; i < pool->base.pipe_count; i++) {
-		struct graphics_object_id obj_id;
-
-		obj_id = dal_adapter_service_enum_audio_object(as, i);
-		if (false == dal_graphics_object_id_is_valid(obj_id)) {
-			/* no more valid audio objects */
-			break;
-		}
-
-		pool->base.audios[i] = dce_audio_create(
-				ctx, i, &audio_regs[i], &audio_shift, &audio_mask);
-		if (pool->base.audios[i] == NULL) {
-			BREAK_TO_DEBUGGER();
-			dm_error("DC: failed to create DPPs!\n");
-			goto res_create_fail;
-		}
-		pool->base.audio_count++;
-	}
-
 	for (i = 0; i < pool->base.stream_enc_count; i++) {
 		/* TODO: rework fragile code*/
 		if (pool->base.stream_engines.u_all & 1 << i) {
@@ -977,18 +998,9 @@ static bool construct(
 		}
 	}
 
-	for (i = 0; i < num_virtual_links; i++) {
-		pool->base.stream_enc[pool->base.stream_enc_count] =
-			virtual_stream_encoder_create(
-				ctx,
-				ctx->dc_bios);
-		if (pool->base.stream_enc[pool->base.stream_enc_count] == NULL) {
-			BREAK_TO_DEBUGGER();
-			dm_error("DC: failed to create stream_encoder!\n");
-			goto res_create_fail;
-		}
-		pool->base.stream_enc_count++;
-	}
+	if (!resource_construct(num_virtual_links, dc, &pool->base,
+			&res_cap, &res_create_funcs))
+		goto res_create_fail;
 
 	/* Create hardware sequencer */
 	if (!dce100_hw_sequencer_construct(dc))
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
index 38805c7..3d48dfc 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
@@ -48,8 +48,10 @@
 #include "dce110/dce110_hw_sequencer.h"
 #include "adapter_service_interface.h"
 
+#include "reg_helper.h"
+
 #include "dce/dce_11_0_d.h"
-#include "dce/dce_10_0_sh_mask.h"
+#include "dce/dce_11_0_sh_mask.h"
 
 #ifndef mmDP_DPHY_INTERNAL_CTRL
 	#define mmDP_DPHY_INTERNAL_CTRL 0x4aa7
@@ -315,6 +317,28 @@ static const struct resource_caps res_cap = {
 	.num_audio = 4,
 };
 
+#define CTX  ctx
+#define REG(reg) mm ## reg
+
+#ifndef mmCC_DC_HDMI_STRAPS
+#define mmCC_DC_HDMI_STRAPS 0x4819
+#define CC_DC_HDMI_STRAPS__HDMI_DISABLE_MASK 0x40
+#define CC_DC_HDMI_STRAPS__HDMI_DISABLE__SHIFT 0x6
+#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER_MASK 0x700
+#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER__SHIFT 0x8
+#endif
+
+static void read_dce_straps(
+	struct dc_context *ctx,
+	struct resource_straps *straps)
+{
+	REG_GET_2(CC_DC_HDMI_STRAPS,
+			HDMI_DISABLE, &straps->hdmi_disable,
+			AUDIO_STREAM_NUMBER, &straps->audio_stream_number);
+
+	REG_GET(DC_PINSTRAPS, DC_PINSTRAPS_AUDIO, &straps->dc_pinstraps_audio);
+}
+
 static struct audio *create_audio(
 		struct dc_context *ctx, unsigned int inst)
 {
@@ -323,6 +347,7 @@ static struct audio *create_audio(
 }
 
 static const struct resource_create_funcs res_create_funcs = {
+	.read_dce_straps = read_dce_straps,
 	.create_audio = create_audio,
 };
 
@@ -1115,6 +1140,7 @@ static bool construct(
 	struct firmware_info info;
 	struct dc_bios *bp;
 	struct dm_pp_static_clock_info static_clk_info = {0};
+	struct resource_straps straps = {0};
 
 	pool->base.adapter_srv = as;
 	pool->base.funcs = &dce110_res_pool_funcs;
@@ -1276,7 +1302,7 @@ static bool construct(
 		}
 	}
 
-	if (!resource_construct(as, num_virtual_links, dc, &pool->base,
+	if (!resource_construct(num_virtual_links, dc, &pool->base,
 			&res_cap, &res_create_funcs))
 		goto res_create_fail;
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
index f70d357..82ca35b 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
@@ -46,6 +46,8 @@
 
 #include "dce112/dce112_hw_sequencer.h"
 
+#include "reg_helper.h"
+
 #include "dce/dce_11_2_d.h"
 #include "dce/dce_11_2_sh_mask.h"
 
@@ -363,6 +365,28 @@ static const struct resource_caps res_cap = {
 	.num_audio = 6,
 };
 
+#define CTX  ctx
+#define REG(reg) mm ## reg
+
+#ifndef mmCC_DC_HDMI_STRAPS
+#define mmCC_DC_HDMI_STRAPS 0x4819
+#define CC_DC_HDMI_STRAPS__HDMI_DISABLE_MASK 0x40
+#define CC_DC_HDMI_STRAPS__HDMI_DISABLE__SHIFT 0x6
+#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER_MASK 0x700
+#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER__SHIFT 0x8
+#endif
+
+static void read_dce_straps(
+	struct dc_context *ctx,
+	struct resource_straps *straps)
+{
+	REG_GET_2(CC_DC_HDMI_STRAPS,
+			HDMI_DISABLE, &straps->hdmi_disable,
+			AUDIO_STREAM_NUMBER, &straps->audio_stream_number);
+
+	REG_GET(DC_PINSTRAPS, DC_PINSTRAPS_AUDIO, &straps->dc_pinstraps_audio);
+}
+
 static struct audio *create_audio(
 		struct dc_context *ctx, unsigned int inst)
 {
@@ -371,6 +395,7 @@ static struct audio *create_audio(
 }
 
 static const struct resource_create_funcs res_create_funcs = {
+	.read_dce_straps = read_dce_straps,
 	.create_audio = create_audio,
 };
 
@@ -1313,7 +1338,7 @@ static bool construct(
 		}
 	}
 
-	if (!resource_construct(adapter_serv, num_virtual_links, dc,
+	if (!resource_construct(num_virtual_links, dc,
 			&pool->base, &res_cap, &res_create_funcs))
 		goto res_create_fail;
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
index 2960294b..a9658e7 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
@@ -49,6 +49,8 @@
 #include "dce/dce_audio.h"
 #include "dce80/dce80_hw_sequencer.h"
 
+#include "reg_helper.h"
+
 #include "dce/dce_8_0_d.h"
 #include "dce/dce_8_0_sh_mask.h"
 
@@ -328,7 +330,29 @@ static const struct resource_caps res_cap = {
 	.num_audio = 6,
 };
 
-struct audio *create_audio(
+#define CTX  ctx
+#define REG(reg) mm ## reg
+
+#ifndef mmCC_DC_HDMI_STRAPS
+#define mmCC_DC_HDMI_STRAPS 0x1918
+#define CC_DC_HDMI_STRAPS__HDMI_DISABLE_MASK 0x40
+#define CC_DC_HDMI_STRAPS__HDMI_DISABLE__SHIFT 0x6
+#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER_MASK 0x700
+#define CC_DC_HDMI_STRAPS__AUDIO_STREAM_NUMBER__SHIFT 0x8
+#endif
+
+static void read_dce_straps(
+	struct dc_context *ctx,
+	struct resource_straps *straps)
+{
+	REG_GET_2(CC_DC_HDMI_STRAPS,
+			HDMI_DISABLE, &straps->hdmi_disable,
+			AUDIO_STREAM_NUMBER, &straps->audio_stream_number);
+
+	REG_GET(DC_PINSTRAPS, DC_PINSTRAPS_AUDIO, &straps->dc_pinstraps_audio);
+}
+
+static struct audio *create_audio(
 		struct dc_context *ctx, unsigned int inst)
 {
 	return dce_audio_create(ctx, inst,
@@ -336,6 +360,7 @@ struct audio *create_audio(
 }
 
 static const struct resource_create_funcs res_create_funcs = {
+	.read_dce_straps = read_dce_straps,
 	.create_audio = create_audio,
 };
 
@@ -951,7 +976,7 @@ static bool construct(
 		}
 	}
 
-	if (!resource_construct(as, num_virtual_links, dc, &pool->base,
+	if (!resource_construct(num_virtual_links, dc, &pool->base,
 			&res_cap, &res_create_funcs))
 		goto res_create_fail;
 
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/core_types.h b/drivers/gpu/drm/amd/dal/dc/inc/core_types.h
index e82cc67..d10b157 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/core_types.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/core_types.h
@@ -226,6 +226,12 @@ struct resource_funcs {
 			struct core_stream *stream);
 };
 
+struct audio_support{
+	bool dp_audio;
+	bool hdmi_audio_on_dongle;
+	bool hdmi_audio_native;
+};
+
 struct resource_pool {
 	struct scaler_filter * scaler_filter;
 
@@ -252,6 +258,7 @@ struct resource_pool {
 
 	struct audio *audios[MAX_PIPES];
 	unsigned int audio_count;
+	struct audio_support audio_support;
 
 	struct display_clock *display_clock;
 	struct adapter_service *adapter_srv;
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw/audio.h b/drivers/gpu/drm/amd/dal/dc/inc/hw/audio.h
index b28c103..925204f 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw/audio.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw/audio.h
@@ -32,6 +32,8 @@ struct audio;
 
 struct audio_funcs {
 
+	bool (*endpoint_valid)(struct audio *audio);
+
 	void (*hw_init)(struct audio *audio);
 
 	void (*az_enable)(struct audio *audio);
@@ -47,6 +49,8 @@ struct audio_funcs {
 		enum signal_type signal,
 		const struct audio_crtc_info *crtc_info,
 		const struct audio_pll_info *pll_info);
+
+	void (*destroy)(struct audio **audio);
 };
 
 struct audio {
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/resource.h b/drivers/gpu/drm/amd/dal/dc/inc/resource.h
index 8e250cf..6d58699 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/resource.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/resource.h
@@ -40,13 +40,21 @@ struct resource_caps {
 	int num_audio;
 };
 
+struct resource_straps {
+	uint32_t hdmi_disable;
+	uint32_t dc_pinstraps_audio;
+	uint32_t audio_stream_number;
+};
+
 struct resource_create_funcs {
+	void (*read_dce_straps)(
+		struct dc_context *ctx, struct resource_straps *straps);
+
 	struct audio *(*create_audio)(
 			struct dc_context *ctx, unsigned int inst);
 };
 
 bool resource_construct(
-	struct adapter_service *adapter_serv,
 	unsigned int num_virtual_links,
 	struct core_dc *dc,
 	struct resource_pool *pool,
diff --git a/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h b/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
index 65c3a32..d94ab7d9 100644
--- a/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
@@ -389,10 +389,6 @@ uint32_t dal_adapter_service_get_sw_i2c_speed(struct adapter_service *as);
 /* Get HW I2C speed */
 uint32_t dal_adapter_service_get_hw_i2c_speed(struct adapter_service *as);
 
-/* Get information on audio support */
-union audio_support dal_adapter_service_get_audio_support(
-		struct adapter_service *as);
-
 /* Get I2C information from BIOS */
 bool dal_adapter_service_get_i2c_info(
 	struct adapter_service *as,
@@ -410,13 +406,6 @@ struct i2caux *dal_adapter_service_get_i2caux(
 struct dal_asic_runtime_flags dal_adapter_service_get_asic_runtime_flags(
 	struct adapter_service *as);
 
-bool dal_adapter_service_initialize_hw_data(
-	struct adapter_service *as);
-
-struct graphics_object_id dal_adapter_service_enum_audio_object(
-	struct adapter_service *as,
-	uint32_t index);
-
 bool dal_adapter_service_get_embedded_panel_info(
 	struct adapter_service *as,
 	struct embedded_panel_info *info);
diff --git a/drivers/gpu/drm/amd/dal/include/adapter_service_types.h b/drivers/gpu/drm/amd/dal/include/adapter_service_types.h
index 4cb4b4b..366da3f 100644
--- a/drivers/gpu/drm/amd/dal/include/adapter_service_types.h
+++ b/drivers/gpu/drm/amd/dal/include/adapter_service_types.h
@@ -59,13 +59,4 @@ union bandwidth_tuning_params {
 		/ sizeof(uint32_t)];
 };
 
-union audio_support {
-	struct {
-		uint32_t DP_AUDIO:1;
-		uint32_t HDMI_AUDIO_ON_DONGLE:1;
-		uint32_t HDMI_AUDIO_NATIVE:1;
-	} bits;
-	uint32_t raw;
-};
-
 #endif
-- 
2.7.4

