From 5da6c495293c222dd02d4498398e59de1183595f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michel=20D=C3=A4nzer?= <michel.daenzer@amd.com>
Date: Tue, 21 Jul 2015 17:53:42 +0900
Subject: [PATCH 67/67] amdgpu/tests: Cast CPU map argument of
 amdgpu_bo_alloc_and_map to void**
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Silences incompatible pointer type compiler warnings.

Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
Signed-off-by: Arindam Nath <arindam.nath@amd.com>
---
 tests/amdgpu/basic_tests.c | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/tests/amdgpu/basic_tests.c b/tests/amdgpu/basic_tests.c
index 7607e21..44c6e4d 100644
--- a/tests/amdgpu/basic_tests.c
+++ b/tests/amdgpu/basic_tests.c
@@ -515,7 +515,7 @@ static void amdgpu_command_submission_sdma_write_linear(void)
 		r = amdgpu_bo_alloc_and_map(device_handle,
 					    sdma_write_length * sizeof(uint32_t),
 					    4096, AMDGPU_GEM_DOMAIN_GTT,
-					    gtt_flags[loop], &bo, &bo_cpu,
+					    gtt_flags[loop], &bo, (void**)&bo_cpu,
 					    &bo_mc, &va_handle);
 		CU_ASSERT_EQUAL(r, 0);
 
@@ -600,7 +600,7 @@ static void amdgpu_command_submission_sdma_const_fill(void)
 		r = amdgpu_bo_alloc_and_map(device_handle,
 					    sdma_write_length, 4096,
 					    AMDGPU_GEM_DOMAIN_GTT,
-					    gtt_flags[loop], &bo, &bo_cpu,
+					    gtt_flags[loop], &bo, (void**)&bo_cpu,
 					    &bo_mc, &va_handle);
 		CU_ASSERT_EQUAL(r, 0);
 
@@ -685,8 +685,9 @@ static void amdgpu_command_submission_sdma_copy_linear(void)
 			r = amdgpu_bo_alloc_and_map(device_handle,
 						    sdma_write_length, 4096,
 						    AMDGPU_GEM_DOMAIN_GTT,
-						    gtt_flags[loop1], &bo1, &bo1_cpu,
-						    &bo1_mc, &bo1_va_handle);
+						    gtt_flags[loop1], &bo1,
+						    (void**)&bo1_cpu, &bo1_mc,
+						    &bo1_va_handle);
 			CU_ASSERT_EQUAL(r, 0);
 
 			/* set bo1 */
@@ -696,8 +697,9 @@ static void amdgpu_command_submission_sdma_copy_linear(void)
 			r = amdgpu_bo_alloc_and_map(device_handle,
 						    sdma_write_length, 4096,
 						    AMDGPU_GEM_DOMAIN_GTT,
-						    gtt_flags[loop2], &bo2, &bo2_cpu,
-						    &bo2_mc, &bo2_va_handle);
+						    gtt_flags[loop2], &bo2,
+						    (void**)&bo2_cpu, &bo2_mc,
+						    &bo2_va_handle);
 			CU_ASSERT_EQUAL(r, 0);
 
 			/* clear bo2 */
-- 
1.9.1

