From a4b05dd0d817e4a0821a0abfe6e806cc06e3741c Mon Sep 17 00:00:00 2001
From: Yong Zhao <yong.zhao@amd.com>
Date: Tue, 4 Oct 2016 13:32:56 -0400
Subject: [PATCH 1883/2094] drm/amdgpu: Remove kfd_process_device usage in
 amdgpu side

Change-Id: Ieb438f239eca9ecc5f015ca77b8a0f25c6213f61
Signed-off-by: Yong Zhao <yong.zhao@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu.h              | 2 --
 drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.h       | 2 +-
 drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c | 7 +++----
 drivers/gpu/drm/amd/amdkfd/kfd_chardev.c         | 4 ++--
 drivers/gpu/drm/amd/amdkfd/kfd_process.c         | 2 +-
 drivers/gpu/drm/amd/include/kgd_kfd_interface.h  | 3 +--
 drivers/gpu/drm/radeon/radeon.h                  | 1 -
 drivers/gpu/drm/radeon/radeon_kfd.c              | 5 ++---
 8 files changed, 10 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu.h b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
index 072f60b..360ca6e 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
@@ -167,7 +167,6 @@ struct amdgpu_cs_parser;
 struct amdgpu_job;
 struct amdgpu_irq_src;
 struct amdgpu_fpriv;
-struct kfd_process_device;
 struct kfd_vm_fault_info;
 
 enum amdgpu_cp_irq {
@@ -447,7 +446,6 @@ struct amdgpu_bo {
 	struct list_head		mn_list;
 	struct list_head		shadow_list;
 	struct kgd_mem			*kfd_bo;
-	struct kfd_process_device	*pdd;
 };
 #define gem_to_amdgpu_bo(gobj) container_of((gobj), struct amdgpu_gem_object, base)->bo
 
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.h
index a7aba17..fd6392a 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.h
@@ -164,7 +164,7 @@ int amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu(
 		struct kgd_dev *kgd, uint64_t va, uint64_t size,
 		void *vm, struct kgd_mem **mem,
 		uint64_t *offset, void **kptr,
-		struct kfd_process_device *pdd, uint32_t flags);
+		uint32_t flags);
 int amdgpu_amdkfd_gpuvm_free_memory_of_gpu(
 		struct kgd_dev *kgd, struct kgd_mem *mem, void *vm);
 int amdgpu_amdkfd_gpuvm_map_memory_to_gpu(
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
index 3410779..a5afbad 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
@@ -387,7 +387,7 @@ static void add_kgd_mem_to_kfd_bo_list(struct kgd_mem *mem,
 
 static int __alloc_memory_of_gpu(struct kgd_dev *kgd, uint64_t va,
 		uint64_t size, void *vm, struct kgd_mem **mem,
-		uint64_t *offset, void **kptr, struct kfd_process_device *pdd,
+		uint64_t *offset, void **kptr,
 		u32 domain, u64 flags, struct sg_table *sg, bool aql_queue,
 		bool readonly, bool execute, bool no_sub, bool userptr)
 {
@@ -453,7 +453,6 @@ static int __alloc_memory_of_gpu(struct kgd_dev *kgd, uint64_t va,
 		goto err_bo_create;
 	}
 	bo->kfd_bo = *mem;
-	bo->pdd = pdd;
 	(*mem)->data2.bo = bo;
 
 	if (domain == AMDGPU_GEM_DOMAIN_VRAM) {
@@ -879,7 +878,7 @@ int amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu(
 		struct kgd_dev *kgd, uint64_t va, uint64_t size,
 		void *vm, struct kgd_mem **mem,
 		uint64_t *offset, void **kptr,
-		struct kfd_process_device *pdd, uint32_t flags)
+		uint32_t flags)
 {
 	bool aql_queue, public, readonly, execute, no_sub, userptr;
 	u64 alloc_flag;
@@ -946,7 +945,7 @@ int amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu(
 			va);
 
 	return __alloc_memory_of_gpu(kgd, va, size, vm, mem,
-			temp_offset, kptr, pdd, domain,
+			temp_offset, kptr, domain,
 			alloc_flag, sg,
 			aql_queue, readonly, execute,
 			no_sub, userptr);
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c b/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
index 15ee1ad..5668c83 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
@@ -1177,7 +1177,7 @@ static int kfd_ioctl_alloc_memory_of_gpu(struct file *filep,
 
 	err = dev->kfd2kgd->alloc_memory_of_gpu(
 		dev->kgd, args->va_addr, args->size,
-		pdd->vm, (struct kgd_mem **) &mem, NULL, NULL, pdd, 0);
+		pdd->vm, (struct kgd_mem **) &mem, NULL, NULL, 0);
 
 	if (err != 0)
 		return err;
@@ -1318,7 +1318,7 @@ static int kfd_ioctl_alloc_memory_of_gpu_new(struct file *filep,
 	err = dev->kfd2kgd->alloc_memory_of_gpu(
 		dev->kgd, args->va_addr, args->size,
 		pdd->vm, (struct kgd_mem **) &mem, &offset,
-		NULL, pdd, alloc_flags);
+		NULL, alloc_flags);
 
 	if (err != 0)
 		return err;
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_process.c b/drivers/gpu/drm/amd/amdkfd/kfd_process.c
index 39bd629..ac3b7c4 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_process.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_process.c
@@ -99,7 +99,7 @@ static int kfd_process_alloc_gpuvm(struct kfd_process *p,
 
 	err = kdev->kfd2kgd->alloc_memory_of_gpu(kdev->kgd, gpu_va, size,
 				pdd->vm,
-				(struct kgd_mem **)&mem, NULL, kptr, pdd,
+				(struct kgd_mem **)&mem, NULL, kptr,
 				ALLOC_MEM_FLAGS_GTT |
 				ALLOC_MEM_FLAGS_NONPAGED |
 				ALLOC_MEM_FLAGS_EXECUTE_ACCESS |
diff --git a/drivers/gpu/drm/amd/include/kgd_kfd_interface.h b/drivers/gpu/drm/amd/include/kgd_kfd_interface.h
index 520006f..5a9907c 100644
--- a/drivers/gpu/drm/amd/include/kgd_kfd_interface.h
+++ b/drivers/gpu/drm/amd/include/kgd_kfd_interface.h
@@ -312,8 +312,7 @@ struct kfd2kgd_calls {
 	int (*alloc_memory_of_gpu)(struct kgd_dev *kgd, uint64_t va,
 			uint64_t size, void *vm,
 			struct kgd_mem **mem, uint64_t *offset,
-			void **kptr, struct kfd_process_device *pdd,
-			uint32_t flags);
+			void **kptr, uint32_t flags);
 	int (*free_memory_of_gpu)(struct kgd_dev *kgd, struct kgd_mem *mem,
 			void *vm);
 	int (*map_memory_to_gpu)(struct kgd_dev *kgd, struct kgd_mem *mem,
diff --git a/drivers/gpu/drm/radeon/radeon.h b/drivers/gpu/drm/radeon/radeon.h
index cf60801..99bb37b 100644
--- a/drivers/gpu/drm/radeon/radeon.h
+++ b/drivers/gpu/drm/radeon/radeon.h
@@ -512,7 +512,6 @@ struct radeon_bo {
 
 	struct radeon_mn		*mn;
 	struct list_head		mn_list;
-	struct kfd_process_device	*pdd;
 };
 #define gem_to_radeon_bo(gobj) container_of((gobj), struct radeon_bo, gem_base)
 
diff --git a/drivers/gpu/drm/radeon/radeon_kfd.c b/drivers/gpu/drm/radeon/radeon_kfd.c
index f5bb1d0..6786553 100644
--- a/drivers/gpu/drm/radeon/radeon_kfd.c
+++ b/drivers/gpu/drm/radeon/radeon_kfd.c
@@ -92,7 +92,7 @@ static int unmap_memory_from_gpu(struct kgd_dev *kgd, struct kgd_mem *mem,
 static int alloc_memory_of_gpu(struct kgd_dev *kgd, uint64_t va, uint64_t size,
 		void *vm, struct kgd_mem **mem,
 		uint64_t *offset, void **kptr,
-		struct kfd_process_device *pdd, uint32_t flags);
+		uint32_t flags);
 static int free_memory_of_gpu(struct kgd_dev *kgd, struct kgd_mem *mem,
 			      void *vm);
 
@@ -1376,7 +1376,7 @@ static int alloc_memory_of_scratch(struct kgd_dev *kgd,
 static int alloc_memory_of_gpu(struct kgd_dev *kgd, uint64_t va, uint64_t size,
 		void *vm, struct kgd_mem **mem,
 		uint64_t *offset, void **kptr,
-		struct kfd_process_device *pdd, uint32_t flags)
+		uint32_t flags)
 {
 	struct radeon_device *rdev = (struct radeon_device *) kgd;
 	int ret;
@@ -1406,7 +1406,6 @@ static int alloc_memory_of_gpu(struct kgd_dev *kgd, uint64_t va, uint64_t size,
 	}
 
 	pr_debug("Created BO on VRAM with size %llu bytes\n", size);
-	bo->pdd = pdd;
 	ret = add_bo_to_vm(rdev, va, vm, bo, &bo_va);
 	if (ret != 0)
 		goto err_map;
-- 
2.7.4

