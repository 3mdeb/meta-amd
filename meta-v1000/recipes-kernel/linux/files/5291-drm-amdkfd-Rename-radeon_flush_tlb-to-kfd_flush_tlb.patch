From a976f04389ced06c2dbfbeecc632bb5bd06837f0 Mon Sep 17 00:00:00 2001
From: Yong Zhao <yong.zhao@amd.com>
Date: Tue, 11 Oct 2016 12:33:11 -0400
Subject: [PATCH 5291/5855] drm/amdkfd: Rename radeon_flush_tlb to
 kfd_flush_tlb

Change-Id: I8b3d3365085ac605bb304d77bdb932f74567c4e5
Signed-off-by: Yong Zhao <yong.zhao@amd.com>
---
 drivers/gpu/drm/amd/amdkfd/kfd_chardev.c              | 6 +++---
 drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c | 2 +-
 drivers/gpu/drm/amd/amdkfd/kfd_flat_memory.c          | 4 ++--
 drivers/gpu/drm/amd/amdkfd/kfd_priv.h                 | 2 +-
 drivers/gpu/drm/amd/amdkfd/kfd_process.c              | 2 +-
 5 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c b/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
index 53ba22d..1ff9b4d 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_chardev.c
@@ -1408,7 +1408,7 @@ int kfd_map_memory_to_gpu(void *mem, struct kfd_process_device *pdd)
 	if (err != 0)
 		return err;
 
-	radeon_flush_tlb(dev, pdd->process->pasid);
+	kfd_flush_tlb(dev, pdd->process->pasid);
 
 	err = dev->dqm->ops.set_page_directory_base(dev->dqm, &pdd->qpd);
 	if (err != 0) {
@@ -1596,12 +1596,12 @@ static int kfd_ioctl_unmap_memory_from_gpu(struct file *filep,
 			}
 			peer->kfd2kgd->unmap_memory_to_gpu(peer->kgd,
 					mem, peer_pdd->vm);
-			radeon_flush_tlb(peer, p->pasid);
+			kfd_flush_tlb(peer, p->pasid);
 		}
 		kfree(devices_arr);
 	} else {
 		dev->kfd2kgd->unmap_memory_to_gpu(dev->kgd, mem, pdd->vm);
-		radeon_flush_tlb(dev, p->pasid);
+		kfd_flush_tlb(dev, p->pasid);
 	}
 
 	return 0;
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c b/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c
index 65296a8..ba1f87c 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c
@@ -135,7 +135,7 @@ static int allocate_vmid(struct device_queue_manager *dqm,
 			allocated_vmid,
 			qpd->page_table_base);
 	/*invalidate the VM context after pasid and vmid mapping is set up*/
-	radeon_flush_tlb(dqm->dev, qpd->pqm->process->pasid);
+	kfd_flush_tlb(dqm->dev, qpd->pqm->process->pasid);
 	return 0;
 }
 
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_flat_memory.c b/drivers/gpu/drm/amd/amdkfd/kfd_flat_memory.c
index c52853f..e14bf8e 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_flat_memory.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_flat_memory.c
@@ -380,7 +380,7 @@ int kfd_init_apertures(struct kfd_process *process)
 	return -1;
 }
 
-void radeon_flush_tlb(struct kfd_dev *dev, uint32_t pasid)
+void kfd_flush_tlb(struct kfd_dev *dev, uint32_t pasid)
 {
 	uint8_t vmid;
 	int first_vmid_to_scan = 8;
@@ -396,7 +396,7 @@ void radeon_flush_tlb(struct kfd_dev *dev, uint32_t pasid)
 			if (f2g->get_atc_vmid_pasid_mapping_pasid(
 				dev->kgd, vmid) == pasid) {
 				dev_dbg(kfd_device,
-					"TLB of vmid %u", vmid);
+					"flushing TLB of vmid %u", vmid);
 				f2g->write_vmid_invalidate_request(
 					dev->kgd, vmid);
 				break;
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_priv.h b/drivers/gpu/drm/amd/amdkfd/kfd_priv.h
index 3fd48d0..9f290b5 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_priv.h
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_priv.h
@@ -952,7 +952,7 @@ void kfd_free_signal_page_dgpu(struct kfd_process *p, uint64_t handle);
 void kfd_signal_vm_fault_event(struct kfd_dev *dev, unsigned int pasid,
 				struct kfd_vm_fault_info *info);
 
-void radeon_flush_tlb(struct kfd_dev *dev, uint32_t pasid);
+void kfd_flush_tlb(struct kfd_dev *dev, uint32_t pasid);
 
 int dbgdev_wave_reset_wavefronts(struct kfd_dev *dev, struct kfd_process *p);
 
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_process.c b/drivers/gpu/drm/amd/amdkfd/kfd_process.c
index 717d4a7..5894142 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_process.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_process.c
@@ -312,7 +312,7 @@ static void kfd_process_destroy_pdds(struct kfd_process *p)
 
 	list_for_each_entry_safe(pdd, temp, &p->per_device_data,
 				 per_device_list) {
-		radeon_flush_tlb(pdd->dev, p->pasid);
+		kfd_flush_tlb(pdd->dev, p->pasid);
 		/* Destroy the GPUVM VM context */
 		if (pdd->vm)
 			pdd->dev->kfd2kgd->destroy_process_vm(
-- 
2.7.4

