From b0f11f2e3041189c747017960f9317d4acfeef00 Mon Sep 17 00:00:00 2001
From: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Date: Tue, 30 Aug 2016 17:15:20 -0400
Subject: [PATCH 0950/1722] drm/amd/dal: Fix compile error for register update
 macros (v2).

For gcc and CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING flag not set
inlining will be forced which is impossible for generic_reg_update_ex
function to do since it has variad argumnets. Fix by removing the
'inline' attribute from function defintion and relocate it into
seperate C file.

Change-Id: Ie963313b96907a2ef231da4e057ed5be015e8c74
Signed-off-by: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/Makefile        |  3 ++
 drivers/gpu/drm/amd/dal/dc/dc_helper.c     | 31 +++++++++++++
 drivers/gpu/drm/amd/dal/dc/dm_reg_update.h | 71 ------------------------------
 drivers/gpu/drm/amd/dal/dc/dm_services.h   |  3 ++
 4 files changed, 37 insertions(+), 71 deletions(-)
 create mode 100644 drivers/gpu/drm/amd/dal/dc/dc_helper.c
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/dm_reg_update.h

diff --git a/drivers/gpu/drm/amd/dal/dc/Makefile b/drivers/gpu/drm/amd/dal/dc/Makefile
index a1ae19d..faf0d03 100644
--- a/drivers/gpu/drm/amd/dal/dc/Makefile
+++ b/drivers/gpu/drm/amd/dal/dc/Makefile
@@ -30,7 +30,10 @@ dc_surface.o dc_link_hwss.o dc_link_dp.o dc_link_ddc.o
 
 AMD_DISPLAY_CORE = $(addprefix $(AMDDALPATH)/dc/core/,$(DISPLAY_CORE))
 
+AMD_DM_REG_UPDATE = $(addprefix $(AMDDALPATH)/dc/,dc_helper.o)
+
 AMD_DAL_FILES += $(AMD_DISPLAY_CORE)
+AMD_DAL_FILES += $(AMD_DM_REG_UPDATE)
 
 
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dc_helper.c b/drivers/gpu/drm/amd/dal/dc/dc_helper.c
new file mode 100644
index 0000000..f895dcd
--- /dev/null
+++ b/drivers/gpu/drm/amd/dal/dc/dc_helper.c
@@ -0,0 +1,31 @@
+/*
+ * dc_helper.c
+ *
+ *  Created on: Aug 30, 2016
+ *      Author: agrodzov
+ */
+#include "dm_services.h"
+
+void generic_reg_update_ex(const struct dc_context *ctx,
+		uint32_t addr, uint32_t reg_val, int n, ...)
+{
+	int shift, mask, field_value;
+	int i = 0;
+
+	va_list ap;
+	va_start(ap, n);
+
+	 while (i < n) {
+		shift = va_arg(ap, int);
+		mask = va_arg(ap, int);
+		field_value = va_arg(ap, int);
+
+		reg_val = set_reg_field_value_ex(reg_val, field_value, mask, shift);
+		i++;
+	  }
+
+	 dm_write_reg(ctx, addr, reg_val);
+	 va_end(ap);
+
+
+}
diff --git a/drivers/gpu/drm/amd/dal/dc/dm_reg_update.h b/drivers/gpu/drm/amd/dal/dc/dm_reg_update.h
deleted file mode 100644
index a02952b..0000000
--- a/drivers/gpu/drm/amd/dal/dc/dm_reg_update.h
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Copyright 2015 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-/**
- * This file defines external dependencies of Display Core.
- */
-
-#ifndef __DM_REG_UPDATE_H__
-#define __DM_REG_UPDATE_H__
-
-#include "dm_services.h"
-#include <stdarg.h>
-
-static void generic_reg_update_ex(const struct dc_context *ctx,
-		uint32_t addr, uint32_t reg_val, int n, ...)
-{
-	int shift, mask, field_value;
-	int i = 0;
-
-	va_list ap;
-	va_start(ap, n);
-
-	 while (i < n) {
-		shift = va_arg(ap, int);
-		mask = va_arg(ap, int);
-		field_value = va_arg(ap, int);
-
-		reg_val = set_reg_field_value_ex(reg_val, field_value, mask, shift);
-		i++;
-	  }
-
-	 dm_write_reg(ctx, addr, reg_val);
-	 va_end(ap);
-
-
-}
-
-#define generic_reg_update(ctx, inst_offset, reg_name, n, ...)\
-		generic_reg_update_ex(ctx, \
-		mm##reg_name + inst_offset, dm_read_reg(ctx, mm##reg_name + inst_offset), n, \
-		__VA_ARGS__)
-
-#define generic_reg_set(ctx, inst_offset, reg_name, n, ...)\
-		generic_reg_update_ex(ctx, \
-		mm##reg_name + inst_offset, 0, n, \
-		__VA_ARGS__)
-
-
-#endif /* __DM_REG_UPDATE_H__ */
diff --git a/drivers/gpu/drm/amd/dal/dc/dm_services.h b/drivers/gpu/drm/amd/dal/dc/dm_services.h
index 23803f6..e9a8d9e 100644
--- a/drivers/gpu/drm/amd/dal/dc/dm_services.h
+++ b/drivers/gpu/drm/amd/dal/dc/dm_services.h
@@ -139,6 +139,9 @@ static inline uint32_t set_reg_field_value_ex(
 		reg_name ## __ ## reg_field ## _MASK,\
 		reg_name ## __ ## reg_field ## __SHIFT)
 
+void generic_reg_update_ex(const struct dc_context *ctx,
+		uint32_t addr, uint32_t reg_val, int n, ...);
+
 /**************************************
  * Power Play (PP) interfaces
  **************************************/
-- 
2.7.4

