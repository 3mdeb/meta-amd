From 7918ebeb6ec2f833cded963a5c001865dd6c60c4 Mon Sep 17 00:00:00 2001
From: Tony Cheng <tony.cheng@amd.com>
Date: Wed, 14 Sep 2016 01:34:46 -0400
Subject: [PATCH 1079/1722] drm/amd/dal: refactor audio step 3

- implement enable dp audio
- removed obsolete code in audio ctx
- delete audio.enable_output as the path only enable DP audio
- delete setup_vce_audio, as DAL3 doesn't support direct path wireless display

Change-Id: Ia9ebce31eec0a7522b6de5943a87629041d6016a
Signed-off-by: Tony Cheng <tony.cheng@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/audio/audio.h           |   5 -
 drivers/gpu/drm/amd/dal/dc/audio/audio_base.c      |  20 ---
 .../gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c |  40 -----
 .../amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c  | 172 ---------------------
 .../gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c   |  40 -----
 .../amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c    | 168 --------------------
 drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h    |  14 --
 drivers/gpu/drm/amd/dal/dc/dc_helper.c             |  28 ++++
 .../gpu/drm/amd/dal/dc/dce100/dce100_resource.c    |   8 +-
 .../drm/amd/dal/dc/dce110/dce110_hw_sequencer.c    |  10 +-
 .../gpu/drm/amd/dal/dc/dce110/dce110_resource.c    |   7 +-
 .../drm/amd/dal/dc/dce110/dce110_stream_encoder.c  | 151 +++++++++++++++++-
 .../drm/amd/dal/dc/dce110/dce110_stream_encoder.h  |  17 +-
 .../gpu/drm/amd/dal/dc/dce112/dce112_resource.c    |   7 +-
 drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c  |   8 +-
 .../drm/amd/dal/dc/dce80/dce80_stream_encoder.c    |   4 +-
 drivers/gpu/drm/amd/dal/dc/dm_services.h           |   8 +
 drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h |   5 +-
 drivers/gpu/drm/amd/dal/include/audio_interface.h  |   6 -
 19 files changed, 235 insertions(+), 483 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/audio/audio.h b/drivers/gpu/drm/amd/dal/dc/audio/audio.h
index 294ae61..a39890d 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/audio.h
+++ b/drivers/gpu/drm/amd/dal/dc/audio/audio.h
@@ -62,11 +62,6 @@ struct audio_funcs {
 		struct audio_output *output,
 		struct audio_info *info);
 
-	enum audio_result (*enable_output)(
-		struct audio *audio,
-		enum engine_id engine_id,
-		enum signal_type signal);
-
 	enum audio_result (*disable_output)(
 		struct audio *audio,
 		enum engine_id engine_id,
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/audio_base.c b/drivers/gpu/drm/amd/dal/dc/audio/audio_base.c
index 6214acb..66ac071 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/audio_base.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/audio_base.c
@@ -61,16 +61,6 @@ static enum audio_result setup(
 	return AUDIO_RESULT_OK;
 }
 
-static enum audio_result enable_output(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	/*DCE specific, must be implemented in derived*/
-	BREAK_TO_DEBUGGER();
-	return AUDIO_RESULT_OK;
-}
-
 static enum audio_result disable_output(
 	struct audio *audio,
 	enum engine_id engine_id,
@@ -105,7 +95,6 @@ static void setup_audio_wall_dto(
 static const struct audio_funcs audio_funcs = {
 	.destroy = destroy,
 	.setup = setup,
-	.enable_output = enable_output,
 	.disable_output = disable_output,
 	.initialize = initialize,
 	.setup_audio_wall_dto = setup_audio_wall_dto,
@@ -218,15 +207,6 @@ enum audio_result dal_audio_setup(
 	return audio->funcs->setup(audio, output, info);
 }
 
-/* enable audio */
-enum audio_result dal_audio_enable_output(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	return audio->funcs->enable_output(audio, engine_id, signal);
-}
-
 /* disable audio */
 enum audio_result dal_audio_disable_output(
 	struct audio *audio,
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c b/drivers/gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c
index 4869e3c..36f8f6b 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/dce110/audio_dce110.c
@@ -129,45 +129,6 @@ static enum audio_result setup(
 }
 
 /**
-* enable_output
-*
-* @brief
-*  enable Audio HW block, to be called by dal_audio_enable_output
-*/
-static enum audio_result enable_output(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	/* enable audio output */
-	switch (signal) {
-	case SIGNAL_TYPE_HDMI_TYPE_A:
-		break;
-	case SIGNAL_TYPE_DISPLAY_PORT:
-	case SIGNAL_TYPE_DISPLAY_PORT_MST:
-	case SIGNAL_TYPE_EDP: {
-			/* enable AFMT clock before enable audio*/
-			audio->hw_ctx->funcs->enable_afmt_clock(
-				audio->hw_ctx, engine_id, true);
-			/* setup DP audio engine */
-			audio->hw_ctx->funcs->setup_dp_audio(
-				audio->hw_ctx, engine_id);
-			/* enabl DP audio packets will be done at unblank */
-			audio->hw_ctx->funcs->enable_dp_audio(
-				audio->hw_ctx, engine_id);
-		}
-		break;
-	case SIGNAL_TYPE_WIRELESS:
-		/* route audio to VCE block */
-		audio->hw_ctx->funcs->setup_vce_audio(audio->hw_ctx);
-		break;
-	default:
-		return AUDIO_RESULT_ERROR;
-	}
-	return AUDIO_RESULT_OK;
-}
-
-/**
 * disable_output
 *
 * @brief
@@ -263,7 +224,6 @@ static void setup_audio_wall_dto(
 static const struct audio_funcs funcs = {
 	.destroy = destroy,
 	.setup = setup,
-	.enable_output = enable_output,
 	.disable_output = disable_output,
 	.initialize = initialize,
 	.setup_audio_wall_dto = setup_audio_wall_dto,
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c b/drivers/gpu/drm/amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c
index 7734099..0241779 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/dce110/hw_ctx_audio_dce110.c
@@ -728,138 +728,6 @@ static void setup_hdmi_audio(
 	}
 }
 
- /* setup DP audio */
-static void setup_dp_audio(
-	const struct hw_ctx_audio *hw_ctx,
-	enum engine_id engine_id)
-{
-	/* --- DP Audio packet configurations --- */
-	uint32_t addr = 0;
-	uint32_t value = 0;
-
-	/* ATP Configuration */
-	{
-		addr = mmDP_SEC_AUD_N + engine_offset[engine_id];
-
-		set_reg_field_value(value,
-			DP_SEC_AUD_N__DP_SEC_AUD_N__DEFAULT,
-			DP_SEC_AUD_N,
-			DP_SEC_AUD_N);
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* Async/auto-calc timestamp mode */
-	{
-		addr = mmDP_SEC_TIMESTAMP +
-			engine_offset[engine_id];
-
-		value = 0;
-
-		set_reg_field_value(value,
-			DP_SEC_TIMESTAMP__DP_SEC_TIMESTAMP_MODE__AUTO_CALC,
-			DP_SEC_TIMESTAMP,
-			DP_SEC_TIMESTAMP_MODE);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* --- The following are the registers
-	 *  copied from the SetupHDMI --- */
-
-	/* AFMT_AUDIO_PACKET_CONTROL */
-	{
-		addr = mmAFMT_AUDIO_PACKET_CONTROL +
-			engine_offset[engine_id];
-
-		value = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, addr);
-		set_reg_field_value(value,
-			1,
-			AFMT_AUDIO_PACKET_CONTROL,
-			AFMT_60958_CS_UPDATE);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* AFMT_AUDIO_PACKET_CONTROL2 */
-	{
-		addr =
-			mmAFMT_AUDIO_PACKET_CONTROL2 + engine_offset[engine_id];
-
-		value = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, addr);
-		set_reg_field_value(value,
-			0,
-			AFMT_AUDIO_PACKET_CONTROL2,
-			AFMT_AUDIO_LAYOUT_OVRD);
-
-		set_reg_field_value(value,
-			0,
-			AFMT_AUDIO_PACKET_CONTROL2,
-			AFMT_60958_OSF_OVRD);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* AFMT_INFOFRAME_CONTROL0 */
-	{
-		addr =
-			mmAFMT_INFOFRAME_CONTROL0 + engine_offset[engine_id];
-
-		value = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, addr);
-
-		set_reg_field_value(value,
-			1,
-			AFMT_INFOFRAME_CONTROL0,
-			AFMT_AUDIO_INFO_UPDATE);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* AFMT_60958_0__AFMT_60958_CS_CLOCK_ACCURACY_MASK */
-	{
-		addr = mmAFMT_60958_0 + engine_offset[engine_id];
-
-		value = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, addr);
-		set_reg_field_value(value,
-			0,
-			AFMT_60958_0,
-			AFMT_60958_CS_CLOCK_ACCURACY);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-}
-
- /* setup VCE audio */
-static void setup_vce_audio(
-	const struct hw_ctx_audio *hw_ctx)
-{
-	struct dc_context *ctx = hw_ctx->ctx;
-
-	NOT_IMPLEMENTED();
-
-	/*TODO:
-	const uint32_t addr = mmDOUT_DCE_VCE_CONTROL;
-	uint32_t value = 0;
-
-	value = dal_read_reg(hw_ctx->ctx,
-			addr);
-
-	set_reg_field_value(value,
-		FROM_BASE(hw_ctx)->azalia_stream_id - 1,
-		DOUT_DCE_VCE_CONTROL,
-		DC_VCE_AUDIO_STREAM_SELECT);
-
-	dal_write_reg(hw_ctx->ctx,
-			addr, value);*/
-}
-
 static void enable_afmt_clock(
 	const struct hw_ctx_audio *hw_ctx,
 	enum engine_id engine_id,
@@ -937,42 +805,6 @@ static void disable_azalia_audio(
 		value);
 }
 
-/* enable DP audio */
-static void enable_dp_audio(
-	const struct hw_ctx_audio *hw_ctx,
-	enum engine_id engine_id)
-{
-	const uint32_t addr = mmDP_SEC_CNTL + engine_offset[engine_id];
-
-	uint32_t value;
-
-	/* Enable Audio packets */
-	value = dm_read_reg(hw_ctx->ctx, addr);
-	set_reg_field_value(value, 1,
-		DP_SEC_CNTL,
-		DP_SEC_ASP_ENABLE);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-
-	/* Program the ATP and AIP next */
-	set_reg_field_value(value, 1,
-		DP_SEC_CNTL,
-		DP_SEC_ATP_ENABLE);
-
-	set_reg_field_value(value, 1,
-		DP_SEC_CNTL,
-		DP_SEC_AIP_ENABLE);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-
-	/* Program STREAM_ENABLE after all the other enables. */
-	set_reg_field_value(value, 1,
-		DP_SEC_CNTL,
-		DP_SEC_STREAM_ENABLE);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-}
-
 /* disable DP audio */
 static void disable_dp_audio(
 	const struct hw_ctx_audio *hw_ctx,
@@ -1681,14 +1513,10 @@ static const struct hw_ctx_audio_funcs funcs = {
 		setup_audio_wall_dto,
 	.setup_hdmi_audio =
 		setup_hdmi_audio,
-	.setup_dp_audio = setup_dp_audio,
-	.setup_vce_audio = setup_vce_audio,
 	.enable_azalia_audio =
 		enable_azalia_audio,
 	.disable_azalia_audio =
 		disable_azalia_audio,
-	.enable_dp_audio =
-		enable_dp_audio,
 	.disable_dp_audio =
 		disable_dp_audio,
 	.setup_azalia =
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c b/drivers/gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c
index b1e366e..89f8cd7 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/dce80/audio_dce80.c
@@ -107,45 +107,6 @@ static enum audio_result setup(
 }
 
 /**
-* enable_output
-*
-* @brief
-*  enable Audio HW block, to be called by dal_audio_enable_output
-*
-* @param
-*  engine_id         - HDMI engine id
-*/
-static enum audio_result enable_output(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal)
-{
-	/* enable audio output */
-	switch (signal) {
-	case SIGNAL_TYPE_HDMI_TYPE_A:
-		break;
-	case SIGNAL_TYPE_DISPLAY_PORT:
-	case SIGNAL_TYPE_DISPLAY_PORT_MST:
-	case SIGNAL_TYPE_EDP: {
-			/* setup DP audio engine */
-			audio->hw_ctx->funcs->setup_dp_audio(
-				audio->hw_ctx, engine_id);
-			/* enabl DP audio packets will be done at unblank */
-			audio->hw_ctx->funcs->enable_dp_audio(
-				audio->hw_ctx, engine_id);
-		}
-		break;
-	case SIGNAL_TYPE_WIRELESS:
-		/* route audio to VCE block */
-		audio->hw_ctx->funcs->setup_vce_audio(audio->hw_ctx);
-		break;
-	default:
-		return AUDIO_RESULT_ERROR;
-	}
-	return AUDIO_RESULT_OK;
-}
-
-/**
 * disable_output
 *
 * @brief
@@ -242,7 +203,6 @@ static void setup_audio_wall_dto(
 static const struct audio_funcs funcs = {
 	.destroy = destroy,
 	.setup = setup,
-	.enable_output = enable_output,
 	.disable_output = disable_output,
 	.initialize = initialize,
 	.setup_audio_wall_dto = setup_audio_wall_dto,
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c b/drivers/gpu/drm/amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c
index 5021d0e..c3d0736 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/audio/dce80/hw_ctx_audio_dce80.c
@@ -724,134 +724,6 @@ static void setup_hdmi_audio(
 	}
 }
 
- /* setup DP audio */
-static void setup_dp_audio(
-	const struct hw_ctx_audio *hw_ctx,
-	enum engine_id engine_id)
-{
-	/* --- DP Audio packet configurations --- */
-	uint32_t addr = 0;
-	uint32_t value = 0;
-
-	/* ATP Configuration */
-	{
-		addr = mmDP_SEC_AUD_N + engine_offset[engine_id];
-
-		set_reg_field_value(value,
-			DP_SEC_AUD_N__DP_SEC_AUD_N__DEFAULT,
-			DP_SEC_AUD_N,
-			DP_SEC_AUD_N);
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* Async/auto-calc timestamp mode */
-	{
-		addr = mmDP_SEC_TIMESTAMP +
-			engine_offset[engine_id];
-
-		value = 0;
-
-		set_reg_field_value(value,
-			DP_SEC_TIMESTAMP__DP_SEC_TIMESTAMP_MODE__AUTO_CALC,
-			DP_SEC_TIMESTAMP,
-			DP_SEC_TIMESTAMP_MODE);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* --- The following are the registers
-	 *  copied from the SetupHDMI --- */
-
-	/* AFMT_AUDIO_PACKET_CONTROL */
-	{
-		addr = mmAFMT_AUDIO_PACKET_CONTROL +
-			engine_offset[engine_id];
-
-		value = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, addr);
-		set_reg_field_value(value,
-			1,
-			AFMT_AUDIO_PACKET_CONTROL,
-			AFMT_60958_CS_UPDATE);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* AFMT_AUDIO_PACKET_CONTROL2 */
-	{
-		addr =
-			mmAFMT_AUDIO_PACKET_CONTROL2 + engine_offset[engine_id];
-
-		value = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, addr);
-		set_reg_field_value(value,
-			0,
-			AFMT_AUDIO_PACKET_CONTROL2,
-			AFMT_AUDIO_LAYOUT_OVRD);
-
-		set_reg_field_value(value,
-			0,
-			AFMT_AUDIO_PACKET_CONTROL2,
-			AFMT_60958_OSF_OVRD);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* AFMT_INFOFRAME_CONTROL0 */
-	{
-		addr =
-			mmAFMT_INFOFRAME_CONTROL0 + engine_offset[engine_id];
-
-		value = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, addr);
-
-		set_reg_field_value(value,
-			1,
-			AFMT_INFOFRAME_CONTROL0,
-			AFMT_AUDIO_INFO_UPDATE);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-
-	/* AFMT_60958_0__AFMT_60958_CS_CLOCK_ACCURACY_MASK */
-	{
-		addr = mmAFMT_60958_0 + engine_offset[engine_id];
-
-		value = 0;
-
-		value = dm_read_reg(hw_ctx->ctx, addr);
-		set_reg_field_value(value,
-			0,
-			AFMT_60958_0,
-			AFMT_60958_CS_CLOCK_ACCURACY);
-
-		dm_write_reg(hw_ctx->ctx, addr, value);
-	}
-}
-
- /* setup VCE audio */
-static void setup_vce_audio(
-	const struct hw_ctx_audio *hw_ctx)
-{
-	/*TODO:
-	const uint32_t addr = mmDOUT_DCE_VCE_CONTROL;
-	uint32_t value = 0;
-
-	value = dal_read_reg(hw_ctx->ctx,
-			addr);
-
-	set_reg_field_value(value,
-		FROM_BASE(hw_ctx)->azalia_stream_id - 1,
-		DOUT_DCE_VCE_CONTROL,
-		DC_VCE_AUDIO_STREAM_SELECT);
-
-	dal_write_reg(hw_ctx->ctx,
-			addr, value);*/
-}
-
 /* enable Azalia audio */
 static void enable_azalia_audio(
 	const struct hw_ctx_audio *hw_ctx,
@@ -897,42 +769,6 @@ static void disable_azalia_audio(
 		value);
 }
 
-/* enable DP audio */
-static void enable_dp_audio(
-	const struct hw_ctx_audio *hw_ctx,
-	enum engine_id engine_id)
-{
-	const uint32_t addr = mmDP_SEC_CNTL + engine_offset[engine_id];
-
-	uint32_t value;
-
-	/* Enable Audio packets */
-	value = dm_read_reg(hw_ctx->ctx, addr);
-	set_reg_field_value(value, 1,
-		DP_SEC_CNTL,
-		DP_SEC_ASP_ENABLE);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-
-	/* Program the ATP and AIP next */
-	set_reg_field_value(value, 1,
-		DP_SEC_CNTL,
-		DP_SEC_ATP_ENABLE);
-
-	set_reg_field_value(value, 1,
-		DP_SEC_CNTL,
-		DP_SEC_AIP_ENABLE);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-
-	/* Program STREAM_ENABLE after all the other enables. */
-	set_reg_field_value(value, 1,
-		DP_SEC_CNTL,
-		DP_SEC_STREAM_ENABLE);
-
-	dm_write_reg(hw_ctx->ctx, addr, value);
-}
-
 /* disable DP audio */
 static void disable_dp_audio(
 	const struct hw_ctx_audio *hw_ctx,
@@ -1565,14 +1401,10 @@ static const struct hw_ctx_audio_funcs funcs = {
 		setup_audio_wall_dto,
 	.setup_hdmi_audio =
 		setup_hdmi_audio,
-	.setup_dp_audio = setup_dp_audio,
-	.setup_vce_audio = setup_vce_audio,
 	.enable_azalia_audio =
 		enable_azalia_audio,
 	.disable_azalia_audio =
 		disable_azalia_audio,
-	.enable_dp_audio =
-		enable_dp_audio,
 	.disable_dp_audio =
 		disable_dp_audio,
 	.setup_azalia =
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h b/drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h
index f1f9343..9fb3207 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h
+++ b/drivers/gpu/drm/amd/dal/dc/audio/hw_ctx_audio.h
@@ -62,15 +62,6 @@ struct hw_ctx_audio_funcs {
 		enum engine_id engine_id,
 		const struct audio_crtc_info *crtc_info);
 
-	/* setup DP audio */
-	void (*setup_dp_audio)(
-		const struct hw_ctx_audio *hw_ctx,
-		enum engine_id engine_id);
-
-	/* setup VCE audio */
-	void (*setup_vce_audio)(
-		const struct hw_ctx_audio *hw_ctx);
-
 	/* enable Azalia audio */
 	void (*enable_azalia_audio)(
 		const struct hw_ctx_audio *hw_ctx,
@@ -81,11 +72,6 @@ struct hw_ctx_audio_funcs {
 		const struct hw_ctx_audio *hw_ctx,
 		enum engine_id engine_id);
 
-	/* enable DP audio */
-	void (*enable_dp_audio)(
-		const struct hw_ctx_audio *hw_ctx,
-		enum engine_id engine_id);
-
 	/* disable DP audio */
 	void (*disable_dp_audio)(
 		const struct hw_ctx_audio *hw_ctx,
diff --git a/drivers/gpu/drm/amd/dal/dc/dc_helper.c b/drivers/gpu/drm/amd/dal/dc/dc_helper.c
index 60e437e..14f5343 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc_helper.c
+++ b/drivers/gpu/drm/amd/dal/dc/dc_helper.c
@@ -27,6 +27,34 @@ void generic_reg_update_ex(const struct dc_context *ctx,
 
 	 dm_write_reg(ctx, addr, reg_val);
 	 va_end(ap);
+}
+
+
+unsigned int generic_reg_wait(const struct dc_context *ctx,
+	uint32_t addr, uint32_t mask, uint32_t shift, uint32_t condition_value,
+	unsigned int delay_between_poll_us, unsigned int time_out_num_tries)
+{
+	uint32_t field_value;
+	uint32_t reg_val;
+	int i;
+
+	reg_val = dm_read_reg(ctx, addr);
+
+	for (i = 1; i <= time_out_num_tries; i++) {
+		field_value = get_reg_field_value_ex(reg_val, mask, shift);
+
+		if (field_value == condition_value)
+			return i;
+
+		if (0 < delay_between_poll_us && delay_between_poll_us < 1000)
+			udelay(delay_between_poll_us);
+
+		if (delay_between_poll_us > 1000)
+			msleep(delay_between_poll_us/1000);
 
+		reg_val = dm_read_reg(ctx, addr);
+	}
 
+	BREAK_TO_DEBUGGER();
+	return 0;
 }
diff --git a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
index aaa3ee0..9195fa2 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
@@ -282,6 +282,9 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.AFMT_GENERIC_HDR = mmDIG ## id ## _AFMT_GENERIC_HDR,\
 	.AFMT_INFOFRAME_CONTROL0 = mmDIG ## id ## _AFMT_INFOFRAME_CONTROL0,\
 	.AFMT_VBI_PACKET_CONTROL = mmDIG ## id ## _AFMT_VBI_PACKET_CONTROL,\
+	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
+	.AFMT_AUDIO_PACKET_CONTROL2 = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL2,\
+	.AFMT_60958_0 = mmDIG ## id ## _AFMT_60958_0,\
 	.DIG_FE_CNTL = mmDIG ## id ## _DIG_FE_CNTL,\
 	.DP_MSE_RATE_CNTL = mmDP ## id ## _DP_MSE_RATE_CNTL,\
 	.DP_MSE_RATE_UPDATE = mmDP ## id ## _DP_MSE_RATE_UPDATE,\
@@ -292,6 +295,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.DP_VID_N = mmDP ## id ## _DP_VID_N,\
 	.DP_VID_STREAM_CNTL = mmDP ## id ## _DP_VID_STREAM_CNTL,\
 	.DP_VID_TIMING = mmDP ## id ## _DP_VID_TIMING,\
+	.DP_SEC_AUD_N = mmDP ## id ## _DP_SEC_AUD_N,\
+	.DP_SEC_TIMESTAMP = mmDP ## id ## _DP_SEC_TIMESTAMP,\
 	.HDMI_CONTROL = mmDIG ## id ## _HDMI_CONTROL,\
 	.HDMI_GC = mmDIG ## id ## _HDMI_GC,\
 	.HDMI_GENERIC_PACKET_CONTROL0 = mmDIG ## id ## _HDMI_GENERIC_PACKET_CONTROL0,\
@@ -300,7 +305,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.HDMI_INFOFRAME_CONTROL1 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL1,\
 	.HDMI_VBI_PACKET_CONTROL = mmDIG ## id ## _HDMI_VBI_PACKET_CONTROL,\
 	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL,\
-	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
+	\
+	.AFMT_CNTL = 0,\
 }
 
 static const struct dce110_stream_enc_registers stream_enc_regs[] = {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
index 5777c45..b4283fa 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
@@ -551,10 +551,8 @@ static void enable_stream(struct pipe_ctx *pipe_ctx)
 
 	/* enable audio only within mode set */
 	if (pipe_ctx->audio != NULL) {
-		dal_audio_enable_output(
-			pipe_ctx->audio,
-			pipe_ctx->stream_enc->id,
-			pipe_ctx->stream->signal);
+		if (dc_is_dp_signal(pipe_ctx->stream->signal))
+			pipe_ctx->stream_enc->funcs->dp_audio_enable(pipe_ctx->stream_enc);
 	}
 
 	/* For MST, there are multiply stream go to only one link.
@@ -1304,6 +1302,10 @@ static void reset_single_pipe_hw_ctx(
 		dal_audio_disable_output(pipe_ctx->audio,
 				pipe_ctx->stream_enc->id,
 				pipe_ctx->stream->signal);
+
+		/* todo: core_link_disable_stream rely
+		 * audio pointer to mute audio. we never mute correctly
+		 */
 		pipe_ctx->audio = NULL;
 	}
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
index 0b630f0..4b0839a 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
@@ -221,6 +221,7 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 
 #define stream_enc_regs(id)\
 [id] = {\
+	.AFMT_CNTL = mmDIG ## id ## _AFMT_CNTL,\
 	.AFMT_AVI_INFO0 = mmDIG ## id ## _AFMT_AVI_INFO0,\
 	.AFMT_AVI_INFO1 = mmDIG ## id ## _AFMT_AVI_INFO1,\
 	.AFMT_AVI_INFO2 = mmDIG ## id ## _AFMT_AVI_INFO2,\
@@ -230,6 +231,9 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.AFMT_GENERIC_HDR = mmDIG ## id ## _AFMT_GENERIC_HDR,\
 	.AFMT_INFOFRAME_CONTROL0 = mmDIG ## id ## _AFMT_INFOFRAME_CONTROL0,\
 	.AFMT_VBI_PACKET_CONTROL = mmDIG ## id ## _AFMT_VBI_PACKET_CONTROL,\
+	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
+	.AFMT_AUDIO_PACKET_CONTROL2 = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL2,\
+	.AFMT_60958_0 = mmDIG ## id ## _AFMT_60958_0,\
 	.DIG_FE_CNTL = mmDIG ## id ## _DIG_FE_CNTL,\
 	.DP_MSE_RATE_CNTL = mmDP ## id ## _DP_MSE_RATE_CNTL,\
 	.DP_MSE_RATE_UPDATE = mmDP ## id ## _DP_MSE_RATE_UPDATE,\
@@ -240,6 +244,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.DP_VID_N = mmDP ## id ## _DP_VID_N,\
 	.DP_VID_STREAM_CNTL = mmDP ## id ## _DP_VID_STREAM_CNTL,\
 	.DP_VID_TIMING = mmDP ## id ## _DP_VID_TIMING,\
+	.DP_SEC_AUD_N = mmDP ## id ## _DP_SEC_AUD_N,\
+	.DP_SEC_TIMESTAMP = mmDP ## id ## _DP_SEC_TIMESTAMP,\
 	.HDMI_CONTROL = mmDIG ## id ## _HDMI_CONTROL,\
 	.HDMI_GC = mmDIG ## id ## _HDMI_GC,\
 	.HDMI_GENERIC_PACKET_CONTROL0 = mmDIG ## id ## _HDMI_GENERIC_PACKET_CONTROL0,\
@@ -248,7 +254,6 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.HDMI_INFOFRAME_CONTROL1 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL1,\
 	.HDMI_VBI_PACKET_CONTROL = mmDIG ## id ## _HDMI_VBI_PACKET_CONTROL,\
 	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL,\
-	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
 }
 
 static const struct dce110_stream_enc_registers stream_enc_regs[] = {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c
index 3f56e87..179a4a0 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c
@@ -1069,13 +1069,141 @@ static void dce110_stream_encoder_dp_unblank(
 	dm_write_reg(ctx, addr, value);
 }
 
+#define LINK_REG_READ(reg_name) \
+		dm_read_reg(enc110->base.ctx, LINK_REG(reg_name))
+
+#define LINK_REG_WRITE(reg_name, value) \
+		dm_write_reg(enc110->base.ctx, LINK_REG(reg_name), value)
+
+#define LINK_REG_SET_N(reg_name, n, ...)	\
+		generic_reg_update_ex(enc110->base.ctx, \
+				LINK_REG(reg_name), \
+				0, \
+				n, __VA_ARGS__)
+
+#define LINK_REG_SET(reg_name, field, val)	\
+		LINK_REG_SET_N(reg_name, 1, FD(reg_name##__##field), val)
+
 #define LINK_REG_UPDATE_N(reg_name, n, ...)	\
-		generic_reg_update_ex(enc110->base.ctx, LINK_REG(reg_name), dm_read_reg(enc110->base.ctx, LINK_REG(reg_name)), n, __VA_ARGS__)
+		generic_reg_update_ex(enc110->base.ctx, \
+				LINK_REG(reg_name), \
+				LINK_REG_READ(reg_name), \
+				n, __VA_ARGS__)
 
 #define LINK_REG_UPDATE(reg_name, field, val)	\
 		LINK_REG_UPDATE_N(reg_name, 1, FD(reg_name##__##field), val)
 
-void dce110_audio_mute_control(
+#define LINK_REG_WAIT(reg_name, field, val, delay, max_try)	\
+		generic_reg_wait(enc110->base.ctx, \
+				LINK_REG(reg_name), FD(reg_name##__##field), val,\
+				delay, max_try)
+
+#define DP_SEC_AUD_N__DP_SEC_AUD_N__DEFAULT 0x8000
+#define DP_SEC_TIMESTAMP__DP_SEC_TIMESTAMP_MODE__AUTO_CALC 1
+
+static void dce110_se_setup_dp_audio(
+	struct stream_encoder *enc)
+{
+	struct dce110_stream_encoder *enc110 = DCE110STRENC_FROM_STRENC(enc);
+
+	/* --- DP Audio packet configurations --- */
+	uint32_t addr = 0;
+	uint32_t value = 0;
+
+	/* ATP Configuration */
+	LINK_REG_SET(DP_SEC_AUD_N, DP_SEC_AUD_N, DP_SEC_AUD_N__DP_SEC_AUD_N__DEFAULT);
+
+	/* Async/auto-calc timestamp mode */
+	LINK_REG_SET(DP_SEC_TIMESTAMP, DP_SEC_TIMESTAMP_MODE,
+			DP_SEC_TIMESTAMP__DP_SEC_TIMESTAMP_MODE__AUTO_CALC);
+
+	/* --- The following are the registers
+	 *  copied from the SetupHDMI --- */
+
+	/* AFMT_AUDIO_PACKET_CONTROL */
+	LINK_REG_UPDATE(AFMT_AUDIO_PACKET_CONTROL, AFMT_60958_CS_UPDATE, 1);
+
+	/* AFMT_AUDIO_PACKET_CONTROL2 */
+	/* Program the ATP and AIP next */
+	LINK_REG_UPDATE_N(AFMT_AUDIO_PACKET_CONTROL2, 2,
+			FD(AFMT_AUDIO_PACKET_CONTROL2__AFMT_AUDIO_LAYOUT_OVRD), 0,
+			FD(AFMT_AUDIO_PACKET_CONTROL2__AFMT_60958_OSF_OVRD), 0);
+
+	/* AFMT_INFOFRAME_CONTROL0 */
+	LINK_REG_UPDATE(AFMT_INFOFRAME_CONTROL0, AFMT_AUDIO_INFO_UPDATE, 1);
+
+	/* AFMT_60958_0__AFMT_60958_CS_CLOCK_ACCURACY_MASK */
+	LINK_REG_UPDATE(AFMT_60958_0, AFMT_60958_CS_CLOCK_ACCURACY, 0);
+}
+
+static void dce110_se_enable_audio_clock(
+	struct stream_encoder *enc,
+	bool enable)
+{
+	struct dce110_stream_encoder *enc110 = DCE110STRENC_FROM_STRENC(enc);
+
+	if (LINK_REG(AFMT_CNTL) == 0)
+		return;   /* DCE8/10 does not have this register */
+
+	LINK_REG_UPDATE(AFMT_CNTL, AFMT_AUDIO_CLOCK_EN, !!enable);
+
+	/* wait for AFMT clock to turn on,
+	 * expectation: this should complete in 1-2 reads
+	 */
+	LINK_REG_WAIT(AFMT_CNTL, AFMT_AUDIO_CLOCK_ON, !!enable,
+			1, 10);
+}
+
+static void dce110_se_enable_dp_audio(
+	struct stream_encoder *enc)
+{
+	struct dce110_stream_encoder *enc110 = DCE110STRENC_FROM_STRENC(enc);
+
+	/* Enable Audio packets */
+	LINK_REG_UPDATE(DP_SEC_CNTL, DP_SEC_ASP_ENABLE, 1);
+
+	/* Program the ATP and AIP next */
+	LINK_REG_UPDATE_N(DP_SEC_CNTL, 2,
+			FD(DP_SEC_CNTL__DP_SEC_ATP_ENABLE), 1,
+			FD(DP_SEC_CNTL__DP_SEC_AIP_ENABLE), 1);
+
+	/* Program STREAM_ENABLE after all the other enables. */
+	LINK_REG_UPDATE(DP_SEC_CNTL, DP_SEC_STREAM_ENABLE, 1);
+}
+
+static void dce110_se_disable_dp_audio(
+	struct stream_encoder *enc)
+{
+	struct dce110_stream_encoder *enc110 = DCE110STRENC_FROM_STRENC(enc);
+
+	uint32_t value = LINK_REG_READ(DP_SEC_CNTL);
+
+	/* Disable Audio packets */
+	set_reg_field_value(value, 0,
+		DP_SEC_CNTL, DP_SEC_ASP_ENABLE);
+
+	set_reg_field_value(value, 0,
+		DP_SEC_CNTL, DP_SEC_ATP_ENABLE);
+
+	set_reg_field_value(value, 0,
+		DP_SEC_CNTL, DP_SEC_AIP_ENABLE);
+
+	set_reg_field_value(value, 0,
+		DP_SEC_CNTL, DP_SEC_ACM_ENABLE);
+
+	set_reg_field_value(value, 0,
+		DP_SEC_CNTL, DP_SEC_STREAM_ENABLE);
+
+	/* This register shared with encoder info frame. Therefore we need to
+	keep master enabled if at least on of the fields is not 0 */
+	if (value != 0)
+		set_reg_field_value(value, 1,
+			DP_SEC_CNTL, DP_SEC_STREAM_ENABLE);
+
+	LINK_REG_WRITE(DP_SEC_CNTL, value);
+}
+
+void dce110_se_audio_mute_control(
 	struct stream_encoder *enc,
 	bool mute)
 {
@@ -1084,6 +1212,21 @@ void dce110_audio_mute_control(
 	LINK_REG_UPDATE(AFMT_AUDIO_PACKET_CONTROL, AFMT_AUDIO_SAMPLE_SEND, !mute);
 }
 
+void dce110_se_dp_audio_enable(
+	struct stream_encoder *enc)
+{
+	dce110_se_enable_audio_clock(enc, true);
+	dce110_se_setup_dp_audio(enc);
+	dce110_se_enable_dp_audio(enc);
+}
+
+void dce110_se_dp_audio_disable(
+	struct stream_encoder *enc)
+{
+	dce110_se_disable_dp_audio(enc);
+	dce110_se_enable_audio_clock(enc, false);
+}
+
 
 static const struct stream_encoder_funcs dce110_str_enc_funcs = {
 	.dp_set_stream_attribute =
@@ -1107,7 +1250,9 @@ static const struct stream_encoder_funcs dce110_str_enc_funcs = {
 	.dp_unblank =
 		dce110_stream_encoder_dp_unblank,
 
-	.audio_mute_control = dce110_audio_mute_control,
+	.audio_mute_control = dce110_se_audio_mute_control,
+	.dp_audio_enable = dce110_se_dp_audio_enable,
+	.dp_audio_disable = dce110_se_dp_audio_disable,
 };
 
 bool dce110_stream_encoder_construct(
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.h b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.h
index 6942517..0ea5257 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.h
@@ -32,6 +32,7 @@
 	container_of(stream_encoder, struct dce110_stream_encoder, base)
 
 struct dce110_stream_enc_registers {
+	uint32_t AFMT_CNTL;
 	uint32_t AFMT_AVI_INFO0;
 	uint32_t AFMT_AVI_INFO1;
 	uint32_t AFMT_AVI_INFO2;
@@ -41,6 +42,9 @@ struct dce110_stream_enc_registers {
 	uint32_t AFMT_GENERIC_HDR;
 	uint32_t AFMT_INFOFRAME_CONTROL0;
 	uint32_t AFMT_VBI_PACKET_CONTROL;
+	uint32_t AFMT_AUDIO_PACKET_CONTROL;
+	uint32_t AFMT_AUDIO_PACKET_CONTROL2;
+	uint32_t AFMT_60958_0;
 	uint32_t DIG_FE_CNTL;
 	uint32_t DP_MSE_RATE_CNTL;
 	uint32_t DP_MSE_RATE_UPDATE;
@@ -51,6 +55,8 @@ struct dce110_stream_enc_registers {
 	uint32_t DP_VID_N;
 	uint32_t DP_VID_STREAM_CNTL;
 	uint32_t DP_VID_TIMING;
+	uint32_t DP_SEC_AUD_N;
+	uint32_t DP_SEC_TIMESTAMP;
 	uint32_t HDMI_CONTROL;
 	uint32_t HDMI_GC;
 	uint32_t HDMI_GENERIC_PACKET_CONTROL0;
@@ -59,9 +65,6 @@ struct dce110_stream_enc_registers {
 	uint32_t HDMI_INFOFRAME_CONTROL1;
 	uint32_t HDMI_VBI_PACKET_CONTROL;
 	uint32_t TMDS_CNTL;
-
-	/* audio stream registers */
-	uint32_t AFMT_AUDIO_PACKET_CONTROL;
 };
 
 struct dce110_stream_encoder {
@@ -77,7 +80,13 @@ bool dce110_stream_encoder_construct(
 	const struct dce110_stream_enc_registers *regs);
 
 
-void dce110_audio_mute_control(
+void dce110_se_audio_mute_control(
 	struct stream_encoder *enc, bool mute);
 
+void dce110_se_dp_audio_enable(
+		struct stream_encoder *enc);
+
+void dce110_se_dp_audio_disable(
+		struct stream_encoder *enc);
+
 #endif /* __DC_STREAM_ENCODER_DCE110_H__ */
diff --git a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
index 7d8df53..b691d36 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
@@ -267,6 +267,7 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 
 #define stream_enc_regs(id)\
 [id] = {\
+	.AFMT_CNTL = mmDIG ## id ## _AFMT_CNTL,\
 	.AFMT_AVI_INFO0 = mmDIG ## id ## _AFMT_AVI_INFO0,\
 	.AFMT_AVI_INFO1 = mmDIG ## id ## _AFMT_AVI_INFO1,\
 	.AFMT_AVI_INFO2 = mmDIG ## id ## _AFMT_AVI_INFO2,\
@@ -276,6 +277,9 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.AFMT_GENERIC_HDR = mmDIG ## id ## _AFMT_GENERIC_HDR,\
 	.AFMT_INFOFRAME_CONTROL0 = mmDIG ## id ## _AFMT_INFOFRAME_CONTROL0,\
 	.AFMT_VBI_PACKET_CONTROL = mmDIG ## id ## _AFMT_VBI_PACKET_CONTROL,\
+	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
+	.AFMT_AUDIO_PACKET_CONTROL2 = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL2,\
+	.AFMT_60958_0 = mmDIG ## id ## _AFMT_60958_0,\
 	.DIG_FE_CNTL = mmDIG ## id ## _DIG_FE_CNTL,\
 	.DP_MSE_RATE_CNTL = mmDP ## id ## _DP_MSE_RATE_CNTL,\
 	.DP_MSE_RATE_UPDATE = mmDP ## id ## _DP_MSE_RATE_UPDATE,\
@@ -286,6 +290,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.DP_VID_N = mmDP ## id ## _DP_VID_N,\
 	.DP_VID_STREAM_CNTL = mmDP ## id ## _DP_VID_STREAM_CNTL,\
 	.DP_VID_TIMING = mmDP ## id ## _DP_VID_TIMING,\
+	.DP_SEC_AUD_N = mmDP ## id ## _DP_SEC_AUD_N,\
+	.DP_SEC_TIMESTAMP = mmDP ## id ## _DP_SEC_TIMESTAMP,\
 	.HDMI_CONTROL = mmDIG ## id ## _HDMI_CONTROL,\
 	.HDMI_GC = mmDIG ## id ## _HDMI_GC,\
 	.HDMI_GENERIC_PACKET_CONTROL0 = mmDIG ## id ## _HDMI_GENERIC_PACKET_CONTROL0,\
@@ -294,7 +300,6 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.HDMI_INFOFRAME_CONTROL1 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL1,\
 	.HDMI_VBI_PACKET_CONTROL = mmDIG ## id ## _HDMI_VBI_PACKET_CONTROL,\
 	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL,\
-	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
 }
 
 static const struct dce110_stream_enc_registers stream_enc_regs[] = {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
index bf303b8..88a31d7 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
@@ -281,6 +281,9 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.AFMT_GENERIC_HDR = mmDIG ## id ## _AFMT_GENERIC_HDR,\
 	.AFMT_INFOFRAME_CONTROL0 = mmDIG ## id ## _AFMT_INFOFRAME_CONTROL0,\
 	.AFMT_VBI_PACKET_CONTROL = mmDIG ## id ## _AFMT_VBI_PACKET_CONTROL,\
+	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
+	.AFMT_AUDIO_PACKET_CONTROL2 = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL2,\
+	.AFMT_60958_0 = mmDIG ## id ## _AFMT_60958_0,\
 	.DIG_FE_CNTL = mmDIG ## id ## _DIG_FE_CNTL,\
 	.DP_MSE_RATE_CNTL = mmDP ## id ## _DP_MSE_RATE_CNTL,\
 	.DP_MSE_RATE_UPDATE = mmDP ## id ## _DP_MSE_RATE_UPDATE,\
@@ -291,6 +294,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.DP_VID_N = mmDP ## id ## _DP_VID_N,\
 	.DP_VID_STREAM_CNTL = mmDP ## id ## _DP_VID_STREAM_CNTL,\
 	.DP_VID_TIMING = mmDP ## id ## _DP_VID_TIMING,\
+	.DP_SEC_AUD_N = mmDP ## id ## _DP_SEC_AUD_N,\
+	.DP_SEC_TIMESTAMP = mmDP ## id ## _DP_SEC_TIMESTAMP,\
 	.HDMI_CONTROL = mmDIG ## id ## _HDMI_CONTROL,\
 	.HDMI_GC = mmDIG ## id ## _HDMI_GC,\
 	.HDMI_GENERIC_PACKET_CONTROL0 = mmDIG ## id ## _HDMI_GENERIC_PACKET_CONTROL0,\
@@ -299,7 +304,8 @@ static const struct dce110_link_enc_registers link_enc_regs[] = {
 	.HDMI_INFOFRAME_CONTROL1 = mmDIG ## id ## _HDMI_INFOFRAME_CONTROL1,\
 	.HDMI_VBI_PACKET_CONTROL = mmDIG ## id ## _HDMI_VBI_PACKET_CONTROL,\
 	.TMDS_CNTL = mmDIG ## id ## _TMDS_CNTL,\
-	.AFMT_AUDIO_PACKET_CONTROL = mmDIG ## id ## _AFMT_AUDIO_PACKET_CONTROL,\
+	\
+	.AFMT_CNTL = 0,\
 }
 
 static const struct dce110_stream_enc_registers stream_enc_regs[] = {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c
index 0b61de7..7d2769e 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c
@@ -1073,7 +1073,9 @@ static const struct stream_encoder_funcs dce80_str_enc_funcs = {
 	.dp_unblank =
 		dce80_stream_encoder_dp_unblank,
 
-	.audio_mute_control = dce110_audio_mute_control,
+	.audio_mute_control = dce110_se_audio_mute_control,
+	.dp_audio_enable = dce110_se_dp_audio_enable,
+	.dp_audio_disable = dce110_se_dp_audio_disable,
 };
 
 bool dce80_stream_encoder_construct(
diff --git a/drivers/gpu/drm/amd/dal/dc/dm_services.h b/drivers/gpu/drm/amd/dal/dc/dm_services.h
index d49a145..ca5fb9b 100644
--- a/drivers/gpu/drm/amd/dal/dc/dm_services.h
+++ b/drivers/gpu/drm/amd/dal/dc/dm_services.h
@@ -145,6 +145,14 @@ void generic_reg_update_ex(const struct dc_context *ctx,
 #define FD(reg_field)	reg_field ## __SHIFT, \
 						reg_field ## _MASK
 
+/*
+ * return number of poll before condition is met
+ * return 0 if condition is not meet after specified time out tries
+ */
+unsigned int generic_reg_wait(const struct dc_context *ctx,
+	uint32_t addr, uint32_t mask, uint32_t shift, uint32_t condition_value,
+	unsigned int delay_between_poll_us, unsigned int time_out_num_tries);
+
 /**************************************
  * Power Play (PP) interfaces
  **************************************/
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h b/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h
index e999387..989b7bc 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h
@@ -84,8 +84,9 @@ struct stream_encoder_funcs {
 		const struct encoder_unblank_param *param);
 
 	void (*audio_mute_control)(
-		struct stream_encoder *enc,
-		bool mute);
+		struct stream_encoder *enc, bool mute);
+	void (*dp_audio_enable) (struct stream_encoder *enc);
+	void (*dp_audio_disable) (struct stream_encoder *enc);
 };
 
 #endif /* STREAM_ENCODER_H_ */
diff --git a/drivers/gpu/drm/amd/dal/include/audio_interface.h b/drivers/gpu/drm/amd/dal/include/audio_interface.h
index 20faf9c..6d3b436 100644
--- a/drivers/gpu/drm/amd/dal/include/audio_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/audio_interface.h
@@ -73,12 +73,6 @@ enum audio_result dal_audio_setup(
 	struct audio_output *output,
 	struct audio_info *info);
 
-/* enable audio */
-enum audio_result dal_audio_enable_output(
-	struct audio *audio,
-	enum engine_id engine_id,
-	enum signal_type signal);
-
 /* disable audio */
 enum audio_result dal_audio_disable_output(
 	struct audio *audio,
-- 
2.7.4

