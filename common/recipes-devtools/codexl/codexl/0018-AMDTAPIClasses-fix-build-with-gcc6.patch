From ca3c63d3e2859d751f9ff1d259ecff933fb8e3d7 Mon Sep 17 00:00:00 2001
From: Awais Belal <awais_belal@mentor.com>
Date: Wed, 16 Nov 2016 13:43:27 +0500
Subject: [PATCH] AMDTAPIClasses: fix build with gcc6

Signed-off-by: Awais Belal <awais_belal@mentor.com>
---
 .../AMDTAPIClasses-fix-gcc6-compile-issues.patch   | 53 ++++++++++++++++++++++
 .../AMDTAPIClasses/Include/apCLContextProperties.h |  3 +++
 .../Src/AMDTAPIClasses/src/apOpenCLParameters.cpp  | 12 ++---
 3 files changed, 62 insertions(+), 6 deletions(-)
 create mode 100644 Common/Src/AMDTAPIClasses/AMDTAPIClasses-fix-gcc6-compile-issues.patch

diff --git a/Common/Src/AMDTAPIClasses/AMDTAPIClasses-fix-gcc6-compile-issues.patch b/Common/Src/AMDTAPIClasses/AMDTAPIClasses-fix-gcc6-compile-issues.patch
new file mode 100644
index 0000000..07d30f1
--- /dev/null
+++ b/Common/Src/AMDTAPIClasses/AMDTAPIClasses-fix-gcc6-compile-issues.patch
@@ -0,0 +1,53 @@
+From cfe161742f62933f28845c004415a88588798470 Mon Sep 17 00:00:00 2001
+From: BogDan Vatra <bogdan@kdab.com>
+Date: Wed, 21 Sep 2016 15:30:06 +0300
+Subject: [PATCH] Fix comparation
+
+Fix gcc6 compile
+---
+ Include/apCLContextProperties.h |  3 +++
+ src/apOpenCLParameters.cpp      | 12 ++++++------
+ 2 files changed, 9 insertions(+), 6 deletions(-)
+
+diff --git a/Include/apCLContextProperties.h b/Include/apCLContextProperties.h
+index 8412e26..e112424 100755
+--- a/Include/apCLContextProperties.h
++++ b/Include/apCLContextProperties.h
+@@ -54,6 +54,9 @@ class AP_API apCLContextProperties : public apAllocatedObject
+     virtual bool readSelfFromChannel(osChannel& ipcChannel);
+ 
+ private:
+++#if defined __GNUC__ && __GNUC__>=6
+++   #pragma GCC diagnostic ignored "-Wignored-attributes"
+++#endif
+     typedef std::pair<cl_uint, oaCLContextProperty> apCLProperty;
+     gtVector<apCLProperty> _properties;
+ };
+diff --git a/src/apOpenCLParameters.cpp b/src/apOpenCLParameters.cpp
+index 7360063..28b1a91 100755
+--- a/src/apOpenCLParameters.cpp
++++ b/src/apOpenCLParameters.cpp
+@@ -4913,7 +4913,7 @@ bool apCLBufferRegionParameter::compareToOther(const apParameter& other)const
+         apCLBufferRegionParameter* pParam  = (apCLBufferRegionParameter*)(&other);
+         GT_IF_WITH_ASSERT(pParam != NULL)
+         {
+-            retVal = ((_value.origin == pParam->_value.origin) && (_value.size == _value.size));
++            retVal = ((_value.origin == pParam->_value.origin) && (_value.size == pParam->_value.size));
+         }
+     }
+ 
+@@ -5131,11 +5131,11 @@ bool apCLImageDescriptionParameter::compareToOther(const apParameter& other)cons
+         apCLImageDescriptionParameter* pParam  = (apCLImageDescriptionParameter*)(&other);
+         GT_IF_WITH_ASSERT(pParam != NULL)
+         {
+-            retVal = ((_value.image_type == pParam->_value.image_type) && (_value.image_width == _value.image_width) &&
+-                      (_value.image_height == pParam->_value.image_height) && (_value.image_depth == _value.image_depth) &&
+-                      (_value.image_array_size == pParam->_value.image_array_size) && (_value.image_row_pitch == _value.image_row_pitch) &&
+-                      (_value.image_slice_pitch == pParam->_value.image_slice_pitch) && (_value.num_mip_levels == _value.num_mip_levels) &&
+-                      (_value.num_samples == pParam->_value.num_samples) && (_value.buffer == _value.buffer));
++            retVal = ((_value.image_type == pParam->_value.image_type) && (_value.image_width == pParam->_value.image_width) &&
++                      (_value.image_height == pParam->_value.image_height) && (_value.image_depth == pParam->_value.image_depth) &&
++                      (_value.image_array_size == pParam->_value.image_array_size) && (_value.image_row_pitch == pParam->_value.image_row_pitch) &&
++                      (_value.image_slice_pitch == pParam->_value.image_slice_pitch) && (_value.num_mip_levels == pParam->_value.num_mip_levels) &&
++                      (_value.num_samples == pParam->_value.num_samples) && (_value.buffer == pParam->_value.buffer));
+         }
+     }
+ 
diff --git a/Common/Src/AMDTAPIClasses/Include/apCLContextProperties.h b/Common/Src/AMDTAPIClasses/Include/apCLContextProperties.h
index 8412e26..e112424 100755
--- a/Common/Src/AMDTAPIClasses/Include/apCLContextProperties.h
+++ b/Common/Src/AMDTAPIClasses/Include/apCLContextProperties.h
@@ -54,6 +54,9 @@ public:
     virtual bool readSelfFromChannel(osChannel& ipcChannel);
 
 private:
+#if defined __GNUC__ && __GNUC__>=6
+    #pragma GCC diagnostic ignored "-Wignored-attributes"
+#endif
     typedef std::pair<cl_uint, oaCLContextProperty> apCLProperty;
     gtVector<apCLProperty> _properties;
 };
diff --git a/Common/Src/AMDTAPIClasses/src/apOpenCLParameters.cpp b/Common/Src/AMDTAPIClasses/src/apOpenCLParameters.cpp
index 7360063..28b1a91 100755
--- a/Common/Src/AMDTAPIClasses/src/apOpenCLParameters.cpp
+++ b/Common/Src/AMDTAPIClasses/src/apOpenCLParameters.cpp
@@ -4913,7 +4913,7 @@ bool apCLBufferRegionParameter::compareToOther(const apParameter& other)const
         apCLBufferRegionParameter* pParam  = (apCLBufferRegionParameter*)(&other);
         GT_IF_WITH_ASSERT(pParam != NULL)
         {
-            retVal = ((_value.origin == pParam->_value.origin) && (_value.size == _value.size));
+            retVal = ((_value.origin == pParam->_value.origin) && (_value.size == pParam->_value.size));
         }
     }
 
@@ -5131,11 +5131,11 @@ bool apCLImageDescriptionParameter::compareToOther(const apParameter& other)cons
         apCLImageDescriptionParameter* pParam  = (apCLImageDescriptionParameter*)(&other);
         GT_IF_WITH_ASSERT(pParam != NULL)
         {
-            retVal = ((_value.image_type == pParam->_value.image_type) && (_value.image_width == _value.image_width) &&
-                      (_value.image_height == pParam->_value.image_height) && (_value.image_depth == _value.image_depth) &&
-                      (_value.image_array_size == pParam->_value.image_array_size) && (_value.image_row_pitch == _value.image_row_pitch) &&
-                      (_value.image_slice_pitch == pParam->_value.image_slice_pitch) && (_value.num_mip_levels == _value.num_mip_levels) &&
-                      (_value.num_samples == pParam->_value.num_samples) && (_value.buffer == _value.buffer));
+            retVal = ((_value.image_type == pParam->_value.image_type) && (_value.image_width == pParam->_value.image_width) &&
+                      (_value.image_height == pParam->_value.image_height) && (_value.image_depth == pParam->_value.image_depth) &&
+                      (_value.image_array_size == pParam->_value.image_array_size) && (_value.image_row_pitch == pParam->_value.image_row_pitch) &&
+                      (_value.image_slice_pitch == pParam->_value.image_slice_pitch) && (_value.num_mip_levels == pParam->_value.num_mip_levels) &&
+                      (_value.num_samples == pParam->_value.num_samples) && (_value.buffer == pParam->_value.buffer));
         }
     }
 
-- 
1.9.1

