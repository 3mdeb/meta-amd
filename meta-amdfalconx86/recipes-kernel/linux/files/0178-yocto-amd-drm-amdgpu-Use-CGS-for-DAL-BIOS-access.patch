From cc9020703d7975bb2a10dde8de8cf57eb55be089 Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Fri, 29 May 2015 14:37:32 -0400
Subject: [PATCH 292/343] drm/amdgpu: Use CGS for DAL BIOS access

Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Reviewed-by: Mykola Lysenko <Mykola.Lysenko@amd.com>
Signed-off-by: Sanjay R Mehta <sanju.mehta@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c | 56 ------------------------
 drivers/gpu/drm/amd/dal/bios/command_table.c     | 28 +++++++++---
 drivers/gpu/drm/amd/dal/dal_services.h           | 32 +++++++++++---
 3 files changed, 46 insertions(+), 70 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c
index 71b9a6d..a944120 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_dal_services.c
@@ -36,8 +36,6 @@
 
 #include "amdgpu.h"
 #include "dal_services.h"
-#include "atom.h"
-#include "bios_parser_interface.h"
 #include "amdgpu_dm.h"
 #include "amdgpu_dm_irq.h"
 #include "include/dal_interface.h"
@@ -108,47 +106,6 @@ void dal_delay_in_microseconds(uint32_t microseconds)
 	udelay(microseconds);
 }
 
-uint32_t dal_bios_cmd_table_para_revision(
-	struct dal_context *ctx,
-	uint32_t index)
-{
-	uint8_t frev;
-	uint8_t crev;
-
-	if (!amdgpu_atom_parse_cmd_header(
-		((struct amdgpu_device *)ctx->driver_context)->
-		mode_info.atom_context,
-		index,
-		&frev,
-		&crev))
-		return 0;
-
-	return crev;
-}
-
-bool dal_bios_cmd_table_revision(
-	struct dal_context *ctx,
-	uint32_t index,
-	struct cmd_table_revision *table_revision)
-{
-	uint8_t frev;
-	uint8_t crev;
-
-	if (!table_revision ||
-		!amdgpu_atom_parse_cmd_header(
-			((struct amdgpu_device *)ctx->driver_context)->
-			mode_info.atom_context,
-			index,
-			&frev,
-			&crev))
-		return false;
-
-	table_revision->revision = crev;
-	table_revision->content_revision = 0;
-
-	return true;
-}
-
 /******************************************************************************
  * IRQ Interfaces.
  *****************************************************************************/
@@ -240,19 +197,6 @@ void dal_isr_release_lock(struct dal_context *context)
  * End-of-IRQ Interfaces.
  *****************************************************************************/
 
-bool dal_exec_bios_cmd_table(
-	struct dal_context *ctx,
-	uint32_t index,
-	void *params)
-{
-	/* TODO */
-	return amdgpu_atom_execute_table(
-		((struct amdgpu_device *)ctx->driver_context)->
-		mode_info.atom_context,
-		index, params) == 0;
-	return false;
-}
-
 bool dal_get_platform_info(struct dal_context *dal_context,
 			struct platform_info_params *params)
 {
diff --git a/drivers/gpu/drm/amd/dal/bios/command_table.c b/drivers/gpu/drm/amd/dal/bios/command_table.c
index 78b31de..29a44bd 100644
--- a/drivers/gpu/drm/amd/dal/bios/command_table.c
+++ b/drivers/gpu/drm/amd/dal/bios/command_table.c
@@ -34,18 +34,31 @@
 #include "bios_parser_helper.h"
 #include "bios_parser.h"
 
+#ifndef BUILD_DAL_TEST
+#define EXEC_BIOS_CMD_TABLE(command, params)\
+	(cgs_atom_exec_cmd_table(bp->dal_context->cgs_device, \
+		GetIndexIntoMasterTable(COMMAND, command), \
+		&params) == 0)
+
+#define BIOS_CMD_TABLE_REVISION(command, frev, crev)\
+	cgs_atom_get_cmd_table_revs(bp->dal_context->cgs_device, \
+		GetIndexIntoMasterTable(COMMAND, command), &frev, &crev)
+#else
 #define EXEC_BIOS_CMD_TABLE(command, params)\
 	dal_exec_bios_cmd_table(bp->dal_context, \
 		GetIndexIntoMasterTable(COMMAND, command), \
 		&params)
 
+#define BIOS_CMD_TABLE_REVISION(command, frev, crev)\
+		dal_bios_cmd_table_revision(bp->dal_context, \
+		GetIndexIntoMasterTable(COMMAND, command), &frev, &crev)
+
+#endif
+
 #define BIOS_CMD_TABLE_PARA_REVISION(command)\
 	dal_bios_cmd_table_para_revision(bp->dal_context, \
 		GetIndexIntoMasterTable(COMMAND, command))
 
-#define BIOS_CMD_TABLE_REVISION(command, revision)\
-	dal_bios_cmd_table_revision(bp->dal_context, \
-		GetIndexIntoMasterTable(COMMAND, command), &revision)
 
 static void init_dig_encoder_control(struct bios_parser *bp);
 static void init_dvo_encoder_control(struct bios_parser *bp);
@@ -378,12 +391,13 @@ static enum bp_result transmitter_control_v1_5(
 
 static void init_transmitter_control(struct bios_parser *bp)
 {
-	struct cmd_table_revision table_revision;
+	uint8_t frev;
+	uint8_t crev;
 
-	if (!BIOS_CMD_TABLE_REVISION(UNIPHYTransmitterControl,
-			table_revision))
+	if (BIOS_CMD_TABLE_REVISION(UNIPHYTransmitterControl,
+			frev, crev) != 0)
 		BREAK_TO_DEBUGGER();
-	switch (table_revision.revision) {
+	switch (crev) {
 	case 2:
 		bp->cmd_tbl.transmitter_control = transmitter_control_v2;
 		break;
diff --git a/drivers/gpu/drm/amd/dal/dal_services.h b/drivers/gpu/drm/amd/dal/dal_services.h
index 17681bf..e3fcf5e 100644
--- a/drivers/gpu/drm/amd/dal/dal_services.h
+++ b/drivers/gpu/drm/amd/dal/dal_services.h
@@ -210,6 +210,26 @@ bool dal_get_platform_info(
 	struct dal_context *dal_context,
 	struct platform_info_params *params);
 
+
+#ifndef BUILD_DAL_TEST
+static inline uint32_t dal_bios_cmd_table_para_revision(
+	struct dal_context *ctx,
+	uint32_t index)
+{
+	uint8_t frev;
+	uint8_t crev;
+
+	if (cgs_atom_get_cmd_table_revs(ctx->cgs_device, index, &frev, &crev) != 0)
+		return 0;
+
+	return crev;
+}
+#else
+uint32_t dal_bios_cmd_table_para_revision(
+		struct dal_context *ctx,
+		uint32_t index);
+#endif
+
 /**************************************
  * Calls to Power Play (PP) component
  **************************************/
@@ -332,19 +352,17 @@ bool dal_exec_bios_cmd_table(
 	uint32_t index,
 	void *params);
 
+#ifdef BUILD_DAL_TEST
 uint32_t dal_bios_cmd_table_para_revision(
-	struct dal_context *ctx,
+struct dal_context *ctx,
 	uint32_t index);
 
-struct cmd_table_revision {
-	uint32_t revision;
-	uint32_t content_revision;
-};
-
 bool dal_bios_cmd_table_revision(
 	struct dal_context *ctx,
 	uint32_t index,
-	struct cmd_table_revision *table_revision);
+	uint8_t *frev,
+	uint8_t *crev);
+#endif
 
 /*
  *
-- 
1.9.1

