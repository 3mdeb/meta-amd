From 6b4847ed4d504b0cb63aece79f9225d14adb17f0 Mon Sep 17 00:00:00 2001
From: "Le.Ma" <Le.Ma@amd.com>
Date: Thu, 14 Dec 2017 13:44:14 +0800
Subject: [PATCH 4448/5855] drm/amdkcl: [4.15] Disable
 amdgpu_device_resize_fb_bar() for older kernels

The pci function is not independent enough to implement its kcl. So disable the resize BAR function directly.

Change-Id: I0f4eb6d510262d5f39709cfc1178518ec69901ea
Signed-off-by: Le.Ma <Le.Ma@amd.com>
Reviewed-by: Xiaojie Yuan <Xiaojie.Yuan@amd.com>

Signed-off-by: Pavan Kumar Ramayanam <pavan.ramayanam@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu.h        |  1 -
 drivers/gpu/drm/amd/amdgpu/amdgpu_device.c | 70 ------------------------------
 drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c      |  5 ---
 drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c      |  5 ---
 drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c      |  5 ---
 drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c      |  5 ---
 6 files changed, 91 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu.h b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
index 058ded8..edca29f 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
@@ -1966,7 +1966,6 @@ bool amdgpu_ttm_bo_is_amdgpu_bo(struct ttm_buffer_object *bo);
 void amdgpu_ttm_tt_set_user_pages(struct ttm_tt *ttm, struct page **pages);
 void amdgpu_vram_location(struct amdgpu_device *adev, struct amdgpu_mc *mc, u64 base);
 void amdgpu_gart_location(struct amdgpu_device *adev, struct amdgpu_mc *mc);
-int amdgpu_device_resize_fb_bar(struct amdgpu_device *adev);
 void amdgpu_ttm_set_active_vram_size(struct amdgpu_device *adev, u64 size);
 int amdgpu_ttm_init(struct amdgpu_device *adev);
 void amdgpu_ttm_fini(struct amdgpu_device *adev);
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
index e713949..7cf0771 100755
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
@@ -725,76 +725,6 @@ int amdgpu_fw_reserve_vram_init(struct amdgpu_device *adev)
 	return r;
 }
 
-/**
- * amdgpu_device_resize_fb_bar - try to resize FB BAR
- *
- * @adev: amdgpu_device pointer
- *
- * Try to resize FB BAR to make all VRAM CPU accessible. We try very hard not
- * to fail, but if any of the BARs is not accessible after the size we abort
- * driver loading by returning -ENODEV.
- */
-int amdgpu_device_resize_fb_bar(struct amdgpu_device *adev)
-{
-	u64 space_needed = roundup_pow_of_two(adev->mc.real_vram_size);
-	u32 rbar_size = order_base_2(((space_needed >> 20) | 1)) - 1;
-	struct pci_bus *root;
-	struct resource *res;
-	unsigned i;
-	u16 cmd;
-	int r;
-
-	/* Bypass for VF */
-	if (amdgpu_sriov_vf(adev))
-		return 0;
-
-	/* Check if the root BUS has 64bit memory resources */
-	root = adev->pdev->bus;
-	while (root->parent)
-		root = root->parent;
-
-	pci_bus_for_each_resource(root, res, i) {
-		if (res && res->flags & IORESOURCE_MEM_64 &&
-		    res->start > 0x100000000ull)
-			break;
-	}
-
-	/* Trying to resize is pointless without a root hub window above 4GB */
-	if (!res)
-		return 0;
-
-	/* Disable memory decoding while we change the BAR addresses and size */
-	pci_read_config_word(adev->pdev, PCI_COMMAND, &cmd);
-	pci_write_config_word(adev->pdev, PCI_COMMAND,
-			      cmd & ~PCI_COMMAND_MEMORY);
-
-	/* Free the VRAM and doorbell BAR, we most likely need to move both. */
-	amdgpu_doorbell_fini(adev);
-	if (adev->asic_type >= CHIP_BONAIRE)
-		pci_release_resource(adev->pdev, 2);
-
-	pci_release_resource(adev->pdev, 0);
-
-	r = pci_resize_resource(adev->pdev, 0, rbar_size);
-	if (r == -ENOSPC)
-		DRM_INFO("Not enough PCI address space for a large BAR.");
-	else if (r && r != -ENOTSUPP)
-		DRM_ERROR("Problem resizing BAR0 (%d).", r);
-
-	pci_assign_unassigned_bus_resources(adev->pdev->bus);
-
-	/* When the doorbell or fb BAR isn't available we have no chance of
-	 * using the device.
-	 */
-	r = amdgpu_doorbell_init(adev);
-	if (r || (pci_resource_flags(adev->pdev, 0) & IORESOURCE_UNSET))
-		return -ENODEV;
-
-	pci_write_config_word(adev->pdev, PCI_COMMAND, cmd);
-
-	return 0;
-}
-
 /*
  * GPU helpers function.
  */
diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
index 468281f..c3dd110 100644
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
@@ -324,11 +324,6 @@ static int gmc_v6_0_mc_init(struct amdgpu_device *adev)
 	adev->mc.mc_vram_size = RREG32(mmCONFIG_MEMSIZE) * 1024ULL * 1024ULL;
 	adev->mc.real_vram_size = RREG32(mmCONFIG_MEMSIZE) * 1024ULL * 1024ULL;
 
-	if (!(adev->flags & AMD_IS_APU)) {
-		r = amdgpu_device_resize_fb_bar(adev);
-		if (r)
-			return r;
-	}
 	adev->mc.aper_base = pci_resource_start(adev->pdev, 0);
 	adev->mc.aper_size = pci_resource_len(adev->pdev, 0);
 	adev->mc.visible_vram_size = adev->mc.aper_size;
diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
index ce7d9dd..0a17d63 100644
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
@@ -368,11 +368,6 @@ static int gmc_v7_0_mc_init(struct amdgpu_device *adev)
 	adev->mc.mc_vram_size = RREG32(mmCONFIG_MEMSIZE) * 1024ULL * 1024ULL;
 	adev->mc.real_vram_size = RREG32(mmCONFIG_MEMSIZE) * 1024ULL * 1024ULL;
 
-	if (!(adev->flags & AMD_IS_APU)) {
-		r = amdgpu_device_resize_fb_bar(adev);
-		if (r)
-			return r;
-	}
 	adev->mc.aper_base = pci_resource_start(adev->pdev, 0);
 	adev->mc.aper_size = pci_resource_len(adev->pdev, 0);
 
diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
index e9242ce..fd3dbc1 100644
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
@@ -548,11 +548,6 @@ static int gmc_v8_0_mc_init(struct amdgpu_device *adev)
 	adev->mc.mc_vram_size = RREG32(mmCONFIG_MEMSIZE) * 1024ULL * 1024ULL;
 	adev->mc.real_vram_size = RREG32(mmCONFIG_MEMSIZE) * 1024ULL * 1024ULL;
 
-	if (!(adev->flags & AMD_IS_APU)) {
-		r = amdgpu_device_resize_fb_bar(adev);
-		if (r)
-			return r;
-	}
 	adev->mc.aper_base = pci_resource_start(adev->pdev, 0);
 	adev->mc.aper_size = pci_resource_len(adev->pdev, 0);
 
diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
index ba06148..379efb9 100644
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
@@ -704,11 +704,6 @@ static int gmc_v9_0_mc_init(struct amdgpu_device *adev)
 		 nbio_v6_1_get_memsize(adev)) * 1024ULL * 1024ULL;
 	adev->mc.real_vram_size = adev->mc.mc_vram_size;
 
-	if (!(adev->flags & AMD_IS_APU)) {
-		r = amdgpu_device_resize_fb_bar(adev);
-		if (r)
-			return r;
-	}
 	adev->mc.aper_base = pci_resource_start(adev->pdev, 0);
 	adev->mc.aper_size = pci_resource_len(adev->pdev, 0);
 
-- 
2.7.4

