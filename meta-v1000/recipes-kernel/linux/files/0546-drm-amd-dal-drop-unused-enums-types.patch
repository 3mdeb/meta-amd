From 89d7cb28ddd9adc1384cfce143b589e838b334ac Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Tue, 12 Apr 2016 09:50:08 +1000
Subject: [PATCH 0546/1722] drm/amd/dal: drop unused enums/types.

These aren't used anywhere in the code.

Signed-off-by: Dave Airlie <airlied@redhat.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 .../drm/amd/dal/include/display_clock_interface.h  |   1 -
 .../gpu/drm/amd/dal/include/hw_sequencer_types.h   | 143 ---------------------
 2 files changed, 144 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/include/display_clock_interface.h b/drivers/gpu/drm/amd/dal/include/display_clock_interface.h
index 8040ed8..98d6f05 100644
--- a/drivers/gpu/drm/amd/dal/include/display_clock_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/display_clock_interface.h
@@ -69,7 +69,6 @@ struct min_clock_params {
 	struct view dest_view;
 	struct dc_timing_params timing_info;
 	struct dc_scaling_params scaling_info;
-	struct color_quality color_info;
 	enum signal_type signal_type;
 	enum dc_color_depth deep_color_depth;
 	enum v_scaler_efficiency scaler_efficiency;
diff --git a/drivers/gpu/drm/amd/dal/include/hw_sequencer_types.h b/drivers/gpu/drm/amd/dal/include/hw_sequencer_types.h
index 511caf4..6af0d1d 100644
--- a/drivers/gpu/drm/amd/dal/include/hw_sequencer_types.h
+++ b/drivers/gpu/drm/amd/dal/include/hw_sequencer_types.h
@@ -30,66 +30,6 @@
 #include "grph_object_defs.h"
 #include "link_service_types.h"
 
-struct color_quality {
-	uint32_t bpp_graphics;
-	uint32_t bpp_backend_video;
-};
-
-enum {
-	HW_MAX_NUM_VIEWPORTS = 2,
-	HW_CURRENT_PIPE_INDEX = 0,
-	HW_OTHER_PIPE_INDEX = 1
-};
-
-/* Timing standard */
-enum hw_timing_standard {
-	HW_TIMING_STANDARD_UNDEFINED,
-	HW_TIMING_STANDARD_DMT,
-	HW_TIMING_STANDARD_GTF,
-	HW_TIMING_STANDARD_CVT,
-	HW_TIMING_STANDARD_CVT_RB,
-	HW_TIMING_STANDARD_CEA770,
-	HW_TIMING_STANDARD_CEA861,
-	HW_TIMING_STANDARD_HDMI,
-	HW_TIMING_STANDARD_TV_NTSC,
-	HW_TIMING_STANDARD_TV_NTSC_J,
-	HW_TIMING_STANDARD_TV_PAL,
-	HW_TIMING_STANDARD_TV_PAL_M,
-	HW_TIMING_STANDARD_TV_PAL_CN,
-	HW_TIMING_STANDARD_TV_SECAM,
-	/* for explicit timings from VBIOS, EDID etc. */
-	HW_TIMING_STANDARD_EXPLICIT
-};
-
-/* TODO: identical to struct crtc_ranged_timing_control
- * defined in inc\timing_generator_types.h */
-struct hw_ranged_timing_control {
-	/* set to 1 to force dynamic counter V_COUNT
-	 * to lock to constant rate counter V_COUNT_NOM
-	 * on page flip event in dynamic refresh mode
-	 * when switching from a low refresh rate to nominal refresh rate */
-	bool force_lock_on_event;
-	/* set to 1 to force CRTC2 (slave) to lock to CRTC1 (master) VSync
-	 * in order to overlap their blank regions for MC clock changes */
-	bool lock_to_master_vsync;
-
-	/* set to 1 to program Static Screen Detection Masks
-	 * without enabling dynamic refresh rate */
-	bool program_static_screen_mask;
-	/* set to 1 to program Dynamic Refresh Rate */
-	bool program_dynamic_refresh_rate;
-	/* set to 1 to force disable Dynamic Refresh Rate */
-	bool force_disable_drr;
-
-	/* event mask to enable/disable various trigger sources
-	 * for static screen detection */
-	struct static_screen_events event_mask;
-
-	/* Number of consecutive static screen frames before static state is
-	 * asserted. */
-	uint32_t static_frame_count;
-};
-
 /* define the structure of Dynamic Refresh Mode */
 struct drr_params {
 	/* defines the minimum possible vertical dimension of display timing
@@ -119,7 +59,6 @@ struct hw_crtc_timing {
 	/* in KHz */
 	uint32_t pixel_clock;
 
-	enum hw_timing_standard timing_standard;
 	enum dc_color_depth color_depth;
 	enum dc_pixel_encoding pixel_encoding;
 
@@ -144,78 +83,6 @@ struct hw_crtc_timing {
 	} flags;
 };
 
-enum hw_color_space {
-	HW_COLOR_SPACE_UNKNOWN = 0,
-	HW_COLOR_SPACE_SRGB_FULL_RANGE,
-	HW_COLOR_SPACE_SRGB_LIMITED_RANGE,
-	HW_COLOR_SPACE_YPBPR601,
-	HW_COLOR_SPACE_YPBPR709,
-	HW_COLOR_SPACE_YCBCR601,
-	HW_COLOR_SPACE_YCBCR709,
-	HW_COLOR_SPACE_YCBCR601_YONLY,
-	HW_COLOR_SPACE_YCBCR709_YONLY,
-	HW_COLOR_SPACE_NMVPU_SUPERAA,
-};
-
-enum hw_overlay_color_space {
-	HW_OVERLAY_COLOR_SPACE_UNKNOWN,
-	HW_OVERLAY_COLOR_SPACE_BT709,
-	HW_OVERLAY_COLOR_SPACE_BT601,
-	HW_OVERLAY_COLOR_SPACE_SMPTE240,
-	HW_OVERLAY_COLOR_SPACE_RGB
-};
-
-enum hw_overlay_backend_bpp {
-	HW_OVERLAY_BACKEND_BPP_UNKNOWN,
-	HW_OVERLAY_BACKEND_BPP32_FULL_BANDWIDTH,
-	HW_OVERLAY_BACKEND_BPP16_FULL_BANDWIDTH,
-	HW_OVERLAY_BACKEND_BPP32_HALF_BANDWIDTH,
-};
-enum hw_overlay_format {
-	HW_OVERLAY_FORMAT_UNKNOWN,
-	HW_OVERLAY_FORMAT_YUY2,
-	HW_OVERLAY_FORMAT_UYVY,
-	HW_OVERLAY_FORMAT_RGB565,
-	HW_OVERLAY_FORMAT_RGB555,
-	HW_OVERLAY_FORMAT_RGB32,
-	HW_OVERLAY_FORMAT_YUV444,
-	HW_OVERLAY_FORMAT_RGB32_2101010
-};
-
-enum hw_scale_options {
-	HW_SCALE_OPTION_UNKNOWN,
-	HW_SCALE_OPTION_OVERSCAN, /* multimedia pass through mode */
-	HW_SCALE_OPTION_UNDERSCAN
-};
-
-enum hw_stereo_format {
-	HW_STEREO_FORMAT_NONE = 0,
-	HW_STEREO_FORMAT_SIDE_BY_SIDE = 1,
-	HW_STEREO_FORMAT_TOP_AND_BOTTOM = 2,
-	HW_STEREO_FORMAT_FRAME_ALTERNATE = 3,
-	HW_STEREO_FORMAT_ROW_INTERLEAVED = 5,
-	HW_STEREO_FORMAT_COLUMN_INTERLEAVED = 6,
-	HW_STEREO_FORMAT_CHECKER_BOARD = 7 /* the same as pixel interleave */
-};
-
-enum hw_dithering_options {
-	HW_DITHERING_OPTION_UNKNOWN,
-	HW_DITHERING_OPTION_SKIP_PROGRAMMING,
-	HW_DITHERING_OPTION_ENABLE,
-	HW_DITHERING_OPTION_DISABLE
-};
-
-enum hw_sync_request {
-	HW_SYNC_REQUEST_NONE = 0,
-	HW_SYNC_REQUEST_SET_INTERPATH,
-	HW_SYNC_REQUEST_SET_GL_SYNC_GENLOCK,
-	HW_SYNC_REQUEST_SET_GL_SYNC_FREE_RUN,
-	HW_SYNC_REQUEST_SET_GL_SYNC_SHADOW,
-	HW_SYNC_REQUEST_RESET_GLSYNC,
-	HW_SYNC_REQUEST_RESYNC_GLSYNC,
-	HW_SYNC_REQUEST_SET_STEREO3D
-};
-
 /* TODO hw_info_frame and hw_info_packet structures are same as in encoder
  * merge it*/
 struct hw_info_packet {
@@ -238,14 +105,4 @@ struct hw_info_frame {
 	struct hw_info_packet vsc_packet;
 };
 
-enum channel_command_type {
-	CHANNEL_COMMAND_I2C,
-	CHANNEL_COMMAND_I2C_OVER_AUX,
-	CHANNEL_COMMAND_AUX
-};
-
-/* maximum TMDS transmitter pixel clock is 165 MHz. So it is KHz */
-#define	TMDS_MAX_PIXEL_CLOCK_IN_KHZ 165000
-#define	NATIVE_HDMI_MAX_PIXEL_CLOCK_IN_KHZ 297000
-
 #endif
-- 
2.7.4

