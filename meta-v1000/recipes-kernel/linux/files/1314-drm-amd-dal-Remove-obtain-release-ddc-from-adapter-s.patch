From a6ecdd7eb63e022651b577de224552096e274822 Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Wed, 12 Oct 2016 16:22:47 -0400
Subject: [PATCH 1314/1722] drm/amd/dal: Remove obtain/release ddc from adapter
 service

Change-Id: Ib2edc611d0f057f1c9731799b07d90d0520e1d6a
Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 .../gpu/drm/amd/dal/dc/adapter/adapter_service.c   | 50 ----------------------
 drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c      | 13 +++++-
 drivers/gpu/drm/amd/dal/dc/core/dc_link.c          | 14 +++---
 drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c      | 26 +++++++++--
 .../amd/dal/include/adapter_service_interface.h    | 14 ------
 5 files changed, 40 insertions(+), 77 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
index cc09643..34049d3 100644
--- a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
+++ b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
@@ -1053,44 +1053,6 @@ bool dal_adapter_service_is_feature_supported(struct adapter_service *as,
 }
 
 /*
- * dal_adapter_service_obtain_ddc
- *
- * Obtain DDC
- */
-struct ddc *dal_adapter_service_obtain_ddc(
-	struct adapter_service *as,
-	struct graphics_object_id id)
-{
-	struct graphics_object_i2c_info i2c_info;
-	struct gpio_ddc_hw_info hw_info;
-	struct dc_bios *dcb = as->ctx->dc_bios;
-
-	if (BP_RESULT_OK != dcb->funcs->get_i2c_info(dcb, id, &i2c_info))
-		return NULL;
-
-	hw_info.ddc_channel = i2c_info.i2c_line;
-	hw_info.hw_supported = i2c_info.i2c_hw_assist;
-
-	return dal_gpio_service_create_ddc(
-		as->gpio_service,
-		i2c_info.gpio_info.clk_a_register_index,
-		1 << i2c_info.gpio_info.clk_a_shift,
-		&hw_info);
-}
-
-/*
- * dal_adapter_service_release_ddc
- *
- * Release DDC
- */
-void dal_adapter_service_release_ddc(
-	struct adapter_service *as,
-	struct ddc *ddc)
-{
-	dal_gpio_service_destroy_ddc(&ddc);
-}
-
-/*
  * dal_adapter_service_obtain_hpd_irq
  *
  * Obtain HPD interrupt request
@@ -1443,18 +1405,6 @@ bool dal_adapter_service_should_optimize(
 	return (supported_optimization & feature) != 0;
 }
 
-struct ddc *dal_adapter_service_obtain_ddc_from_i2c_info(
-	struct adapter_service *as,
-	struct graphics_object_i2c_info *info)
-{
-	struct gpio_ddc_hw_info hw_info = {
-		info->i2c_hw_assist,
-		info->i2c_line };
-	return dal_gpio_service_create_ddc(as->gpio_service,
-		info->gpio_info.clk_a_register_index,
-		(1 << info->gpio_info.clk_a_shift), &hw_info);
-}
-
 uint32_t dal_adapter_service_get_downscale_limit(
 		struct adapter_service *as)
 {
diff --git a/drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c b/drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c
index 9d186f5..5d91cf7 100644
--- a/drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c
+++ b/drivers/gpu/drm/amd/dal/dc/bios/bios_parser.c
@@ -29,6 +29,7 @@
 
 #include "dc_bios_types.h"
 #include "include/adapter_service_interface.h"
+#include "include/gpio_service_interface.h"
 #include "include/grph_object_ctrl_defs.h"
 #include "include/bios_parser_interface.h"
 #include "include/i2caux_interface.h"
@@ -42,6 +43,9 @@
 #include "bios_parser_types_internal.h"
 #include "bios_parser_interface.h"
 
+/* TODO remove - only needed for gpio_service */
+#include "adapter/adapter_service.h"
+
 #define THREE_PERCENT_OF_10000 300
 
 #define LAST_RECORD_TYPE 0xff
@@ -2924,8 +2928,13 @@ static bool i2c_read(
 	uint8_t offset[2] = { 0, 0 };
 	bool result = false;
 	struct i2c_command cmd;
+	struct gpio_ddc_hw_info hw_info = {
+		i2c_info->i2c_hw_assist,
+		i2c_info->i2c_line };
 
-	ddc = dal_adapter_service_obtain_ddc_from_i2c_info(as, i2c_info);
+	ddc = dal_gpio_service_create_ddc(as->gpio_service,
+		i2c_info->gpio_info.clk_a_register_index,
+		(1 << i2c_info->gpio_info.clk_a_shift), &hw_info);
 
 	if (!ddc)
 		return result;
@@ -2960,7 +2969,7 @@ static bool i2c_read(
 				&cmd);
 	}
 
-	dal_adapter_service_release_ddc(as, ddc);
+	dal_gpio_service_destroy_ddc(&ddc);
 
 	return result;
 }
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_link.c b/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
index 0cc6d3e..54475f9 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
@@ -310,10 +310,12 @@ static bool is_dp_sink_present(struct core_link *link)
 		((connector_id == CONNECTOR_ID_DISPLAY_PORT) ||
 		(connector_id == CONNECTOR_ID_EDP));
 
-	ddc = dal_adapter_service_obtain_ddc(link->adapter_srv, link->link_id);
+	ddc = dal_ddc_service_get_ddc_pin(link->ddc);
 
-	if (!ddc)
+	if (!ddc) {
+		BREAK_TO_DEBUGGER();
 		return present;
+	}
 
 	/* Open GPIO and set it to I2C mode */
 	/* Note: this GpioMode_Input will be converted
@@ -322,7 +324,7 @@ static bool is_dp_sink_present(struct core_link *link)
 
 	if (GPIO_RESULT_OK != dal_ddc_open(
 		ddc, GPIO_MODE_INPUT, GPIO_DDC_CONFIG_TYPE_MODE_I2C)) {
-		dal_adapter_service_release_ddc(link->adapter_srv, ddc);
+		dal_gpio_service_destroy_ddc(&ddc);
 
 		return present;
 	}
@@ -342,8 +344,6 @@ static bool is_dp_sink_present(struct core_link *link)
 
 	dal_ddc_close(ddc);
 
-	dal_adapter_service_release_ddc(link->adapter_srv, ddc);
-
 	return present;
 }
 
@@ -825,7 +825,7 @@ static enum channel_id get_ddc_line(struct core_link *link, struct adapter_servi
 	struct ddc *ddc;
 	enum channel_id channel = CHANNEL_ID_UNKNOWN;
 
-	ddc = dal_adapter_service_obtain_ddc(as, link->link_id);
+	ddc = dal_ddc_service_get_ddc_pin(link->ddc);
 
 	if (ddc) {
 		switch (dal_ddc_get_line(ddc)) {
@@ -857,8 +857,6 @@ static enum channel_id get_ddc_line(struct core_link *link, struct adapter_servi
 			BREAK_TO_DEBUGGER();
 			break;
 		}
-
-		dal_adapter_service_release_ddc(as, ddc);
 	}
 
 	return channel;
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c b/drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c
index 6727d8f..55166e5 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c
@@ -26,6 +26,7 @@
 #include "dm_services.h"
 #include "dm_helpers.h"
 #include "include/adapter_service_interface.h"
+#include "gpio_service_interface.h"
 #include "include/ddc_service_types.h"
 #include "include/grph_object_id.h"
 #include "include/dpcd_defs.h"
@@ -34,6 +35,9 @@
 #include "core_types.h"
 #include "dc_link_ddc.h"
 
+/* TODO remove - only needed for gpio_service */
+#include "adapter/adapter_service.h"
+
 #define AUX_POWER_UP_WA_DELAY 500
 #define I2C_OVER_AUX_DEFER_WA_DELAY 70
 
@@ -276,11 +280,27 @@ static bool construct(
 	enum connector_id connector_id =
 		dal_graphics_object_id_get_connector_id(init_data->id);
 
+	struct gpio_service *gpio_service = ddc_service->as->gpio_service;
+	struct graphics_object_i2c_info i2c_info;
+	struct gpio_ddc_hw_info hw_info;
+	struct dc_bios *dcb = ddc_service->ctx->dc_bios;
+
 	ddc_service->link = init_data->link;
 	ddc_service->ctx = init_data->ctx;
 	ddc_service->as = init_data->as;
-	ddc_service->ddc_pin = dal_adapter_service_obtain_ddc(
-			init_data->as, init_data->id);
+
+	if (BP_RESULT_OK != dcb->funcs->get_i2c_info(dcb, init_data->id, &i2c_info)) {
+		ddc_service->ddc_pin = NULL;
+	} else {
+		hw_info.ddc_channel = i2c_info.i2c_line;
+		hw_info.hw_supported = i2c_info.i2c_hw_assist;
+
+		ddc_service->ddc_pin = dal_gpio_service_create_ddc(
+			gpio_service,
+			i2c_info.gpio_info.clk_a_register_index,
+			1 << i2c_info.gpio_info.clk_a_shift,
+			&hw_info);
+	}
 
 	ddc_service->flags.EDID_QUERY_DONE_ONCE = false;
 
@@ -320,7 +340,7 @@ struct ddc_service *dal_ddc_service_create(
 static void destruct(struct ddc_service *ddc)
 {
 	if (ddc->ddc_pin)
-		dal_adapter_service_release_ddc(ddc->as, ddc->ddc_pin);
+		dal_gpio_service_destroy_ddc(&ddc->ddc_pin);;
 }
 
 void dal_ddc_service_destroy(struct ddc_service **ddc)
diff --git a/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h b/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
index 088529d..adb1570 100644
--- a/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
@@ -385,16 +385,6 @@ bool dal_adapter_service_get_feature_value(struct adapter_service *as,
 	void *data,
 	uint32_t size);
 
-/* Obtain DDC */
-struct ddc *dal_adapter_service_obtain_ddc(
-	struct adapter_service *as,
-	struct graphics_object_id id);
-
-/* Release DDC */
-void dal_adapter_service_release_ddc(
-	struct adapter_service *as,
-	struct ddc *ddc);
-
 /* Obtain HPD interrupt request */
 struct irq *dal_adapter_service_obtain_hpd_irq(
 	struct adapter_service *as,
@@ -467,10 +457,6 @@ bool dal_adapter_service_is_dfsbyass_dynamic(struct adapter_service *as);
 bool dal_adapter_service_should_optimize(
 		struct adapter_service *as, enum optimization_feature feature);
 
-struct ddc *dal_adapter_service_obtain_ddc_from_i2c_info(
-	struct adapter_service *as,
-	struct graphics_object_i2c_info *info);
-
 uint32_t dal_adapter_service_get_downscale_limit(
 		struct adapter_service *as);
 
-- 
2.7.4

