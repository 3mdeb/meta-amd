From 1196a14f45ea19d2c8db64ad2295c22c316d7904 Mon Sep 17 00:00:00 2001
From: Trigger Huang <trigger.huang@amd.com>
Date: Wed, 3 May 2017 23:52:56 -0400
Subject: [PATCH 2885/3082] Revert "drm/amdgpu: Bypass GMC/UVD/VCE hw_fini in
 SR-IOV"

Forget to add Review-By information

This reverts commit a643d687596857ad116f31d7ac24fb81e8849ffc.
---
 drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c |  6 ------
 drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c |  8 +-------
 drivers/gpu/drm/amd/amdgpu/vce_v4_0.c | 10 ++--------
 3 files changed, 3 insertions(+), 21 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
index b9f11fa..dc1e1c1 100644
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
@@ -781,12 +781,6 @@ static int gmc_v9_0_hw_fini(void *handle)
 {
 	struct amdgpu_device *adev = (struct amdgpu_device *)handle;
 
-	if (amdgpu_sriov_vf(adev)) {
-		/* full access mode, so don't touch any GMC register */
-		DRM_DEBUG("For SRIOV client, shouldn't do anything.\n");
-		return 0;
-	}
-
 	amdgpu_irq_put(adev, &adev->mc.vm_fault, 0);
 	gmc_v9_0_gart_disable(adev);
 
diff --git a/drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c b/drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
index c4f8031..6e9359d 100644
--- a/drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
@@ -562,13 +562,7 @@ static int uvd_v7_0_hw_fini(void *handle)
 	struct amdgpu_device *adev = (struct amdgpu_device *)handle;
 	struct amdgpu_ring *ring = &adev->uvd.ring;
 
-	if (!amdgpu_sriov_vf(adev))
-		uvd_v7_0_stop(adev);
-	else {
-		/* full access mode, so don't touch any UVD register */
-		DRM_DEBUG("For SRIOV client, shouldn't do anything.\n");
-	}
-
+	uvd_v7_0_stop(adev);
 	ring->ready = false;
 
 	return 0;
diff --git a/drivers/gpu/drm/amd/amdgpu/vce_v4_0.c b/drivers/gpu/drm/amd/amdgpu/vce_v4_0.c
index cec5b2e..661f883 100644
--- a/drivers/gpu/drm/amd/amdgpu/vce_v4_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/vce_v4_0.c
@@ -505,14 +505,8 @@ static int vce_v4_0_hw_fini(void *handle)
 	struct amdgpu_device *adev = (struct amdgpu_device *)handle;
 	int i;
 
-	if (!amdgpu_sriov_vf(adev)) {
-		/* vce_v4_0_wait_for_idle(handle); */
-		vce_v4_0_stop(adev);
-	} else {
-		/* full access mode, so don't touch any VCE register */
-		DRM_DEBUG("For SRIOV client, shouldn't do anything.\n");
-	}
-
+	/* vce_v4_0_wait_for_idle(handle); */
+	vce_v4_0_stop(adev);
 	for (i = 0; i < adev->vce.num_rings; i++)
 		adev->vce.ring[i].ready = false;
 
-- 
2.7.4

