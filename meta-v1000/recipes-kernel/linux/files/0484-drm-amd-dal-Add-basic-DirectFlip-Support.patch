From 1280034e8a2572a85e08765e014c9cd54b6970d3 Mon Sep 17 00:00:00 2001
From: Wenjing Liu <Wenjing.Liu@amd.com>
Date: Wed, 11 May 2016 16:29:16 -0400
Subject: [PATCH 0484/1722] drm/amd/dal: Add basic DirectFlip Support

Driver will support flipping between 8888
to 10101010 surface pixel format

Signed-off-by: Wenjing Liu <Wenjing.Liu@amd.com>
Acked-by: Jordan Lazare <Jordan.Lazare@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc.c | 65 ++++++++++++++++++++++++++++++++++++
 drivers/gpu/drm/amd/dal/dc/dc.h      |  6 ++++
 2 files changed, 71 insertions(+)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index c26a4be..d0ff8f7 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -1046,6 +1046,71 @@ unexpected_fail:
 	return false;
 }
 
+bool dc_update_surfaces_for_target(
+		struct dc *dc,
+		struct dc_surface *new_surfaces[],
+		uint8_t new_surface_count,
+		struct dc_target *dc_target)
+
+{
+	struct core_dc *core_dc = DC_TO_CORE(dc);
+	struct dc_bios *dcb = core_dc->ctx->dc_bios;
+
+	int i, j;
+	struct core_target *target = DC_TARGET_TO_CORE(dc_target);
+	struct dc_target_status *target_status = NULL;
+	struct validate_context *context;
+
+	if (core_dc->current_context.target_count == 0)
+		return false;
+
+	context = &core_dc->current_context;
+
+	/* Cannot commit surface to a target that is not committed */
+	for (i = 0; i < context->target_count; i++)
+		if (target == context->targets[i])
+			break;
+
+	target_status = &context->target_status[i];
+
+	if (!dcb->funcs->is_accelerated_mode(dcb)
+			|| i == context->target_count) {
+		BREAK_TO_DEBUGGER();
+		return false;
+	}
+
+	if (!resource_attach_surfaces_to_context(
+			new_surfaces, new_surface_count, dc_target, context)) {
+		BREAK_TO_DEBUGGER();
+		return false;
+	}
+
+	for (i = 0; i < new_surface_count; i++)
+		for (j = 0; j < MAX_PIPES; j++) {
+			if (context->res_ctx.pipe_ctx[j].surface !=
+					DC_SURFACE_TO_CORE(new_surfaces[i]))
+				continue;
+
+			resource_build_scaling_params(
+				new_surfaces[i], &context->res_ctx.pipe_ctx[j]);
+		}
+
+	for (i = 0; i < new_surface_count; i++)
+		for (j = 0; j < context->res_ctx.pool.pipe_count; j++) {
+			struct pipe_ctx *pipe_ctx =
+						&context->res_ctx.pipe_ctx[j];
+
+			if (pipe_ctx->surface !=
+					DC_SURFACE_TO_CORE(new_surfaces[i]))
+				continue;
+
+			core_dc->hwss.set_plane_config(
+				core_dc, pipe_ctx, &context->res_ctx);
+		}
+
+	return true;
+}
+
 uint8_t dc_get_current_target_count(const struct dc *dc)
 {
 	struct core_dc *core_dc = DC_TO_CORE(dc);
diff --git a/drivers/gpu/drm/amd/dal/dc/dc.h b/drivers/gpu/drm/amd/dal/dc/dc.h
index 4ed39f4..c14a1c1 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc.h
+++ b/drivers/gpu/drm/amd/dal/dc/dc.h
@@ -204,6 +204,12 @@ bool dc_commit_surfaces_to_target(
 		uint8_t surface_count,
 		struct dc_target *dc_target);
 
+bool dc_update_surfaces_for_target(
+		struct dc *dc,
+		struct dc_surface *dc_surfaces[],
+		uint8_t surface_count,
+		struct dc_target *dc_target);
+
 /*******************************************************************************
  * Target Interfaces
  ******************************************************************************/
-- 
2.7.4

