From dd66757b62ee82b3c9ed2fbb3b3f59fe60f95698 Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Tue, 28 Jun 2016 15:50:24 -0400
Subject: [PATCH 0574/1722] drm/amd/dal: Fix bad merge

- don't disable YUV420 support
- fix up logic in resource validation
- remove some unused code

Change-Id: I97addd1a96b0da573e99a47ba809aa6de9b52dd7
Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/dc_types.h                   | 4 ----
 drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c     | 6 +++---
 drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c     | 6 +++---
 drivers/gpu/drm/amd/dal/dc/dce112/dce112_clock_source.c | 1 -
 drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c       | 6 +++---
 drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h           | 1 -
 drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h           | 4 ----
 7 files changed, 9 insertions(+), 19 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/dc_types.h b/drivers/gpu/drm/amd/dal/dc/dc_types.h
index e32154f..93ce0a1 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc_types.h
+++ b/drivers/gpu/drm/amd/dal/dc/dc_types.h
@@ -66,11 +66,7 @@ enum dce_environment {
 struct dc_context {
 	struct dc *dc;
 
-#if defined(BUILD_DAL_TEST)
-	struct test_driver_context *driver_context;
-#else
 	void *driver_context; /* e.g. amdgpu_device */
-#endif
 
 	struct dal_logger *logger;
 	void *cgs_device;
diff --git a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
index d414f1f..8a984b2 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
@@ -670,6 +670,9 @@ enum dc_status dce100_validate_with_context(
 
 	result = resource_map_pool_resources(dc, context);
 
+	if (result == DC_OK)
+		result = resource_map_clock_resources(dc, context);
+
 	if (!resource_validate_attach_surfaces(
 			set, set_count, dc->current_context, context)) {
 		DC_ERROR("Failed to attach surface to target!\n");
@@ -677,9 +680,6 @@ enum dc_status dce100_validate_with_context(
 	}
 
 	if (result == DC_OK)
-		result = resource_map_clock_resources(dc, context);
-
-	if (result == DC_OK)
 		result = validate_mapped_resource(dc, context);
 
 	if (result == DC_OK)
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
index 40bd013..ac162b2 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
@@ -877,6 +877,9 @@ enum dc_status dce110_validate_with_context(
 
 	result = resource_map_pool_resources(dc, context);
 
+	if (result == DC_OK)
+		result = resource_map_clock_resources(dc, context);
+
 	if (!resource_validate_attach_surfaces(
 			set, set_count, dc->current_context, context)) {
 		DC_ERROR("Failed to attach surface to target!\n");
@@ -884,9 +887,6 @@ enum dc_status dce110_validate_with_context(
 	}
 
 	if (result == DC_OK)
-		result = resource_map_clock_resources(dc, context);
-
-	if (result == DC_OK)
 		result = validate_mapped_resource(dc, context);
 
 	if (result == DC_OK)
diff --git a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_clock_source.c b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_clock_source.c
index 5cb7c21..b91e580 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_clock_source.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_clock_source.c
@@ -192,7 +192,6 @@ static bool dce112_program_pix_clk(
 						pll_settings->use_external_clk;
 		bp_pc_params.flags.SET_XTALIN_REF_SRC =
 						!pll_settings->use_external_clk;
-		bp_pc_params.flags.SUPPORT_YUV_420 = 0;
  
                 if (pix_clk_params->flags.SUPPORT_YCBCR420) {
                         bp_pc_params.target_pixel_clock = pll_settings->actual_pix_clk / 2;
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
index a7d4604..5e7dd9a 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
@@ -624,6 +624,9 @@ enum dc_status dce80_validate_with_context(
 
 	result = resource_map_pool_resources(dc, context);
 
+	if (result == DC_OK)
+		result = resource_map_clock_resources(dc, context);
+
 	if (!resource_validate_attach_surfaces(
 			set, set_count, dc->current_context, context)) {
 		DC_ERROR("Failed to attach surface to target!\n");
@@ -631,9 +634,6 @@ enum dc_status dce80_validate_with_context(
 	}
 
 	if (result == DC_OK)
-		result = resource_map_clock_resources(dc, context);
-
-	if (result == DC_OK)
 		result = validate_mapped_resource(dc, context);
 
 	if (result == DC_OK)
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h b/drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h
index 40c6cf8..6d7412c 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw/mem_input.h
@@ -67,7 +67,6 @@ struct mem_input_funcs {
 		enum dc_rotation_angle rotation);
 
 	void (*wait_for_no_surface_update_pending)(struct mem_input *mem_input);
-	void (*disable_request)(struct mem_input *mem_input);
 };
 
 #endif
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h b/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
index 53b3f82..254ce1c 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
@@ -132,10 +132,6 @@ struct hw_sequencer_funcs {
 
 	void (*set_drr)(struct pipe_ctx **pipe_ctx, int num_pipes,
 			int vmin, int vmax);
-
-	void (*enable_memory_request)(
-		struct pipe_ctx *pipe_ctx,
-		bool enable);
 };
 
 #endif /* __DC_HW_SEQUENCER_H__ */
-- 
2.7.4

