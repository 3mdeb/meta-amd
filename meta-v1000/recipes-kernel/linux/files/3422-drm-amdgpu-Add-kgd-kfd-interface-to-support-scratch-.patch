From 8548aa7eafabc99758800f36bbefccebe409b56b Mon Sep 17 00:00:00 2001
From: Moses Reuben <moses.reuben@amd.com>
Date: Tue, 15 Aug 2017 23:00:19 -0400
Subject: [PATCH 3422/5855] drm/amdgpu: Add kgd/kfd interface to support
 scratch memory v2

v2:
* Shortened headline
* Removed write_config_static_mem, it gets initialized by gfx_v?_0_gpu_init
* Renamed alloc_memory_of_scratch to set_scratch_backing_va
* Made set_scratch_backing_va a void function
* Documented set_scratch_backing in kgd_kfd_interface.h

Signed-off-by: Moses Reuben <moses.reuben@amd.com>
Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>

Signed-off-by: Pavan Kumar Ramayanam <pavan.ramayanam@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v7.c | 13 +++++++++++++
 drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v8.c | 15 ++++++++++++++-
 drivers/gpu/drm/amd/include/kgd_kfd_interface.h   |  7 +++++++
 3 files changed, 34 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v7.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v7.c
index ad327a8..862139c 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v7.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v7.c
@@ -96,6 +96,8 @@ static int open_graphic_handle(struct kgd_dev *kgd, uint64_t va, void *vm,
 			int fd, uint32_t handle, struct kgd_mem **mem);
 
 static uint16_t get_fw_version(struct kgd_dev *kgd, enum kgd_engine_type type);
+static void set_scratch_backing_va(struct kgd_dev *kgd,
+                                        uint64_t va, uint32_t vmid);
 
 /*
  * Register access functions
@@ -222,6 +224,7 @@ static const struct kfd2kgd_calls kfd2kgd = {
 	.map_memory_to_gpu = amdgpu_amdkfd_gpuvm_map_memory_to_gpu,
 	.unmap_memory_to_gpu = amdgpu_amdkfd_gpuvm_unmap_memory_from_gpu,
 	.get_fw_version = get_fw_version,
+	.set_scratch_backing_va = set_scratch_backing_va,
 	.set_num_of_requests = set_num_of_requests,
 	.get_cu_info = get_cu_info,
 	.alloc_memory_of_scratch = alloc_memory_of_scratch,
@@ -836,6 +839,16 @@ static void write_vmid_invalidate_request(struct kgd_dev *kgd, uint8_t vmid)
 	WREG32(mmVM_INVALIDATE_REQUEST, 1 << vmid);
 }
 
+static void set_scratch_backing_va(struct kgd_dev *kgd,
+                                       uint64_t va, uint32_t vmid)
+{
+        struct amdgpu_device *adev = (struct amdgpu_device *) kgd;
+
+        lock_srbm(kgd, 0, 0, 0, vmid);
+        WREG32(mmSH_HIDDEN_PRIVATE_BASE_VMID, va);
+        unlock_srbm(kgd);
+}
+
 static int invalidate_tlbs(struct kgd_dev *kgd, uint16_t pasid)
 {
 	struct amdgpu_device *adev = (struct amdgpu_device *) kgd;
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v8.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v8.c
index 8ac7201..3de8a74 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v8.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gfx_v8.c
@@ -67,7 +67,8 @@ static int open_graphic_handle(struct kgd_dev *kgd, uint64_t va, void *vm,
 				int fd, uint32_t handle, struct kgd_mem **mem);
 
 static uint16_t get_fw_version(struct kgd_dev *kgd, enum kgd_engine_type type);
-
+static void set_scratch_backing_va(struct kgd_dev *kgd,
+                                        uint64_t va, uint32_t vmid);
 /*
  * Register access functions
  */
@@ -195,6 +196,7 @@ static const struct kfd2kgd_calls kfd2kgd = {
 	.map_memory_to_gpu = amdgpu_amdkfd_gpuvm_map_memory_to_gpu,
 	.unmap_memory_to_gpu = amdgpu_amdkfd_gpuvm_unmap_memory_from_gpu,
 	.get_fw_version = get_fw_version,
+	.set_scratch_backing_va = set_scratch_backing_va,
 	.set_num_of_requests = set_num_of_requests,
 	.get_cu_info = get_cu_info,
 	.alloc_memory_of_scratch = alloc_memory_of_scratch,
@@ -943,6 +945,17 @@ static int alloc_memory_of_scratch(struct kgd_dev *kgd,
 	return 0;
 }
 
+static void set_scratch_backing_va(struct kgd_dev *kgd,
+                                        uint64_t va, uint32_t vmid)
+{
+        struct amdgpu_device *adev = (struct amdgpu_device *) kgd;
+ 
+        lock_srbm(kgd, 0, 0, 0, vmid);
+        WREG32(mmSH_HIDDEN_PRIVATE_BASE_VMID, va);
+        unlock_srbm(kgd);
+}
+
+
 static uint16_t get_fw_version(struct kgd_dev *kgd, enum kgd_engine_type type)
 {
 	struct amdgpu_device *adev = (struct amdgpu_device *) kgd;
diff --git a/drivers/gpu/drm/amd/include/kgd_kfd_interface.h b/drivers/gpu/drm/amd/include/kgd_kfd_interface.h
index 2e95783..e126366 100644
--- a/drivers/gpu/drm/amd/include/kgd_kfd_interface.h
+++ b/drivers/gpu/drm/amd/include/kgd_kfd_interface.h
@@ -248,6 +248,10 @@ struct tile_config {
  *
  * @copy_mem_to_mem: Copies size bytes from source BO to destination BO
  *
+ * @set_scratch_backing_va: Sets VA for scratch backing memory of a VMID.
+ * Only used for no cp scheduling mode
+ *
+ *
  * This structure contains function pointers to services that the kgd driver
  * provides to amdkfd driver.
  *
@@ -358,6 +362,9 @@ struct kfd2kgd_calls {
 	uint16_t (*get_fw_version)(struct kgd_dev *kgd,
 				enum kgd_engine_type type);
 
+        void (*set_scratch_backing_va)(struct kgd_dev *kgd,
+                                uint64_t va, uint32_t vmid);
+
 	void (*set_num_of_requests)(struct kgd_dev *kgd,
 			uint8_t num_of_requests);
 	int (*alloc_memory_of_scratch)(struct kgd_dev *kgd,
-- 
2.7.4

