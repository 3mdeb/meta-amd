From 448177a9eae2e0c3f95dc8dcf36de584c6473557 Mon Sep 17 00:00:00 2001
From: Ayyappa Ch <ayyappa.chandolu@amd.com>
Date: Fri, 27 Jan 2017 19:21:54 +0530
Subject: [PATCH 1487/1722] lib: make assoc_array available to kernel modules

The assoc_array interface is only exported to built in drivers, probably
because the crypto algorithms are its only user at the moment.

This patch EXPORT_SYMBOL's the public interface of assoc_array.

Change-Id: I0500fbfaffbe257aa1ac499512507e1f060fc2a7
Signed-off-by: Harish Kasiviswanathan <Harish.Kasiviswanathan@amd.com>
Signed-off-by: Ayyappa Ch <ayyappa.chandolu@amd.com>
---
 lib/assoc_array.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/lib/assoc_array.c b/lib/assoc_array.c
index 59fd7c0..24d94ff 100644
--- a/lib/assoc_array.c
+++ b/lib/assoc_array.c
@@ -153,6 +153,7 @@ int assoc_array_iterate(const struct assoc_array *array,
 		return 0;
 	return assoc_array_subtree_iterate(root, NULL, iterator, iterator_data);
 }
+EXPORT_SYMBOL(assoc_array_iterate);
 
 enum assoc_array_walk_status {
 	assoc_array_walk_tree_empty,
@@ -352,6 +353,7 @@ void *assoc_array_find(const struct assoc_array *array,
 
 	return NULL;
 }
+EXPORT_SYMBOL(assoc_array_find);
 
 /*
  * Destructively iterate over an associative array.  The caller must prevent
@@ -461,6 +463,7 @@ void assoc_array_destroy(struct assoc_array *array,
 	assoc_array_destroy_subtree(array->root, ops);
 	array->root = NULL;
 }
+EXPORT_SYMBOL(assoc_array_destroy);
 
 /*
  * Handle insertion into an empty tree.
@@ -1050,6 +1053,7 @@ enomem:
 	assoc_array_cancel_edit(edit);
 	return ERR_PTR(-ENOMEM);
 }
+EXPORT_SYMBOL(assoc_array_insert);
 
 /**
  * assoc_array_insert_set_object - Set the new object pointer in an edit script
@@ -1065,6 +1069,7 @@ void assoc_array_insert_set_object(struct assoc_array_edit *edit, void *object)
 	BUG_ON(!object);
 	edit->leaf = assoc_array_leaf_to_ptr(object);
 }
+EXPORT_SYMBOL(assoc_array_insert_set_object);
 
 struct assoc_array_delete_collapse_context {
 	struct assoc_array_node	*node;
@@ -1284,6 +1289,7 @@ enomem:
 	assoc_array_cancel_edit(edit);
 	return ERR_PTR(-ENOMEM);
 }
+EXPORT_SYMBOL(assoc_array_delete);
 
 /**
  * assoc_array_clear - Script deletion of all objects from an associative array
@@ -1325,6 +1331,7 @@ struct assoc_array_edit *assoc_array_clear(struct assoc_array *array,
 	pr_devel("all gone\n");
 	return edit;
 }
+EXPORT_SYMBOL(assoc_array_clear);
 
 /*
  * Handle the deferred destruction after an applied edit.
@@ -1427,6 +1434,7 @@ void assoc_array_apply_edit(struct assoc_array_edit *edit)
 
 	call_rcu(&edit->rcu, assoc_array_rcu_cleanup);
 }
+EXPORT_SYMBOL(assoc_array_apply_edit);
 
 /**
  * assoc_array_cancel_edit - Discard an edit script.
@@ -1457,6 +1465,7 @@ void assoc_array_cancel_edit(struct assoc_array_edit *edit)
 	}
 	kfree(edit);
 }
+EXPORT_SYMBOL(assoc_array_cancel_edit);
 
 /**
  * assoc_array_gc - Garbage collect an associative array.
@@ -1749,3 +1758,4 @@ enomem:
 	kfree(edit);
 	return -ENOMEM;
 }
+EXPORT_SYMBOL(assoc_array_gc);
-- 
2.7.4

