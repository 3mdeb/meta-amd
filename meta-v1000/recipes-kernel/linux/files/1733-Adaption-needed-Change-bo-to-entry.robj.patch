From 39a26e495cc7647de7095ae6c6b56ae0bb8c10d3 Mon Sep 17 00:00:00 2001
From: Yong Zhao <yong.zhao@amd.com>
Date: Fri, 8 Apr 2016 20:22:13 -0400
Subject: [PATCH 1733/2094] Adaption needed: Change bo to entry.robj

Change-Id: Ice5c62c2d44120427de5beb20deb083ad5056295
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
index caeedaf..f569ff6 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
@@ -238,7 +238,7 @@ static int try_pin_pts(struct amdgpu_bo_va *bo_va, bool resv)
 
 		/* walk over the address space and pin the page tables BOs*/
 		for (pt_idx = start; pt_idx <= last; pt_idx++) {
-			ret = try_pin_bo(vm->page_tables[pt_idx].bo, NULL, resv,
+			ret = try_pin_bo(vm->page_tables[pt_idx].entry.robj, NULL, resv,
 					AMDGPU_GEM_DOMAIN_VRAM);
 			if (ret != 0) {
 				failed = pt_idx;
@@ -255,7 +255,7 @@ static int try_pin_pts(struct amdgpu_bo_va *bo_va, bool resv)
 
 		/* walk over the address space and pin the page tables BOs*/
 		for (pt_idx = start; pt_idx <= last; pt_idx++) {
-			ret = try_pin_bo(vm->page_tables[pt_idx].bo, NULL, resv,
+			ret = try_pin_bo(vm->page_tables[pt_idx].entry.robj, NULL, resv,
 					AMDGPU_GEM_DOMAIN_VRAM);
 			if (ret != 0) {
 				failed = pt_idx;
@@ -271,7 +271,7 @@ static int try_pin_pts(struct amdgpu_bo_va *bo_va, bool resv)
 	/* Unpin all already pinned BOs*/
 	if (failed > 0) {
 		for (pt_idx = start; pt_idx <= failed - 1; pt_idx++)
-			unpin_bo(vm->page_tables[pt_idx].bo, resv);
+			unpin_bo(vm->page_tables[pt_idx].entry.robj, resv);
 	}
 	return ret;
 }
@@ -290,7 +290,7 @@ static void unpin_pts(struct amdgpu_bo_va *bo_va, struct amdgpu_vm *vm,
 
 		/* walk over the address space and unpin the page tables BOs*/
 		for (pt_idx = start; pt_idx <= last; pt_idx++)
-			unpin_bo(vm->page_tables[pt_idx].bo, resv);
+			unpin_bo(vm->page_tables[pt_idx].entry.robj, resv);
 	}
 
 	list_for_each_entry(mapping, &bo_va->invalids, list) {
@@ -301,7 +301,7 @@ static void unpin_pts(struct amdgpu_bo_va *bo_va, struct amdgpu_vm *vm,
 
 		/* walk over the address space and unpin the page tables BOs*/
 		for (pt_idx = start; pt_idx <= last; pt_idx++)
-			unpin_bo(vm->page_tables[pt_idx].bo, resv);
+			unpin_bo(vm->page_tables[pt_idx].entry.robj, resv);
 	}
 }
 
-- 
2.7.4

