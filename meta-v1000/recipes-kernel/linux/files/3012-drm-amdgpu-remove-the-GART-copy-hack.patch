From 04aedd8c0c02b8d9b434447057ba242a4a14c0ec Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>
Date: Tue, 22 Aug 2017 12:50:46 +0200
Subject: [PATCH 3012/5855] drm/amdgpu: remove the GART copy hack
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This isn't used since we don't map evicted BOs to GART any more.

Signed-off-by: Christian KÃ¶nig <christian.koenig@amd.com>
Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
Reviewed-by: Roger He <Hongbo.He@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Raveendra Talabattula <raveendra.talabattula@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c | 20 ++++----------------
 1 file changed, 4 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
index 3da1ca0..ab4e7c8 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
@@ -1617,7 +1617,6 @@ static int amdgpu_vm_bo_update_mapping(struct amdgpu_device *adev,
  *
  * @adev: amdgpu_device pointer
  * @exclusive: fence we need to sync to
- * @gtt_flags: flags as they are used for GTT
  * @pages_addr: DMA addresses to use for mapping
  * @vm: requested vm
  * @mapping: mapped range and flags to use for the update
@@ -1631,7 +1630,6 @@ static int amdgpu_vm_bo_update_mapping(struct amdgpu_device *adev,
  */
 static int amdgpu_vm_bo_split_mapping(struct amdgpu_device *adev,
 				      struct fence *exclusive,
-				      uint64_t gtt_flags,
 				      dma_addr_t *pages_addr,
 				      struct amdgpu_vm *vm,
 				      struct amdgpu_bo_va_mapping *mapping,
@@ -1684,11 +1682,7 @@ static int amdgpu_vm_bo_split_mapping(struct amdgpu_device *adev,
 				(PAGE_SIZE / AMDGPU_GPU_PAGE_SIZE);
 			switch (mem->mem_type) {
 			case TTM_PL_TT:
-				if (flags == gtt_flags)
-					src = adev->gart.table_addr +
-						(addr >> AMDGPU_GPU_PAGE_SHIFT) * 8;
-				else
-					max_entries = min(max_entries, 16ull * 1024ull);
+				max_entries = min(max_entries, 16ull * 1024ull);
 				addr = 0;
 				break;
 			case AMDGPU_PL_DGMA_IMPORT:
@@ -1751,10 +1745,10 @@ int amdgpu_vm_bo_update(struct amdgpu_device *adev,
 	struct amdgpu_vm *vm = bo_va->base.vm;
 	struct amdgpu_bo_va_mapping *mapping;
 	dma_addr_t *pages_addr = NULL;
-	uint64_t gtt_flags, flags;
 	struct ttm_mem_reg *mem;
 	struct drm_mm_node *nodes;
 	struct fence *exclusive;
+	uint64_t flags;
 	uint64_t vram_base_offset = adev->vm_manager.vram_base_offset;
 	struct amdgpu_device *bo_adev;
 	int r;
@@ -1781,18 +1775,13 @@ int amdgpu_vm_bo_update(struct amdgpu_device *adev,
 	if (bo_va->base.bo) {
 		flags = amdgpu_ttm_tt_pte_flags(adev, bo->tbo.ttm, mem);
 		bo_adev = amdgpu_ttm_adev(bo->tbo.bdev);
-		gtt_flags = (amdgpu_ttm_is_bound(bo->tbo.ttm) &&
-			adev == bo_adev) ?
-			flags : 0;
 		if (mem && mem->mem_type == TTM_PL_VRAM &&
 			adev != bo_adev) {
 			flags |= AMDGPU_PTE_SYSTEM;
 			vram_base_offset = bo_adev->mc.aper_base;
 		}
-	} else {
+	} else 
 		flags = 0x0;
-		gtt_flags = ~0x0;
-	}
 
 	spin_lock(&vm->status_lock);
 	if (!list_empty(&bo_va->base.vm_status))
@@ -1800,8 +1789,7 @@ int amdgpu_vm_bo_update(struct amdgpu_device *adev,
 	spin_unlock(&vm->status_lock);
 
 	list_for_each_entry(mapping, &bo_va->invalids, list) {
-		r = amdgpu_vm_bo_split_mapping(adev, exclusive,
-					       gtt_flags, pages_addr, vm,
+		r = amdgpu_vm_bo_split_mapping(adev, exclusive, pages_addr, vm,
 					       mapping, vram_base_offset, flags,
 					       mem, &bo_va->last_pt_update);
 		if (r)
-- 
2.7.4

