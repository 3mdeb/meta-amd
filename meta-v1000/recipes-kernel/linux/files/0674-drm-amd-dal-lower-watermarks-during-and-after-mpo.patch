From 8bdaf87b7c3320bc54f1d15217ee25b492b496c6 Mon Sep 17 00:00:00 2001
From: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date: Thu, 28 Jul 2016 16:19:22 -0400
Subject: [PATCH 0674/1722] drm/amd/dal: lower watermarks during and after mpo

Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc.c               |  5 +-
 .../drm/amd/dal/dc/dce100/dce100_hw_sequencer.c    | 10 ++-
 .../drm/amd/dal/dc/dce110/dce110_hw_sequencer.c    | 74 +++++++++++++++++-----
 .../gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c  | 11 +++-
 drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h      |  5 +-
 5 files changed, 81 insertions(+), 24 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index c1915ac..2f46acb 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -1056,12 +1056,9 @@ bool dc_post_commit_surfaces_to_target(
                 }
         }
  
-        if (core_dc->current_context->bw_results.dispclk_khz
-                        > context->bw_results.dispclk_khz) {
+        if (core_dc->hwss.decrease_bandwidth(core_dc, context))
                 pplib_apply_display_requirements(
                                 core_dc, context, &context->pp_display_cfg);
-                core_dc->hwss.set_display_clock(context);
-        }
   
 	resource_validate_ctx_destruct(core_dc->current_context);
 	dm_free(core_dc->current_context);
diff --git a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_hw_sequencer.c
index a9aeae3..14c5fa8 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_hw_sequencer.c
@@ -242,6 +242,13 @@ static void set_displaymarks(
 	/* Do nothing until we have proper bandwitdth calcs */
 }
 
+static bool decrease_bandwidth(
+		struct core_dc *dc, struct validate_context *context)
+{
+	/* Do nothing until we have proper bandwitdth calcs */
+	return true;
+}
+
 static void enable_hw_base_light_sleep(void)
 {
 	/* TODO: implement */
@@ -281,7 +288,8 @@ bool dce100_hw_sequencer_construct(struct core_dc *dc)
 	dc->hwss.pipe_control_lock = dce100_pipe_control_lock;
 	dc->hwss.set_blender_mode = dce100_set_blender_mode;
 	dc->hwss.set_displaymarks = set_displaymarks;
-	dc->hwss.set_display_mark_for_pipe_if_needed = set_display_mark_for_pipe_if_needed;
+	dc->hwss.increase_watermarks_for_pipe = set_display_mark_for_pipe_if_needed;
+	dc->hwss.decrease_bandwidth = decrease_bandwidth;
 
 	return true;
 }
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
index 90738cb..c98230c 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
@@ -1143,8 +1143,19 @@ int get_bw_result_idx(
 	return collapsed_idx;
 }
 
+static bool is_watermark_set_a_greater(
+		const struct bw_watermarks *set_a,
+		const struct bw_watermarks *set_b)
+{
+	if (set_a->a_mark > set_b->a_mark
+			|| set_a->b_mark > set_b->b_mark
+			|| set_a->c_mark > set_b->c_mark
+			|| set_a->d_mark > set_b->d_mark)
+		return true;
+	return false;
+}
 
-static bool watermark_changed(
+static bool did_watermarks_increase(
 		struct pipe_ctx *pipe_ctx,
 		struct validate_context *context,
 		struct validate_context *old_context)
@@ -1158,17 +1169,17 @@ static bool watermark_changed(
 	if (!old_pipe_ctx->stream)
 		return true;
 
-	if (memcmp(&context->bw_results.nbp_state_change_wm_ns[collapsed_pipe_idx],
-			&old_context->bw_results.nbp_state_change_wm_ns[old_collapsed_pipe_idx],
-			sizeof(struct bw_watermarks)))
+	if (is_watermark_set_a_greater(
+			&context->bw_results.nbp_state_change_wm_ns[collapsed_pipe_idx],
+			&old_context->bw_results.nbp_state_change_wm_ns[old_collapsed_pipe_idx]))
 		return true;
-	if (memcmp(&context->bw_results.stutter_exit_wm_ns[collapsed_pipe_idx],
-			&old_context->bw_results.stutter_exit_wm_ns[old_collapsed_pipe_idx],
-			sizeof(struct bw_watermarks)))
+	if (is_watermark_set_a_greater(
+			&context->bw_results.stutter_exit_wm_ns[collapsed_pipe_idx],
+			&old_context->bw_results.stutter_exit_wm_ns[old_collapsed_pipe_idx]))
 		return true;
-	if (memcmp(&context->bw_results.urgent_wm_ns[collapsed_pipe_idx],
-			&old_context->bw_results.urgent_wm_ns[old_collapsed_pipe_idx],
-			sizeof(struct bw_watermarks)))
+	if (is_watermark_set_a_greater(
+			&context->bw_results.urgent_wm_ns[collapsed_pipe_idx],
+			&old_context->bw_results.urgent_wm_ns[old_collapsed_pipe_idx]))
 		return true;
 
 	return false;
@@ -1892,14 +1903,45 @@ static void dce110_power_on_pipe_if_needed(
 	}
 }
 
-static void set_display_mark_for_pipe_if_needed(struct core_dc *dc,
+static void dce110_increase_watermarks_for_pipe(
+		struct core_dc *dc,
 		struct pipe_ctx *pipe_ctx,
 		struct validate_context *context)
 {
-	if (watermark_changed(pipe_ctx, context, dc->current_context))
+	if (did_watermarks_increase(pipe_ctx, context, dc->current_context))
 		program_wm_for_pipe(dc, pipe_ctx, context);
 }
 
+static bool dce110_decrease_bandwidth(
+		struct core_dc *dc,
+		struct validate_context *context)
+{
+	int i;
+	bool ret = false;
+
+	for (i = 0; i < context->res_ctx.pool->pipe_count; i++) {
+		struct pipe_ctx *pipe_ctx = &context->res_ctx.pipe_ctx[i];
+
+		if (!dc->current_context->res_ctx.pipe_ctx[i].stream
+				|| !pipe_ctx->stream)
+			continue;
+
+		/* Reverse context order to check for decrease */
+		if (did_watermarks_increase(pipe_ctx, dc->current_context, context)) {
+			program_wm_for_pipe(dc, pipe_ctx, context);
+			ret = true;
+		}
+	}
+
+	if (dc->current_context->bw_results.dispclk_khz
+			> context->bw_results.dispclk_khz) {
+		dc->hwss.set_display_clock(context);
+		ret = true;
+	}
+
+	return ret;
+}
+
 static void dce110_program_blending(struct core_dc *dc,
 		struct pipe_ctx *pipe_ctx,
 		struct validate_context *context)
@@ -1924,10 +1966,7 @@ static void dce110_program_front_end_for_pipe(struct core_dc *dc,
 		PIPE_LOCK_CONTROL_BLENDER |
 		PIPE_LOCK_CONTROL_MODE;
 
-	dc->hwss.set_display_mark_for_pipe_if_needed(
-			dc,
-		pipe_ctx,
-		context);
+	dc->hwss.increase_watermarks_for_pipe(dc, pipe_ctx, context);
 
 	if (!pipe_ctx->surface->public.flip_immediate)
 		lock_mask |= PIPE_LOCK_CONTROL_SURFACE;
@@ -2163,7 +2202,8 @@ static const struct hw_sequencer_funcs dce110_funcs = {
 	.clock_gating_power_up = dal_dc_clock_gating_dce110_power_up,/*todo*/
 	.set_display_clock = set_display_clock,
 	.set_displaymarks = set_displaymarks,
-	.set_display_mark_for_pipe_if_needed = set_display_mark_for_pipe_if_needed,
+	.increase_watermarks_for_pipe = dce110_increase_watermarks_for_pipe,
+	.decrease_bandwidth = dce110_decrease_bandwidth,
 	.set_drr = set_drr
 };
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c
index 31e3e2b..49d9a84 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_hw_sequencer.c
@@ -226,6 +226,14 @@ static void set_displaymarks(
 	/* Do nothing until we have proper bandwitdth calcs */
 }
 
+static bool decrease_bandwidth(
+		struct core_dc *dc, struct validate_context *context)
+{
+	/* Do nothing until we have proper bandwitdth calcs */
+	return true;
+}
+
+
 bool dce80_hw_sequencer_construct(struct core_dc *dc)
 {
 	dce110_hw_sequencer_construct(dc);
@@ -236,7 +244,8 @@ bool dce80_hw_sequencer_construct(struct core_dc *dc)
 	dc->hwss.pipe_control_lock = dce80_pipe_control_lock;
 	dc->hwss.set_blender_mode = dce80_set_blender_mode;
 	dc->hwss.set_displaymarks = set_displaymarks;
-	dc->hwss.set_display_mark_for_pipe_if_needed = set_display_mark_for_pipe_if_needed;
+	dc->hwss.increase_watermarks_for_pipe = set_display_mark_for_pipe_if_needed;
+	dc->hwss.decrease_bandwidth = decrease_bandwidth;
 
 	return true;
 }
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h b/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
index 6a47452..cde3c0b 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw_sequencer.h
@@ -134,12 +134,15 @@ struct hw_sequencer_funcs {
 				const struct core_dc *dc,
 				struct validate_context *context);
 
-	void (*set_display_mark_for_pipe_if_needed)(struct core_dc *dc,
+	void (*increase_watermarks_for_pipe)(struct core_dc *dc,
 			struct pipe_ctx *pipe_ctx,
 			struct validate_context *context);
 
 	void (*set_display_clock)(struct validate_context *context);
 
+	bool (*decrease_bandwidth)(struct core_dc *dc,
+			struct validate_context *context);
+
 	void (*set_drr)(struct pipe_ctx **pipe_ctx, int num_pipes,
 			int vmin, int vmax);
 };
-- 
2.7.4

