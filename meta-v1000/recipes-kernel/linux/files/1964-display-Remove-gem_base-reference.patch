From c1325cc6714960a73933f22e1040aed5fabddfa8 Mon Sep 17 00:00:00 2001
From: Kent Russell <kent.russell@amd.com>
Date: Tue, 28 Mar 2017 12:15:46 -0400
Subject: [PATCH 1964/2094] display: Remove gem_base reference

We can return the GEM object, instead of the BO's gem_base, which will
accomplish the same thing. This will allow display to compile after we
removed the GEM from the BO struct

Change-Id: I187e183a1b4357a6df3f8469472ec91871b261a3
Signed-off-by: Kent Russell <kent.russell@amd.com>
---
 drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
index 938372b..b2f7f51 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
@@ -179,7 +179,7 @@ static int dm_crtc_pin_cursor_bo_new(
 	struct drm_crtc *crtc,
 	struct drm_file *file_priv,
 	uint32_t handle,
-	struct amdgpu_bo **ret_obj)
+	struct drm_gem_object **ret_obj)
 {
 	struct amdgpu_crtc *amdgpu_crtc;
 	struct amdgpu_bo *robj;
@@ -219,7 +219,7 @@ static int dm_crtc_pin_cursor_bo_new(
 
 		if (ret == 0) {
 			amdgpu_crtc->cursor_addr = gpu_addr;
-			*ret_obj  = robj;
+			*ret_obj  = obj;
 		}
 		amdgpu_bo_unreserve(robj);
 		if (ret)
@@ -238,7 +238,7 @@ static int dm_crtc_cursor_set(
 	uint32_t width,
 	uint32_t height)
 {
-	struct amdgpu_bo *new_cursor_bo;
+	struct drm_gem_object *new_cursor_gem;
 	struct dc_cursor_position position;
 
 	int ret;
@@ -246,7 +246,7 @@ static int dm_crtc_cursor_set(
 	struct amdgpu_crtc *amdgpu_crtc = to_amdgpu_crtc(crtc);
 
 	ret		= EINVAL;
-	new_cursor_bo	= NULL;
+	new_cursor_gem	= NULL;
 
 	DRM_DEBUG_KMS(
 	"%s: crtc_id=%d with handle %d and size %d to %d, bo_object %p\n",
@@ -285,7 +285,7 @@ static int dm_crtc_cursor_set(
 		goto release;
 	}
 	/*try to pin new cursor bo*/
-	ret = dm_crtc_pin_cursor_bo_new(crtc, file_priv, handle, &new_cursor_bo);
+	ret = dm_crtc_pin_cursor_bo_new(crtc, file_priv, handle, &new_cursor_gem);
 	/*if map not successful then return an error*/
 	if (ret)
 		goto release;
@@ -298,7 +298,7 @@ static int dm_crtc_cursor_set(
 	dm_crtc_unpin_cursor_bo_old(amdgpu_crtc);
 
 	/*assign new cursor bo to our internal cache*/
-	amdgpu_crtc->cursor_bo = &new_cursor_bo->gem_base;
+	amdgpu_crtc->cursor_bo = new_cursor_gem;
 
 release:
 	return ret;
-- 
2.7.4

