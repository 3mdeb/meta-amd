From f33baa0162dc56ccc84a20071afb7391706039cb Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Wed, 12 Oct 2016 21:14:57 -0400
Subject: [PATCH 1322/1722] drm/amd/dal: Remove irq.c

Change-Id: I69c54387a92aeadc9b7f22fe9d794724ecad374f
Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/gpio/Makefile           |   2 +-
 drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c     |  94 +++++++++++++-
 drivers/gpu/drm/amd/dal/dc/gpio/irq.c              | 138 ---------------------
 .../amd/dal/include/adapter_service_interface.h    |   1 -
 .../drm/amd/dal/include/gpio_service_interface.h   |  11 +-
 drivers/gpu/drm/amd/dal/include/irq_interface.h    |  10 --
 6 files changed, 104 insertions(+), 152 deletions(-)
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/gpio/irq.c

diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/Makefile b/drivers/gpu/drm/amd/dal/dc/gpio/Makefile
index 92a03ea..2f8123b 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/Makefile
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/Makefile
@@ -3,7 +3,7 @@
 # It provides the control and status of HW GPIO pins.
 
 GPIO = ddc.o gpio_base.o gpio_service.o hw_ddc.o hw_factory.o \
-       hw_gpio.o hw_gpio_pad.o hw_hpd.o hw_translate.o irq.o
+       hw_gpio.o hw_gpio_pad.o hw_hpd.o hw_translate.o
 
 AMD_DAL_GPIO = $(addprefix $(AMDDALPATH)/dc/gpio/,$(GPIO))
 
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c b/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c
index db97525..0e6ddbe 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c
@@ -30,7 +30,6 @@
 #include "dm_services.h"
 #include "include/gpio_interface.h"
 #include "include/ddc_interface.h"
-#include "include/irq_interface.h"
 #include "include/gpio_service_interface.h"
 #include "hw_translate.h"
 #include "hw_factory.h"
@@ -320,3 +319,96 @@ void dal_gpio_service_close(
 		pin->funcs->destroy(ptr);
 	}
 }
+
+
+enum dc_irq_source dal_irq_get_source(
+	const struct gpio *irq)
+{
+	enum gpio_id id = dal_gpio_get_id(irq);
+
+	switch (id) {
+	case GPIO_ID_HPD:
+		return (enum dc_irq_source)(DC_IRQ_SOURCE_HPD1 +
+			dal_gpio_get_enum(irq));
+	case GPIO_ID_GPIO_PAD:
+		return (enum dc_irq_source)(DC_IRQ_SOURCE_GPIOPAD0 +
+			dal_gpio_get_enum(irq));
+	default:
+		return DC_IRQ_SOURCE_INVALID;
+	}
+}
+
+enum dc_irq_source dal_irq_get_rx_source(
+	const struct gpio *irq)
+{
+	enum gpio_id id = dal_gpio_get_id(irq);
+
+	switch (id) {
+	case GPIO_ID_HPD:
+		return (enum dc_irq_source)(DC_IRQ_SOURCE_HPD1RX +
+			dal_gpio_get_enum(irq));
+	default:
+		return DC_IRQ_SOURCE_INVALID;
+	}
+}
+
+enum gpio_result dal_irq_setup_hpd_filter(
+	struct gpio *irq,
+	struct gpio_hpd_config *config)
+{
+	struct gpio_config_data config_data;
+
+	if (!config)
+		return GPIO_RESULT_INVALID_DATA;
+
+	config_data.type = GPIO_CONFIG_TYPE_HPD;
+	config_data.config.hpd = *config;
+
+	return dal_gpio_set_config(irq, &config_data);
+}
+
+/*
+ * @brief
+ * Creation and destruction
+ */
+
+struct gpio *dal_gpio_create_irq(
+	struct gpio_service *service,
+	enum gpio_id id,
+	uint32_t en)
+{
+	struct gpio *irq;
+
+	switch (id) {
+	case GPIO_ID_HPD:
+	case GPIO_ID_GPIO_PAD:
+	break;
+	default:
+		ASSERT_CRITICAL(false);
+		return NULL;
+	}
+
+	irq = dal_gpio_create(
+		service, id, en, GPIO_PIN_OUTPUT_STATE_DEFAULT);
+
+	if (irq)
+		return irq;
+
+	ASSERT_CRITICAL(false);
+	return NULL;
+}
+
+void dal_gpio_destroy_irq(
+	struct gpio **irq)
+{
+	if (!irq || !*irq) {
+		ASSERT_CRITICAL(false);
+		return;
+	}
+
+	dal_gpio_close(*irq);
+	dal_gpio_destroy(irq);
+	dm_free(*irq);
+
+	*irq = NULL;
+}
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/irq.c b/drivers/gpu/drm/amd/dal/dc/gpio/irq.c
deleted file mode 100644
index fd51565..0000000
--- a/drivers/gpu/drm/amd/dal/dc/gpio/irq.c
+++ /dev/null
@@ -1,138 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#include "dm_services.h"
-
-/*
- * Pre-requisites: headers required by header of this unit
- */
-#include "include/gpio_interface.h"
-#include "include/irq_interface.h"
-#include "include/gpio_service_interface.h"
-#include "hw_translate.h"
-#include "hw_factory.h"
-#include "gpio_service.h"
-
-/*
- * Post-requisites: headers required by this unit
- */
-
-enum dc_irq_source dal_irq_get_source(
-	const struct gpio *irq)
-{
-	enum gpio_id id = dal_gpio_get_id(irq);
-
-	switch (id) {
-	case GPIO_ID_HPD:
-		return (enum dc_irq_source)(DC_IRQ_SOURCE_HPD1 +
-			dal_gpio_get_enum(irq));
-	case GPIO_ID_GPIO_PAD:
-		return (enum dc_irq_source)(DC_IRQ_SOURCE_GPIOPAD0 +
-			dal_gpio_get_enum(irq));
-	default:
-		return DC_IRQ_SOURCE_INVALID;
-	}
-}
-
-enum dc_irq_source dal_irq_get_rx_source(
-	const struct gpio *irq)
-{
-	enum gpio_id id = dal_gpio_get_id(irq);
-
-	switch (id) {
-	case GPIO_ID_HPD:
-		return (enum dc_irq_source)(DC_IRQ_SOURCE_HPD1RX +
-			dal_gpio_get_enum(irq));
-	default:
-		return DC_IRQ_SOURCE_INVALID;
-	}
-}
-
-enum gpio_result dal_irq_setup_hpd_filter(
-	struct gpio *irq,
-	struct gpio_hpd_config *config)
-{
-	struct gpio_config_data config_data;
-
-	if (!config)
-		return GPIO_RESULT_INVALID_DATA;
-
-	config_data.type = GPIO_CONFIG_TYPE_HPD;
-	config_data.config.hpd = *config;
-
-	return dal_gpio_set_config(irq, &config_data);
-}
-
-/*
- * @brief
- * Creation and destruction
- */
-
-struct gpio *dal_gpio_create_irq(
-	struct gpio_service *service,
-	enum gpio_id id,
-	uint32_t en)
-{
-	struct gpio *irq;
-
-	switch (id) {
-	case GPIO_ID_HPD:
-	case GPIO_ID_GPIO_PAD:
-	break;
-	default:
-		ASSERT_CRITICAL(false);
-		return NULL;
-	}
-
-	irq = dal_gpio_create(
-		service, id, en, GPIO_PIN_OUTPUT_STATE_DEFAULT);
-
-	if (irq)
-		return irq;
-
-	ASSERT_CRITICAL(false);
-	return NULL;
-}
-
-static void destruct(struct gpio *irq)
-{
-	dal_gpio_close(irq);
-	dal_gpio_destroy(&irq);
-
-}
-
-void dal_gpio_destroy_irq(
-	struct gpio **irq)
-{
-	if (!irq || !*irq) {
-		ASSERT_CRITICAL(false);
-		return;
-	}
-
-	destruct(*irq);
-	dm_free(*irq);
-
-	*irq = NULL;
-}
diff --git a/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h b/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
index 1f0802f..0c8c1c2 100644
--- a/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
@@ -29,7 +29,6 @@
 #include "grph_object_ctrl_defs.h"
 #include "gpio_interface.h"
 #include "ddc_interface.h"
-#include "irq_interface.h"
 #include "bios_parser_interface.h"
 #include "adapter_service_types.h"
 #include "dal_types.h"
diff --git a/drivers/gpu/drm/amd/dal/include/gpio_service_interface.h b/drivers/gpu/drm/amd/dal/include/gpio_service_interface.h
index 1711f5e..e69f0a1 100644
--- a/drivers/gpu/drm/amd/dal/include/gpio_service_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/gpio_service_interface.h
@@ -29,7 +29,6 @@
 #include "gpio_types.h"
 #include "gpio_interface.h"
 #include "ddc_interface.h"
-#include "irq_interface.h"
 #include "hw/gpio.h"
 
 struct gpio_service;
@@ -69,6 +68,16 @@ void dal_gpio_destroy_ddc(
 void dal_gpio_service_destroy(
 	struct gpio_service **ptr);
 
+enum dc_irq_source dal_irq_get_source(
+	const struct gpio *irq);
+
+enum dc_irq_source dal_irq_get_rx_source(
+	const struct gpio *irq);
+
+enum gpio_result dal_irq_setup_hpd_filter(
+	struct gpio *irq,
+	struct gpio_hpd_config *config);
+
 struct gpio *dal_gpio_create_irq(
 	struct gpio_service *service,
 	enum gpio_id id,
diff --git a/drivers/gpu/drm/amd/dal/include/irq_interface.h b/drivers/gpu/drm/amd/dal/include/irq_interface.h
index 8619157..077ded3 100644
--- a/drivers/gpu/drm/amd/dal/include/irq_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/irq_interface.h
@@ -28,14 +28,4 @@
 
 #include "gpio_types.h"
 
-enum dc_irq_source dal_irq_get_source(
-	const struct gpio *irq);
-
-enum dc_irq_source dal_irq_get_rx_source(
-	const struct gpio *irq);
-
-enum gpio_result dal_irq_setup_hpd_filter(
-	struct gpio *irq,
-	struct gpio_hpd_config *config);
-
 #endif
-- 
2.7.4

