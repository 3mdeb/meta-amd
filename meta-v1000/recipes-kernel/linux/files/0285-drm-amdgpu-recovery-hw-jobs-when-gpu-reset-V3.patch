From 1e82400cc3cb5951b04d0e603b268e240ce131d9 Mon Sep 17 00:00:00 2001
From: Chunming Zhou <David1.Zhou@amd.com>
Date: Thu, 30 Jun 2016 13:56:02 +0800
Subject: [PATCH 0285/1722] drm/amdgpu: recovery hw jobs when gpu reset V3
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

V3: directly use pd_addr.

Signed-off-by: Chunming Zhou <David1.Zhou@amd.com>
Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_device.c | 4 +++-
 drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c     | 4 +++-
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
index 0a26618..112c7b7 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
@@ -2011,6 +2011,7 @@ int amdgpu_gpu_reset(struct amdgpu_device *adev)
                 if (!ring)
                         continue;
                 kthread_park(ring->sched.thread);
+                amd_sched_hw_job_reset(&ring->sched);
         }
         /* after all hw jobs are reset, hw fence is meaningless, so force_completion */
         amdgpu_fence_driver_force_completion(adev);
@@ -2057,8 +2058,9 @@ retry:
 			struct amdgpu_ring *ring = adev->rings[i];
 			if (!ring)
 				continue;
+			amd_sched_job_recovery(&ring->sched);
 			kthread_unpark(ring->sched.thread);
-			amdgpu_ring_restore(ring, ring_sizes[i], ring_data[i]);
+			kfree(ring_data[i]);
 			ring_sizes[i] = 0;
 			ring_data[i] = NULL;
 		}
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
index 7f1b77f..d9a7b2b 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
@@ -385,7 +385,9 @@ int amdgpu_vm_flush(struct amdgpu_ring *ring, struct amdgpu_job *job)
             amdgpu_vm_ring_has_compute_vm_bug(ring)))
 	       amdgpu_ring_emit_pipeline_sync(ring);
 
-        if (ring->funcs->emit_vm_flush && job->vm_needs_flush) {
+        if (ring->funcs->emit_vm_flush && (job->vm_needs_flush ||
+            amdgpu_vm_is_gpu_reset(adev, id))) {
+
 		struct fence *fence;
 
                 trace_amdgpu_vm_flush(job->vm_pd_addr, ring->idx, job->vm_id);
-- 
2.7.4

