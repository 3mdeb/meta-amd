From 76e445d0e90fed7ed71b5498eade49b9ceb19db8 Mon Sep 17 00:00:00 2001
From: Leon Elazar <leon.elazar@amd.com>
Date: Tue, 22 Nov 2016 15:36:28 -0500
Subject: [PATCH 1476/1722] drm/amd/dal: Memory leak fixes

[Problem]
DC Hw sequencer wansn't released during the destructor.
DC Context was set to NULL before was actually released.

Change-Id: If2c0caf0cc49d2f023adcdb083ef869d8712326d
Signed-off-by: Leon Elazar <leon.elazar@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc.c          | 27 +++++++++++++++++++++------
 drivers/gpu/drm/amd/dal/dc/core/dc_resource.c | 10 ++++++++++
 drivers/gpu/drm/amd/dal/dc/dc_types.h         |  2 ++
 drivers/gpu/drm/amd/dal/dc/inc/core_dc.h      |  2 +-
 drivers/gpu/drm/amd/dal/dc/inc/resource.h     |  3 +--
 5 files changed, 35 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index 89e802e..21e0ead 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -587,15 +587,30 @@ ctx_fail:
 static void destruct(struct core_dc *dc)
 {
 	resource_validate_ctx_destruct(dc->current_context);
-	dm_free(dc->current_context);
+
 	dm_free(dc->temp_flip_context);
-        dc->temp_flip_context = NULL;
+        dc->current_context = NULL;
+
 	destroy_links(dc);
-	dc->res_pool->funcs->destroy(&dc->res_pool);
-	dal_logger_destroy(&dc->ctx->logger);
-	if (dc->ctx->created_bios)
-		dal_bios_parser_destroy(&dc->ctx->dc_bios);
+
+	if (dc->res_pool)
+                dc->res_pool->funcs->destroy(&dc->res_pool);
+
+        if (dc->ctx->gpio_service)
+                dal_gpio_service_destroy(&dc->ctx->gpio_service);
+
+        if (dc->ctx->i2caux)
+                dal_i2caux_destroy(&dc->ctx->i2caux);
+
+        if (dc->ctx->created_bios)
+                dal_bios_parser_destroy(&dc->ctx->dc_bios);
+
+        if (dc->ctx->logger)
+                dal_logger_destroy(&dc->ctx->logger);
+
+	dm_free(dc->current_context);
 	dm_free(dc->ctx);
+
 	dc->ctx = NULL;
 }
 
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c b/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
index 1541913..9ec5b65 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
@@ -200,6 +200,16 @@ bool resource_construct(
 	return true;
 }
 
+void dc_destroy_resource_pool(struct core_dc *dc)
+{
+         if (dc) {
+                 if (dc->res_pool)
+                         dc->res_pool->funcs->destroy(&dc->res_pool);
+
+                 if (dc->hwseq)
+                         dm_free(dc->hwseq);
+         }
+}
 
 void resource_unreference_clock_source(
 		struct resource_context *res_ctx,
diff --git a/drivers/gpu/drm/amd/dal/dc/dc_types.h b/drivers/gpu/drm/amd/dal/dc/dc_types.h
index c71f81f..31f9611 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc_types.h
+++ b/drivers/gpu/drm/amd/dal/dc/dc_types.h
@@ -75,6 +75,8 @@ struct dc_context {
 
 	struct dc_bios *dc_bios;
 	bool created_bios;
+	struct gpio_service *gpio_service;
+        struct i2caux *i2caux;
 };
 
 /*
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/core_dc.h b/drivers/gpu/drm/amd/dal/dc/inc/core_dc.h
index 826ae7a..58888e6 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/core_dc.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/core_dc.h
@@ -39,7 +39,7 @@ struct core_dc {
 
 	/* HW functions */
 	struct hw_sequencer_funcs hwss;
-
+        struct dce_hwseq *hwseq;
 	/* temp store of dm_pp_display_configuration
 	 * to compare to see if display config changed
 	 */
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/resource.h b/drivers/gpu/drm/amd/dal/dc/inc/resource.h
index 20a3b08..b0f948a 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/resource.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/resource.h
@@ -73,8 +73,7 @@ struct resource_pool *dc_create_resource_pool(struct adapter_service *adapter_se
 				enum dce_version dc_version,
 				struct hw_asic_id asic_id);
 
-void dc_destroy_resource_pool(struct resource_pool **pool,
-				enum dce_version dc_version);
+void dc_destroy_resource_pool(struct core_dc *dc);
 
 enum dc_status resource_map_pool_resources(
 		const struct core_dc *dc,
-- 
2.7.4

