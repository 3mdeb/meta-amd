From dd3067edca41f74fc462e14558a1a7bffdbbfa76 Mon Sep 17 00:00:00 2001
From: Rex Zhu <Rex.Zhu@amd.com>
Date: Fri, 19 May 2017 16:46:22 +0800
Subject: [PATCH 2040/2094] drm/amdgpu: baremetal only use KIQ for compute ring
 management on APU

Change-Id: I101dd98f6b6d660fd0102c79b8768522393e6a7e
Signed-off-by: Rex Zhu <Rex.Zhu@amd.com>
Reviewed-by: Ken Wang <Qingqing.Wang@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
index db77af1..0fdca9e 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
@@ -5015,13 +5015,13 @@ static int gfx_v8_0_kcq_init_queue(struct amdgpu_ring *ring)
 	struct vi_mqd *mqd = ring->mqd_ptr;
 	int mqd_idx = ring - &adev->gfx.compute_ring[0];
 
-	if (adev->asic_type == CHIP_FIJI ||
+	if (!(adev->flags & AMD_IS_APU) ||
 		(!adev->gfx.in_reset && !adev->gfx.in_suspend)) {
 		memset((void *)mqd, 0, sizeof(*mqd));
 		mutex_lock(&adev->srbm_mutex);
 		vi_srbm_select(adev, ring->me, ring->pipe, ring->queue, 0);
 		gfx_v8_0_mqd_init(ring);
-		if (adev->asic_type == CHIP_FIJI)
+		if (!(adev->flags & AMD_IS_APU))
 			gfx_v8_0_kiq_init_register(ring);
 		vi_srbm_select(adev, 0, 0, 0, 0);
 		mutex_unlock(&adev->srbm_mutex);
@@ -5093,7 +5093,7 @@ static int gfx_v8_0_kiq_resume(struct amdgpu_device *adev)
 
 	gfx_v8_0_set_mec_doorbell_range(adev);
 
-	if (adev->asic_type != CHIP_FIJI) {
+	if (adev->flags & AMD_IS_APU) {
 		r = gfx_v8_0_kiq_kcq_enable(adev);
 		if (r)
 			goto done;
@@ -5213,7 +5213,7 @@ static int gfx_v8_0_hw_fini(void *handle)
 		pr_debug("For SRIOV client, shouldn't do anything.\n");
 		return 0;
 	}
-	if (adev->asic_type != CHIP_FIJI)
+	if (adev->flags & AMD_IS_APU)
 		gfx_v8_0_kiq_kcq_disable(adev);
 	gfx_v8_0_cp_enable(adev, false);
 	gfx_v8_0_rlc_stop(adev);
-- 
2.7.4

