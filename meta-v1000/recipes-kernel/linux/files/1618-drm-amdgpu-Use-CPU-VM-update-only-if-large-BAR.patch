From 1204dadfebec8b8103c02f130578f362b1ada248 Mon Sep 17 00:00:00 2001
From: Ayyappa Ch <ayyappa.chandolu@amd.com>
Date: Fri, 27 Jan 2017 13:09:07 +0530
Subject: [PATCH 1618/1722] drm/amdgpu: Use CPU VM update only if large BAR

Change-Id: If30037f794eb62f07f0ca26ae9f48a9b4360bf0b
Signed-off-by: Harish Kasiviswanathan <Harish.Kasiviswanathan@amd.com>
Signed-off-by: Ayyappa Ch <ayyappa.chandolu@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c | 17 +++++++++++++++--
 drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c          |  2 +-
 drivers/gpu/drm/amd/amdgpu/amdgpu_vm.h           |  2 ++
 3 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
index 33cd163..8fef821 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
@@ -67,6 +67,17 @@ static bool check_if_add_bo_to_vm(struct amdgpu_vm *avm,
 	return true;
 }
 
+bool check_if_large_bar(struct kgd_dev *kgd)
+{
+	struct amdgpu_device *adev = get_amdgpu_device(kgd);
+
+	if (adev->mc.visible_vram_size > 0 &&
+		adev->mc.real_vram_size == adev->mc.visible_vram_size)
+		return true;
+
+	return false;
+}
+
 static int add_bo_to_vm(struct amdgpu_device *adev, struct kgd_mem *mem,
 		struct amdgpu_vm *avm, bool is_aql,
 		struct kfd_bo_va_list **p_bo_va_entry)
@@ -1003,6 +1014,7 @@ int amdgpu_amdkfd_gpuvm_create_process_vm(struct kgd_dev *kgd, void **vm)
 	int ret;
 	struct amdgpu_vm *new_vm;
 	struct amdgpu_bo *pd;
+	bool vm_update_using_cpu;
 	struct amdgpu_device *adev = get_amdgpu_device(kgd);
 
 	BUG_ON(kgd == NULL);
@@ -1013,9 +1025,10 @@ int amdgpu_amdkfd_gpuvm_create_process_vm(struct kgd_dev *kgd, void **vm)
 		return -ENOMEM;
 
 	/* Initialize the VM context, allocate the page directory and zero it */
+	vm_update_using_cpu = !!(amdgpu_vm_update_context &
+				AMDGPU_VM_USE_CPU_UPDATE_FOR_COMPUTE_MASK);
 	ret = amdgpu_vm_init(adev, new_vm,
-		!!(amdgpu_vm_update_context &
-		AMDGPU_VM_USE_CPU_UPDATE_FOR_COMPUTE_MASK));
+			     (vm_update_using_cpu && check_if_large_bar(kgd)));
 	if (ret != 0) {
 		pr_err("amdgpu: failed init vm ret %d\n", ret);
 		/* Undo everything related to the new VM context */
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
index 5a23770..8b4bdb4 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
@@ -170,7 +170,7 @@ module_param_named(vm_fault_stop, amdgpu_vm_fault_stop, int, 0444);
 MODULE_PARM_DESC(vm_debug, "Debug VM handling (0 = disabled (default), 1 = enabled)");
 module_param_named(vm_debug, amdgpu_vm_debug, int, 0644);
 
-MODULE_PARM_DESC(vm_update_context, "VM update using CPU. (0 = never, 1 = Graphics only, 2 = Compute only (default), 3 = Both");
+MODULE_PARM_DESC(vm_update_context, "VM update using CPU on large BAR. (0 = never, 1 = Graphics only, 2 = Compute only (default), 3 = Both");
 module_param_named(vm_update_context, amdgpu_vm_update_context, int, 0444);
 
 MODULE_PARM_DESC(vram_page_split, "Number of pages after we split VRAM allocations (default 1024, -1 = disable)");
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.h
index f36a5e1..00d3949 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.h
@@ -74,6 +74,8 @@ struct amdgpu_bo_list_entry;
  *  updated for Graphics and Compute. BIT0 controls Graphics and BIT1 Compute.
  *  BIT0 [= 0] Graphics updated by SDMA [= 1] by CPU
  *  BIT1 [= 0] Compute updated by SDMA [= 1] by CPU
+ *
+ *  NOTE: CPU update is supported only for Large BAR systems
  */
 #define AMDGPU_VM_USE_CPU_UPDATE_FOR_GRAPHICS_MASK (1 << 0)
 #define AMDGPU_VM_USE_CPU_UPDATE_FOR_COMPUTE_MASK (1 << 1)
-- 
2.7.4

