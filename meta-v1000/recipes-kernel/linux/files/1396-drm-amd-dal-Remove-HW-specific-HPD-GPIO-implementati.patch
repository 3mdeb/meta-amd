From a079a3b59cefd933e987fc4702469802587d5d23 Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Wed, 19 Oct 2016 20:52:07 -0400
Subject: [PATCH 1396/1722] drm/amd/dal: Remove HW specific HPD GPIO
 implementation

Change-Id: I4b588fa2f36350f3d04d82762adeeb7f9a71fefa
Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/gpio/Makefile           |   8 +-
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c |   4 +
 .../drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c |  56 ++++--
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c | 195 --------------------
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h |  34 ----
 .../gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c   |   3 +
 .../drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c   |  68 +++++--
 .../gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c   | 199 ---------------------
 .../gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.h   |  44 -----
 drivers/gpu/drm/amd/dal/dc/gpio/ddc_regs.h         |   4 -
 .../drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.c  |  99 ----------
 .../drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.h  |  34 ----
 drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c     |   1 +
 drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h       |   4 +
 drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.c           | 131 +++++++++++++-
 drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.h           |  10 +-
 16 files changed, 242 insertions(+), 652 deletions(-)
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.h
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.c
 delete mode 100644 drivers/gpu/drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.h

diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/Makefile b/drivers/gpu/drm/amd/dal/dc/gpio/Makefile
index c69f283..863e1f2 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/Makefile
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/Makefile
@@ -13,8 +13,7 @@ AMD_DAL_FILES += $(AMD_DAL_GPIO)
 # DCE 8x
 ###############################################################################
 # all DCE8.x are derived from DCE8.0
-GPIO_DCE80 = hw_translate_dce80.o hw_factory_dce80.o \
-	hw_ddc_dce80.o hw_hpd_dce80.o
+GPIO_DCE80 = hw_translate_dce80.o hw_factory_dce80.o hw_ddc_dce80.o
 
 AMD_DAL_GPIO_DCE80 = $(addprefix $(AMDDALPATH)/dc/gpio/dce80/,$(GPIO_DCE80))
 
@@ -23,8 +22,7 @@ AMD_DAL_FILES += $(AMD_DAL_GPIO_DCE80)
 ###############################################################################
 # DCE 11x
 ###############################################################################
-GPIO_DCE110 = hw_translate_dce110.o hw_factory_dce110.o hw_hpd_dce110.o \
-	hw_ddc_dce110.o
+GPIO_DCE110 = hw_translate_dce110.o hw_factory_dce110.o hw_ddc_dce110.o
 
 AMD_DAL_GPIO_DCE110 = $(addprefix $(AMDDALPATH)/dc/gpio/dce110/,$(GPIO_DCE110))
 
@@ -33,7 +31,7 @@ AMD_DAL_FILES += $(AMD_DAL_GPIO_DCE110)
 ###############################################################################
 # Diagnostics on FPGA
 ###############################################################################
-GPIO_DIAG_FPGA = hw_translate_diag.o hw_factory_diag.o hw_hpd_diag.o hw_ddc_diag.o
+GPIO_DIAG_FPGA = hw_translate_diag.o hw_factory_diag.o hw_ddc_diag.o
 
 AMD_DAL_GPIO_DIAG_FPGA = $(addprefix $(AMDDALPATH)/dc/gpio/diagnostics/,$(GPIO_DIAG_FPGA))
 
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
index d50643e..f141b84 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
@@ -38,6 +38,10 @@
 
 #include "../ddc_regs.h"
 
+ /* set field name */
+#define SF(reg_name, field_name, post_fix)\
+	.field_name = reg_name ## __ ## field_name ## post_fix
+
 
 #undef FN
 #define FN(reg_name, field_name) \
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c
index af807c0..8e46179 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_factory_dce110.c
@@ -23,35 +23,69 @@
  *
  */
 
-/*
- * Pre-requisites: headers required by header of this unit
- */
-
 #include "dm_services.h"
 #include "include/gpio_types.h"
 #include "../hw_factory.h"
 
-/*
- * Header of this unit
- */
-
 #include "../hw_gpio.h"
 #include "../hw_ddc.h"
 #include "../hw_hpd.h"
 
 #include "hw_factory_dce110.h"
 
-#include "hw_hpd_dce110.h"
 #include "hw_ddc_dce110.h"
 
-/* fucntion table */
+#include "dce/dce_11_0_d.h"
+#include "dce/dce_11_0_sh_mask.h"
+
+/* set field name */
+#define SF(reg_name, field_name, post_fix)\
+	.field_name = reg_name ## __ ## field_name ## post_fix
+
+#include "reg_helper.h"
+#include "../hpd_regs.h"
+
+#define hpd_regs(id) \
+{\
+	HPD_REG_LIST(id)\
+}
+
+static const struct hpd_registers hpd_regs[] = {
+	hpd_regs(0),
+	hpd_regs(1),
+	hpd_regs(2),
+	hpd_regs(3),
+	hpd_regs(4),
+	hpd_regs(5)
+};
+
+static const struct hpd_sh_mask hpd_shift = {
+		HPD_MASK_SH_LIST(__SHIFT)
+};
+
+static const struct hpd_sh_mask hpd_mask = {
+		HPD_MASK_SH_LIST(_MASK)
+};
+
+
+static void define_hpd_registers(struct hw_gpio_pin *pin, uint32_t en)
+{
+	struct hw_hpd *hpd = HW_HPD_FROM_BASE(pin);
+
+	hpd->regs = &hpd_regs[en];
+	hpd->shifts = &hpd_shift;
+	hpd->masks = &hpd_mask;
+	hpd->base.regs = &hpd_regs[en].gpio;
+}
+
 static const struct hw_factory_funcs funcs = {
 	.create_ddc_data = dal_hw_ddc_dce110_create,
 	.create_ddc_clock = dal_hw_ddc_dce110_create,
 	.create_generic = NULL,
-	.create_hpd = dal_hw_hpd_dce110_create,
+	.create_hpd = dal_hw_hpd_create,
 	.create_sync = NULL,
 	.create_gsl = NULL,
+	.define_hpd_registers = define_hpd_registers
 };
 
 /*
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c
deleted file mode 100644
index 5a90dfc..0000000
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.c
+++ /dev/null
@@ -1,195 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#include "dm_services.h"
-
-#include "include/gpio_types.h"
-#include "../hw_gpio.h"
-#include "../hw_hpd.h"
-
-#include "hw_hpd_dce110.h"
-
-#include "dce/dce_11_0_d.h"
-#include "dce/dce_11_0_sh_mask.h"
-
-/* set field name */
-#define SF(reg_name, field_name, post_fix)\
-	.field_name = reg_name ## __ ## field_name ## post_fix
-
-#include "reg_helper.h"
-#include "../hpd_regs.h"
-
-#undef FN
-#define FN(reg_name, field_name) \
-	hpd->shifts->field_name, hpd->masks->field_name
-
-#define CTX \
-	hpd->base.base.ctx
-#define REG(reg)\
-	(hpd->regs->reg)
-
-
-#define hpd_regs(id) \
-{\
-	HPD_REG_LIST(id)\
-}
-
-static const struct hpd_registers hpd_regs[] = {
-	hpd_regs(0),
-	hpd_regs(1),
-	hpd_regs(2),
-	hpd_regs(3),
-	hpd_regs(4),
-	hpd_regs(5)
-};
-
-static const struct hpd_sh_mask hpd_shift = {
-		HPD_MASK_SH_LIST(__SHIFT)
-};
-
-static const struct hpd_sh_mask hpd_mask = {
-		HPD_MASK_SH_LIST(_MASK)
-};
-
-static void destruct(
-	struct hw_hpd *hpd)
-{
-	dal_hw_hpd_destruct(hpd);
-}
-
-static void destroy(
-	struct hw_gpio_pin **ptr)
-{
-	struct hw_hpd *hpd = HW_HPD_FROM_BASE(*ptr);
-
-	destruct(hpd);
-
-	dm_free(hpd);
-
-	*ptr = NULL;
-}
-
-static enum gpio_result get_value(
-	const struct hw_gpio_pin *ptr,
-	uint32_t *value)
-{
-	struct hw_hpd *hpd = HW_HPD_FROM_BASE(ptr);
-	uint32_t hpd_delayed = 0;
-
-	/* in Interrupt mode we ask for SENSE bit */
-
-	if (ptr->mode == GPIO_MODE_INTERRUPT) {
-
-		REG_GET(int_status,
-			DC_HPD_SENSE_DELAYED, &hpd_delayed);
-
-		*value = hpd_delayed;
-		return GPIO_RESULT_OK;
-	}
-
-	/* in any other modes, operate as normal GPIO */
-
-	return dal_hw_gpio_get_value(ptr, value);
-}
-
-static enum gpio_result set_config(
-	struct hw_gpio_pin *ptr,
-	const struct gpio_config_data *config_data)
-{
-	struct hw_hpd *hpd = HW_HPD_FROM_BASE(ptr);
-
-	if (!config_data)
-		return GPIO_RESULT_INVALID_DATA;
-
-	REG_UPDATE_2(toggle_filt_cntl,
-		DC_HPD_CONNECT_INT_DELAY, config_data->config.hpd.delay_on_connect / 10,
-		DC_HPD_DISCONNECT_INT_DELAY, config_data->config.hpd.delay_on_disconnect / 10);
-
-	return GPIO_RESULT_OK;
-}
-
-static const struct hw_gpio_pin_funcs funcs = {
-	.destroy = destroy,
-	.open = dal_hw_gpio_open,
-	.get_value = get_value,
-	.set_value = dal_hw_gpio_set_value,
-	.set_config = set_config,
-	.change_mode = dal_hw_gpio_change_mode,
-	.close = dal_hw_gpio_close,
-};
-
-static bool construct(
-	struct hw_hpd *hpd,
-	enum gpio_id id,
-	uint32_t en,
-	struct dc_context *ctx)
-{
-	if (id != GPIO_ID_HPD) {
-		ASSERT_CRITICAL(false);
-		return false;
-	}
-
-	if ((en < GPIO_HPD_MIN) || (en > GPIO_HPD_MAX)) {
-		ASSERT_CRITICAL(false);
-		return false;
-	}
-
-	if (!dal_hw_hpd_construct(hpd, id, en, ctx)) {
-		ASSERT_CRITICAL(false);
-		return false;
-	}
-
-	hpd->base.base.funcs = &funcs;
-
-	hpd->regs = &hpd_regs[en];
-	hpd->shifts = &hpd_shift;
-	hpd->masks = &hpd_mask;
-
-	hpd->base.regs = &hpd_regs[en].gpio;
-
-	return true;
-}
-
-struct hw_gpio_pin *dal_hw_hpd_dce110_create(
-	struct dc_context *ctx,
-	enum gpio_id id,
-	uint32_t en)
-{
-	struct hw_hpd *hpd = dm_alloc(sizeof(struct hw_hpd));
-
-	if (!hpd) {
-		ASSERT_CRITICAL(false);
-		return NULL;
-	}
-
-	if (construct(hpd, id, en, ctx))
-		return &hpd->base.base;
-
-	ASSERT_CRITICAL(false);
-
-	dm_free(hpd);
-
-	return NULL;
-}
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h
deleted file mode 100644
index c351175..0000000
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_hpd_dce110.h
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_HW_HPD_DCE110_H__
-#define __DAL_HW_HPD_DCE110_H__
-
-struct hw_gpio_pin *dal_hw_hpd_dce110_create(
-	struct dc_context *ctx,
-	enum gpio_id id,
-	uint32_t en);
-
-#endif /*__DAL_HW_HPD_DCE110_H__*/
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
index 723b6c7..c4e0d44 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
@@ -38,6 +38,9 @@
 
 #include "../ddc_regs.h"
 
+ /* set field name */
+#define SF(reg_name, field_name, post_fix)\
+	.field_name = reg_name ## __ ## field_name ## post_fix
 
 #undef FN
 #define FN(reg_name, field_name) \
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c
index 0d64a80..79819c0 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_factory_dce80.c
@@ -23,40 +23,74 @@
  *
  */
 
-/*
- * Pre-requisites: headers required by header of this unit
- */
-
 #include "dm_services.h"
 #include "include/gpio_types.h"
 #include "../hw_factory.h"
 
-/*
- * Header of this unit
- */
-
 #include "hw_factory_dce80.h"
 
-/*
- * Post-requisites: headers required by this unit
- */
-
 #include "../hw_gpio.h"
 #include "../hw_ddc.h"
 #include "hw_ddc_dce80.h"
 #include "../hw_hpd.h"
-#include "hw_hpd_dce80.h"
 
-/*
- * This unit
- */
+#include "dce/dce_8_0_d.h"
+#include "dce/dce_8_0_sh_mask.h"
+
+#include "reg_helper.h"
+#include "../hpd_regs.h"
+
+#define HPD_REG_LIST_DCE8(id) \
+	HPD_GPIO_REG_LIST(id), \
+	.int_status = mmDC_HPD ## id ## _INT_STATUS,\
+	.toggle_filt_cntl = mmDC_HPD ## id ## _TOGGLE_FILT_CNTL
+
+#define HPD_MASK_SH_LIST_DCE8(mask_sh) \
+		.DC_HPD_SENSE_DELAYED = DC_HPD1_INT_STATUS__DC_HPD1_SENSE_DELAYED ## mask_sh,\
+		.DC_HPD_SENSE = DC_HPD1_INT_STATUS__DC_HPD1_SENSE ## mask_sh,\
+		.DC_HPD_CONNECT_INT_DELAY = DC_HPD1_TOGGLE_FILT_CNTL__DC_HPD1_CONNECT_INT_DELAY ## mask_sh,\
+		.DC_HPD_DISCONNECT_INT_DELAY = DC_HPD1_TOGGLE_FILT_CNTL__DC_HPD1_DISCONNECT_INT_DELAY ## mask_sh
+
+#define hpd_regs(id) \
+{\
+	HPD_REG_LIST_DCE8(id)\
+}
+
+static const struct hpd_registers hpd_regs[] = {
+	hpd_regs(1),
+	hpd_regs(2),
+	hpd_regs(3),
+	hpd_regs(4),
+	hpd_regs(5),
+	hpd_regs(6)
+};
+
+static const struct hpd_sh_mask hpd_shift = {
+		HPD_MASK_SH_LIST_DCE8(__SHIFT)
+};
+
+static const struct hpd_sh_mask hpd_mask = {
+		HPD_MASK_SH_LIST_DCE8(_MASK)
+};
+
+static void define_hpd_registers(struct hw_gpio_pin *pin, uint32_t en)
+{
+	struct hw_hpd *hpd = HW_HPD_FROM_BASE(pin);
+
+	hpd->regs = &hpd_regs[en];
+	hpd->shifts = &hpd_shift;
+	hpd->masks = &hpd_mask;
+	hpd->base.regs = &hpd_regs[en].gpio;
+}
+
 static const struct hw_factory_funcs funcs = {
 	.create_ddc_data = dal_hw_ddc_dce80_create,
 	.create_ddc_clock = dal_hw_ddc_dce80_create,
 	.create_generic = NULL,
-	.create_hpd = dal_hw_hpd_dce80_create,
+	.create_hpd = dal_hw_hpd_create,
 	.create_sync = NULL,
 	.create_gsl = NULL,
+	.define_hpd_registers = define_hpd_registers
 };
 
 void dal_hw_factory_dce80_init(
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c
deleted file mode 100644
index 462acf2..0000000
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.c
+++ /dev/null
@@ -1,199 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#include "dm_services.h"
-
-#include "include/gpio_types.h"
-#include "../hw_gpio.h"
-#include "../hw_hpd.h"
-
-#include "hw_hpd_dce80.h"
-
-#include "dce/dce_8_0_d.h"
-#include "dce/dce_8_0_sh_mask.h"
-
-#include "reg_helper.h"
-#include "../hpd_regs.h"
-
-#undef FN
-#define FN(reg_name, field_name) \
-	hpd->shifts->field_name, hpd->masks->field_name
-
-#define CTX \
-	hpd->base.base.ctx
-#define REG(reg)\
-	(hpd->regs->reg)
-
-#define HPD_REG_LIST_DCE8(id) \
-	HPD_GPIO_REG_LIST(id), \
-	.int_status = mmDC_HPD ## id ## _INT_STATUS,\
-	.toggle_filt_cntl = mmDC_HPD ## id ## _TOGGLE_FILT_CNTL
-
-#define HPD_MASK_SH_LIST_DCE8(mask_sh) \
-		.DC_HPD_SENSE_DELAYED = DC_HPD1_INT_STATUS__DC_HPD1_SENSE_DELAYED ## mask_sh,\
-		.DC_HPD_SENSE = DC_HPD1_INT_STATUS__DC_HPD1_SENSE ## mask_sh,\
-		.DC_HPD_CONNECT_INT_DELAY = DC_HPD1_TOGGLE_FILT_CNTL__DC_HPD1_CONNECT_INT_DELAY ## mask_sh,\
-		.DC_HPD_DISCONNECT_INT_DELAY = DC_HPD1_TOGGLE_FILT_CNTL__DC_HPD1_DISCONNECT_INT_DELAY ## mask_sh
-
-#define hpd_regs(id) \
-{\
-	HPD_REG_LIST_DCE8(id)\
-}
-
-static const struct hpd_registers hpd_regs[] = {
-	hpd_regs(1),
-	hpd_regs(2),
-	hpd_regs(3),
-	hpd_regs(4),
-	hpd_regs(5),
-	hpd_regs(6)
-};
-
-static const struct hpd_sh_mask hpd_shift = {
-		HPD_MASK_SH_LIST_DCE8(__SHIFT)
-};
-
-static const struct hpd_sh_mask hpd_mask = {
-		HPD_MASK_SH_LIST_DCE8(_MASK)
-};
-
-static void destruct(
-	struct hw_hpd *hpd)
-{
-	dal_hw_hpd_destruct(hpd);
-}
-
-static void destroy(
-	struct hw_gpio_pin **ptr)
-{
-	struct hw_hpd *hpd = HW_HPD_FROM_BASE(*ptr);
-
-	destruct(hpd);
-	dm_free(hpd);
-	*ptr = NULL;
-}
-
-static enum gpio_result get_value(
-	const struct hw_gpio_pin *ptr,
-	uint32_t *value)
-{
-	struct hw_hpd *hpd = HW_HPD_FROM_BASE(ptr);
-	uint32_t hpd_delayed = 0;
-
-	/* in Interrupt mode we ask for SENSE bit */
-
-	if (ptr->mode == GPIO_MODE_INTERRUPT) {
-
-		REG_GET(int_status,
-			DC_HPD_SENSE_DELAYED, &hpd_delayed);
-
-		*value = hpd_delayed;
-		return GPIO_RESULT_OK;
-	}
-
-	/* in any other modes, operate as normal GPIO */
-
-	return dal_hw_gpio_get_value(ptr, value);
-}
-
-static enum gpio_result set_config(
-	struct hw_gpio_pin *ptr,
-	const struct gpio_config_data *config_data)
-{
-	struct hw_hpd *hpd = HW_HPD_FROM_BASE(ptr);
-
-	if (!config_data)
-		return GPIO_RESULT_INVALID_DATA;
-
-	REG_UPDATE_2(toggle_filt_cntl,
-		DC_HPD_CONNECT_INT_DELAY, config_data->config.hpd.delay_on_connect / 10,
-		DC_HPD_DISCONNECT_INT_DELAY, config_data->config.hpd.delay_on_disconnect / 10);
-
-	return GPIO_RESULT_OK;
-}
-
-static const struct hw_gpio_pin_funcs funcs = {
-	.destroy = destroy,
-	.open = dal_hw_gpio_open,
-	.get_value = get_value,
-	.set_value = dal_hw_gpio_set_value,
-	.set_config = set_config,
-	.change_mode = dal_hw_gpio_change_mode,
-	.close = dal_hw_gpio_close,
-};
-
-static bool construct(
-	struct hw_hpd *hpd,
-	enum gpio_id id,
-	uint32_t en,
-	struct dc_context *ctx)
-{
-	if (id != GPIO_ID_HPD) {
-		BREAK_TO_DEBUGGER();
-		return false;
-	}
-
-	if ((en < GPIO_HPD_MIN) || (en > GPIO_HPD_MAX)) {
-		BREAK_TO_DEBUGGER();
-		return false;
-	}
-
-	if (!dal_hw_hpd_construct(hpd, id, en, ctx)) {
-		BREAK_TO_DEBUGGER();
-		return false;
-	}
-
-	hpd->base.base.funcs = &funcs;
-
-	hpd->regs = &hpd_regs[en];
-	hpd->shifts = &hpd_shift;
-	hpd->masks = &hpd_mask;
-
-	hpd->base.regs = &hpd_regs[en].gpio;
-
-	return true;
-}
-
-struct hw_gpio_pin *dal_hw_hpd_dce80_create(
-	struct dc_context *ctx,
-	enum gpio_id id,
-	uint32_t en)
-{
-	struct hw_hpd *hpd = dm_alloc(sizeof(struct hw_hpd));
-
-	if (!hpd) {
-		BREAK_TO_DEBUGGER();
-		return NULL;
-	}
-
-	if (construct(hpd, id, en, ctx))
-		return &hpd->base.base;
-
-	BREAK_TO_DEBUGGER();
-
-	dm_free(hpd);
-
-	return NULL;
-}
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.h b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.h
deleted file mode 100644
index d74dbec..0000000
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_hpd_dce80.h
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright 2012-15 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_HW_HPD_DCE80_H__
-#define __DAL_HW_HPD_DCE80_H__
-
-struct hw_hpd_dce80_addr {
-	uint32_t DC_HPD_INT_STATUS;
-	uint32_t DC_HPD_TOGGLE_FILT_CNTL;
-};
-
-struct hw_hpd_dce80 {
-	struct hw_hpd base;
-	struct hw_hpd_dce80_addr addr;
-};
-
-struct hw_gpio_pin *dal_hw_hpd_dce80_create(
-	struct dc_context *ctx,
-	enum gpio_id id,
-	uint32_t en);
-
-#endif
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/ddc_regs.h b/drivers/gpu/drm/amd/dal/dc/gpio/ddc_regs.h
index d24c5f0..656e8f5 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/ddc_regs.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/ddc_regs.h
@@ -82,10 +82,6 @@
 	DDC_GPIO_I2C_REG_LIST(cd),\
 	.ddc_setup = 0
 
- /* set field name */
-#define SF(reg_name, field_name, post_fix)\
-	.field_name = reg_name ## __ ## field_name ## post_fix
-
 #define DDC_MASK_SH_LIST(mask_sh) \
 		SF(DC_I2C_DDC1_SETUP, DC_I2C_DDC1_ENABLE, mask_sh),\
 		SF(DC_I2C_DDC1_SETUP, DC_I2C_DDC1_EDID_DETECT_ENABLE, mask_sh),\
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.c b/drivers/gpu/drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.c
deleted file mode 100644
index bdb31b9..0000000
--- a/drivers/gpu/drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.c
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Copyright 2012-16 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#include "dm_services.h"
-
-/*
- * Pre-requisites: headers required by header of this unit
- */
-#include "include/gpio_types.h"
-#include "../hw_gpio.h"
-#include "../hw_hpd.h"
-
-static void destruct(
-	struct hw_hpd *pin)
-{
-	dal_hw_hpd_destruct(pin);
-}
-
-static void destroy(
-	struct hw_gpio_pin **ptr)
-{
-	struct hw_hpd *pin = HW_HPD_FROM_BASE(*ptr);
-
-	destruct(pin);
-
-	dm_free(pin);
-
-	*ptr = NULL;
-}
-
-static const struct hw_gpio_pin_funcs funcs = {
-	.destroy = destroy,
-	.open = NULL,
-	.get_value = NULL,
-	.set_value = NULL,
-	.set_config = NULL,
-	.change_mode = NULL,
-	.close = NULL,
-};
-
-static bool construct(
-	struct hw_hpd *pin,
-	enum gpio_id id,
-	uint32_t en,
-	struct dc_context *ctx)
-{
-	if (!dal_hw_hpd_construct(pin, id, en, ctx)) {
-		ASSERT_CRITICAL(false);
-		return false;
-	}
-
-	pin->base.base.funcs = &funcs;
-
-	return true;
-}
-
-struct hw_gpio_pin *dal_hw_hpd_diag_fpga_create(
-	struct dc_context *ctx,
-	enum gpio_id id,
-	uint32_t en)
-{
-	struct hw_hpd *pin = dm_alloc(sizeof(struct hw_hpd));
-
-	if (!pin) {
-		ASSERT_CRITICAL(false);
-		return NULL;
-	}
-
-	if (construct(pin, id, en, ctx))
-		return &pin->base.base;
-
-	ASSERT_CRITICAL(false);
-
-	dm_free(pin);
-
-	return NULL;
-}
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.h b/drivers/gpu/drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.h
deleted file mode 100644
index aa9cd54..0000000
--- a/drivers/gpu/drm/amd/dal/dc/gpio/diagnostics/hw_hpd_diag.h
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright 2012-16 Advanced Micro Devices, Inc.
- *
- * Permission is hereby granted, free of charge, to any person obtaining a
- * copy of this software and associated documentation files (the "Software"),
- * to deal in the Software without restriction, including without limitation
- * the rights to use, copy, modify, merge, publish, distribute, sublicense,
- * and/or sell copies of the Software, and to permit persons to whom the
- * Software is furnished to do so, subject to the following conditions:
- *
- * The above copyright notice and this permission notice shall be included in
- * all copies or substantial portions of the Software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
- * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
- * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
- * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
- * OTHER DEALINGS IN THE SOFTWARE.
- *
- * Authors: AMD
- *
- */
-
-#ifndef __DAL_HW_HPD_DIAG_FPGA_H__
-#define __DAL_HW_HPD_DIAG_FPGA_H__
-
-struct hw_gpio_pin *dal_hw_hpd_diag_fpga_create(
-	struct dc_context *ctx,
-	enum gpio_id id,
-	uint32_t en);
-
-#endif /*__DAL_HW_HPD_DIAG_FPGA_H__*/
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c b/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c
index 7320a6b..01fdc1c 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/gpio_service.c
@@ -257,6 +257,7 @@ enum gpio_result dal_gpio_service_open(
 	case GPIO_ID_HPD:
 		pin = service->factory.funcs->create_hpd(
 			service->ctx, id, en);
+		service->factory.funcs->define_hpd_registers(pin, en);
 	break;
 	case GPIO_ID_SYNC:
 		pin = service->factory.funcs->create_sync(
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h b/drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h
index 9845fba..6d7851e 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/hw_factory.h
@@ -27,6 +27,7 @@
 #define __DAL_HW_FACTORY_H__
 
 struct hw_gpio_pin;
+struct hw_hpd;
 
 struct hw_factory {
 	uint32_t number_of_pins[GPIO_ID_COUNT];
@@ -56,6 +57,9 @@ struct hw_factory {
 			struct dc_context *ctx,
 			enum gpio_id id,
 			uint32_t en);
+		void (*define_hpd_registers)(
+				struct hw_gpio_pin *pin,
+				uint32_t en);
 	} *funcs;
 };
 
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.c b/drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.c
index ed0f076..9634e88 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.c
@@ -30,9 +30,18 @@
 #include "hw_hpd.h"
 
 #include "reg_helper.h"
-#include "gpio_regs.h"
+#include "hpd_regs.h"
 
-bool dal_hw_hpd_construct(
+#undef FN
+#define FN(reg_name, field_name) \
+	hpd->shifts->field_name, hpd->masks->field_name
+
+#define CTX \
+	hpd->base.base.ctx
+#define REG(reg)\
+	(hpd->regs->reg)
+
+static bool dal_hw_hpd_construct(
 	struct hw_hpd *pin,
 	enum gpio_id id,
 	uint32_t en,
@@ -43,8 +52,124 @@ bool dal_hw_hpd_construct(
 	return true;
 }
 
-void dal_hw_hpd_destruct(
+static void dal_hw_hpd_destruct(
 	struct hw_hpd *pin)
 {
 	dal_hw_gpio_destruct(&pin->base);
 }
+
+
+static void destruct(
+	struct hw_hpd *hpd)
+{
+	dal_hw_hpd_destruct(hpd);
+}
+
+static void destroy(
+	struct hw_gpio_pin **ptr)
+{
+	struct hw_hpd *hpd = HW_HPD_FROM_BASE(*ptr);
+
+	destruct(hpd);
+
+	dm_free(hpd);
+
+	*ptr = NULL;
+}
+
+static enum gpio_result get_value(
+	const struct hw_gpio_pin *ptr,
+	uint32_t *value)
+{
+	struct hw_hpd *hpd = HW_HPD_FROM_BASE(ptr);
+	uint32_t hpd_delayed = 0;
+
+	/* in Interrupt mode we ask for SENSE bit */
+
+	if (ptr->mode == GPIO_MODE_INTERRUPT) {
+
+		REG_GET(int_status,
+			DC_HPD_SENSE_DELAYED, &hpd_delayed);
+
+		*value = hpd_delayed;
+		return GPIO_RESULT_OK;
+	}
+
+	/* in any other modes, operate as normal GPIO */
+
+	return dal_hw_gpio_get_value(ptr, value);
+}
+
+static enum gpio_result set_config(
+	struct hw_gpio_pin *ptr,
+	const struct gpio_config_data *config_data)
+{
+	struct hw_hpd *hpd = HW_HPD_FROM_BASE(ptr);
+
+	if (!config_data)
+		return GPIO_RESULT_INVALID_DATA;
+
+	REG_UPDATE_2(toggle_filt_cntl,
+		DC_HPD_CONNECT_INT_DELAY, config_data->config.hpd.delay_on_connect / 10,
+		DC_HPD_DISCONNECT_INT_DELAY, config_data->config.hpd.delay_on_disconnect / 10);
+
+	return GPIO_RESULT_OK;
+}
+
+static const struct hw_gpio_pin_funcs funcs = {
+	.destroy = destroy,
+	.open = dal_hw_gpio_open,
+	.get_value = get_value,
+	.set_value = dal_hw_gpio_set_value,
+	.set_config = set_config,
+	.change_mode = dal_hw_gpio_change_mode,
+	.close = dal_hw_gpio_close,
+};
+
+static bool construct(
+	struct hw_hpd *hpd,
+	enum gpio_id id,
+	uint32_t en,
+	struct dc_context *ctx)
+{
+	if (id != GPIO_ID_HPD) {
+		ASSERT_CRITICAL(false);
+		return false;
+	}
+
+	if ((en < GPIO_HPD_MIN) || (en > GPIO_HPD_MAX)) {
+		ASSERT_CRITICAL(false);
+		return false;
+	}
+
+	if (!dal_hw_hpd_construct(hpd, id, en, ctx)) {
+		ASSERT_CRITICAL(false);
+		return false;
+	}
+
+	hpd->base.base.funcs = &funcs;
+
+	return true;
+}
+
+struct hw_gpio_pin *dal_hw_hpd_create(
+	struct dc_context *ctx,
+	enum gpio_id id,
+	uint32_t en)
+{
+	struct hw_hpd *hpd = dm_alloc(sizeof(struct hw_hpd));
+
+	if (!hpd) {
+		ASSERT_CRITICAL(false);
+		return NULL;
+	}
+
+	if (construct(hpd, id, en, ctx))
+		return &hpd->base.base;
+
+	ASSERT_CRITICAL(false);
+
+	dm_free(hpd);
+
+	return NULL;
+}
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.h b/drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.h
index 3abb537..4ab7a20 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/hw_hpd.h
@@ -38,13 +38,9 @@ struct hw_hpd {
 #define HW_HPD_FROM_BASE(hw_gpio) \
 	container_of((HW_GPIO_FROM_BASE(hw_gpio)), struct hw_hpd, base)
 
-bool dal_hw_hpd_construct(
-	struct hw_hpd *pin,
+struct hw_gpio_pin *dal_hw_hpd_create(
+	struct dc_context *ctx,
 	enum gpio_id id,
-	uint32_t en,
-	struct dc_context *ctx);
-
-void dal_hw_hpd_destruct(
-	struct hw_hpd *pin);
+	uint32_t en);
 
 #endif
-- 
2.7.4

