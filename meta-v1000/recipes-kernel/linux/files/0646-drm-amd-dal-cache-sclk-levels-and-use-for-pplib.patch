From 17bb96922656c98c522c0c5c7b010ab8083f96ef Mon Sep 17 00:00:00 2001
From: Eric Yang <eric.yang2@amd.com>
Date: Wed, 13 Jul 2016 17:52:17 -0400
Subject: [PATCH 0646/1722] drm/amd/dal: cache sclk levels and use for pplib

Signed-off-by: Eric Yang <eric.yang2@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc.c               | 23 +++++++++++++++++++++-
 .../gpu/drm/amd/dal/dc/dce110/dce110_resource.c    |  2 +-
 drivers/gpu/drm/amd/dal/dc/inc/core_dc.h           |  3 +++
 3 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index 7df5af1..5fb62a13 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -708,6 +708,24 @@ static uint32_t get_min_vblank_time_us(const struct validate_context *context)
 	return min_vertical_blank_time;
 }
 
+static int determine_sclk_from_bounding_box(
+		const struct core_dc *dc,
+		int required_sclk)
+{
+	int i;
+
+	for (i = 0; i < dc->sclk_lvls.num_levels; i++) {
+		if (dc->sclk_lvls.clocks_in_khz[i] >= required_sclk)
+			return dc->sclk_lvls.clocks_in_khz[i];
+	}
+	/*
+	 * even maximum level could not satisfy requirement, this
+	 * is unexpected at this stage, should have been caught at
+	 * validation time
+	 */
+	ASSERT(0);
+	return dc->sclk_lvls.clocks_in_khz[dc->sclk_lvls.num_levels - 1];
+}
 void pplib_apply_display_requirements(
 	const struct core_dc *dc,
 	const struct validate_context *context,
@@ -727,7 +745,10 @@ void pplib_apply_display_requirements(
 	pp_display_cfg->min_memory_clock_khz = context->bw_results.required_yclk
 		/ MEMORY_TYPE_MULTIPLIER;
 
-	pp_display_cfg->min_engine_clock_khz = context->bw_results.required_sclk;
+	pp_display_cfg->min_engine_clock_khz = determine_sclk_from_bounding_box(
+			dc,
+			context->bw_results.required_sclk);
+
 	pp_display_cfg->min_engine_clock_deep_sleep_khz
 			= context->bw_results.required_sclk_deep_sleep;
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
index 21dd285..e1c204a 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
@@ -1038,13 +1038,13 @@ static void bw_calcs_data_update_from_pplib(struct core_dc *dc)
 			clks.clocks_in_khz[clks.num_levels>>1], 1000);
 	dc->bw_vbios.low_sclk  = bw_frc_to_fixed(
 			clks.clocks_in_khz[0], 1000);
+	dc->sclk_lvls = clks;
 
 	/*do display clock*/
 	dm_pp_get_clock_levels_by_type(
 			dc->ctx,
 			DM_PP_CLOCK_TYPE_DISPLAY_CLK,
 			&clks);
-
 	dc->bw_vbios.high_voltage_max_dispclk = bw_frc_to_fixed(
 			clks.clocks_in_khz[clks.num_levels-1], 1000);
 	dc->bw_vbios.mid_voltage_max_dispclk  = bw_frc_to_fixed(
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/core_dc.h b/drivers/gpu/drm/amd/dal/dc/inc/core_dc.h
index f0c5a54..813e05a 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/core_dc.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/core_dc.h
@@ -29,6 +29,9 @@ struct core_dc {
 	enum dc_video_power_state previous_power_state;
 	enum dc_video_power_state current_power_state;
 
+	/* Display Engine Clock levels */
+	struct dm_pp_clock_levels sclk_lvls;
+
 	/* Inputs into BW and WM calculations. */
 	struct bw_calcs_dceip bw_dceip;
 	struct bw_calcs_vbios bw_vbios;
-- 
2.7.4

