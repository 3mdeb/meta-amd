From ee86454ba75c9562ed86eebfc3b65ddfcd1b4fcf Mon Sep 17 00:00:00 2001
From: David Ogbeide <Davidboyowa.Ogbeide@amd.com>
Date: Mon, 31 Aug 2015 10:33:24 -0400
Subject: [PATCH 1703/2094] drm/radeon: promote priority of gfxv7 queues

-When compute load is high, gfx operations are starved
of access to compute units.

-Change SPI_ARB_PRIORITY PIPE_ORDER_TS reg fields from
00: CS_H HP3D, CS_M, GFX, CS_L to
03: HP3D, GFX, CS_H, CS_M, CS_L

-All 46/46 OpenCL tests passed 100%

BUG: KFD-15

Signed-off-by: David Ogbeide <davidboyowa.ogbeide@amd.com>
Reviewed-by: Adrian Edwards <adrian.edwards@amd.com>
Reviewed-by: Bala Kumar <bala.kumar@amd.com>
---
 drivers/gpu/drm/radeon/cik.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/drivers/gpu/drm/radeon/cik.c b/drivers/gpu/drm/radeon/cik.c
index a8e535d..36f92c3 100644
--- a/drivers/gpu/drm/radeon/cik.c
+++ b/drivers/gpu/drm/radeon/cik.c
@@ -3187,6 +3187,8 @@ static void cik_gpu_init(struct radeon_device *rdev)
 	u32 hdp_host_path_cntl;
 	u32 tmp;
 	int i, j;
+	/* will store the value of SPI_ARB_PRIORITY register */
+	uint32_t spi_regval;
 
 	switch (rdev->family) {
 	case CHIP_BONAIRE:
@@ -3452,6 +3454,18 @@ static void cik_gpu_init(struct radeon_device *rdev)
 	WREG32(PA_SC_ENHANCE, ENABLE_PA_SC_OUT_OF_ORDER);
 	mutex_unlock(&rdev->grbm_idx_mutex);
 
+	/* get the register's current value */
+	spi_regval = RREG32(mmSPI_ARB_PRIORITY);
+
+	/* prepare PIPE_ORDER_TS fields (does NOT write to register) */
+	spi_regval = REG_SET_FIELD(spi_regval, SPI_ARB_PRIORITY, PIPE_ORDER_TS0, 3);
+	spi_regval = REG_SET_FIELD(spi_regval, SPI_ARB_PRIORITY, PIPE_ORDER_TS1, 3);
+	spi_regval = REG_SET_FIELD(spi_regval, SPI_ARB_PRIORITY, PIPE_ORDER_TS2, 3);
+	spi_regval = REG_SET_FIELD(spi_regval, SPI_ARB_PRIORITY, PIPE_ORDER_TS3, 3);
+
+	/* write out the new value to the actual register*/
+	WREG32(mmSPI_ARB_PRIORITY, spi_regval);
+
 	udelay(50);
 }
 
-- 
2.7.4

