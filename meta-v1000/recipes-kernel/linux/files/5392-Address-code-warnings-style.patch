From 64ad1471f8acbac69cd9cd3f7dc8ce53c2e57b79 Mon Sep 17 00:00:00 2001
From: Kent Russell <kent.russell@amd.com>
Date: Mon, 26 Jun 2017 08:34:02 -0400
Subject: [PATCH 5392/5855] Address code warnings/style

With Jenkins not properly performing checkpatch, a couple things got
through. Clean those up

Change-Id: Iddd0033bf17f9a905004ba2fe9183b4e8fe31d8b
Signed-off-by: Kent Russell <kent.russell@amd.com>

 Conflicts:
	drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.c
---
 drivers/gpu/drm/amd/amdkfd/kfd_dbgdev.c               | 9 ++++++---
 drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c | 6 ++++--
 2 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_dbgdev.c b/drivers/gpu/drm/amd/amdkfd/kfd_dbgdev.c
index 8acdfcd..bf390b3 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_dbgdev.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_dbgdev.c
@@ -662,7 +662,8 @@ static int dbgdev_wave_control_diq(struct kfd_dbgdev *dbgdev,
 	pr_debug("\t\t mode      is: %u\n", wac_info->mode);
 	pr_debug("\t\t operand   is: %u\n", wac_info->operand);
 	pr_debug("\t\t trap id   is: %u\n", wac_info->trapId);
-	pr_debug("\t\t msg value is: %u\n", wac_info->dbgWave_msg.DbgWaveMsg.WaveMsgInfoGen2.Value);
+	pr_debug("\t\t msg value is: %u\n",
+			wac_info->dbgWave_msg.DbgWaveMsg.WaveMsgInfoGen2.Value);
 	pr_debug("\t\t vmid      is: N/A\n");
 
 	pr_debug("\t\t chk_vmid  is : %u\n", reg_sq_cmd.bitfields.check_vmid);
@@ -769,7 +770,8 @@ static int dbgdev_wave_control_nodiq(struct kfd_dbgdev *dbgdev,
 			vmid = pdd->qpd.vmid;
 			reg_sq_cmd.bits.vm_id = vmid;
 
-			pr_debug("\t\t %30s\n", "* * * * * * * * * * * * * * * * * *");
+			pr_debug("\t\t %30s\n",
+					"* * * * * * * * * * * * * * * * * *");
 
 			pr_debug("\t\t mode      is: %u\n", wac_info->mode);
 			pr_debug("\t\t operand   is: %u\n", wac_info->operand);
@@ -806,7 +808,8 @@ static int dbgdev_wave_control_nodiq(struct kfd_dbgdev *dbgdev,
 			pr_debug("\t\t sbw       is : %u\n",
 					reg_gfx_index.bitfields.sh_broadcast_writes);
 
-			pr_debug("\t\t %30s\n", "* * * * * * * * * * * * * * * * * *");
+			pr_debug("\t\t %30s\n",
+					"* * * * * * * * * * * * * * * * * *");
 
 			dbgdev->dev->kfd2kgd
 				->wave_control_execute(dbgdev->dev->kgd,
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c b/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c
index 87e75347..b41d0ab 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c
@@ -305,7 +305,8 @@ static int allocate_hqd(struct device_queue_manager *dqm, struct queue *q)
 	int pipe, bit, i;
 
 	set = false;
-	for (pipe = dqm->next_pipe_to_allocate, i = 0; i < get_pipes_per_mec(dqm);
+        for (pipe = dqm->next_pipe_to_allocate, i = 0;
+                        i < get_pipes_per_mec(dqm);
                         pipe = ((pipe + 1) % get_pipes_per_mec(dqm)), ++i) {
 
 		if (!is_pipe_enabled(dqm, 0, pipe))
@@ -907,7 +908,8 @@ static int set_sched_resources(struct device_queue_manager *dqm)
 
 		/* This situation may be hit in the future if a new HW
 		 * generation exposes more than 64 queues. If so, the
-		 * definition of res.queue_mask needs updating */
+		 * definition of res.queue_mask needs updating
+		 */
 		if (WARN_ON(i >= (sizeof(res.queue_mask)*8))) {
 			pr_err("Invalid queue enabled by amdgpu: %d\n", i);
 			break;
-- 
2.7.4

