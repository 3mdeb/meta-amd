From b03c28a95a22e93af85c4dd4d467a2337f12f22b Mon Sep 17 00:00:00 2001
From: Michael Powell <michael_powell@mentor.com>
Date: Thu, 9 Feb 2017 08:47:21 -0700
Subject: [PATCH] codexl: output versioned libs

---
 .../GpuDebugging/AMDTApiFunctions/SConscript       |  9 ++++--
 .../GpuDebugging/AMDTProcessDebugger/SConscript    |  9 ++++--
 .../GpuProfiling/Backend/CLOccupancyAgent/makefile |  3 +-
 .../GpuProfiling/Backend/CLProfileAgent/makefile   |  3 +-
 .../GpuProfiling/Backend/CLTraceAgent/makefile     |  3 +-
 .../Backend/PreloadXInitThreads/makefile           |  3 +-
 CodeXL/Components/GpuProfiling/Build/Common.mk     |  5 +++-
 .../Components/GpuProfiling/Build/backend_build.sh | 40 +++++++++++-----------
 .../Graphics/Server/VulkanEnv/SConscript           |  9 ++++--
 .../Graphics/Server/VulkanServer/SConscript        | 15 ++++++----
 .../Backend/AMDTPowerProfileAPI/SConscript         | 14 ++++++----
 CodeXL/Remote/AMDTRemoteClient/SConscript          |  9 ++++--
 Common/Src/AMDTAPIClasses/SConscript               | 12 +++++---
 Common/Src/AMDTActivityLogger/SConscript           |  9 ++++--
 Common/Src/AMDTBaseTools/SConscript                | 12 +++++---
 Common/Src/AMDTOSAPIWrappers/SConscript            | 12 +++++---
 Common/Src/AMDTOSWrappers/SConscript               | 12 +++++---
 17 files changed, 112 insertions(+), 67 deletions(-)

diff --git a/CodeXL/Components/GpuDebugging/AMDTApiFunctions/SConscript b/CodeXL/Components/GpuDebugging/AMDTApiFunctions/SConscript
index 8cb527c..d55deb6 100755
--- a/CodeXL/Components/GpuDebugging/AMDTApiFunctions/SConscript
+++ b/CodeXL/Components/GpuDebugging/AMDTApiFunctions/SConscript
@@ -5,6 +5,7 @@ from CXL_init import *
 Import('*')
 
 libName = "CXLApiFunctions"
+version = "1"
 
 env = CXL_env.Clone()
 env.Append( CPPPATH = [ 
@@ -47,11 +48,13 @@ objFiles = env.SharedObject(sources)
 # Creating shared libraries
 soFiles = env.SharedLibrary(
 	target = libName, 
-	source = objFiles)
+	source = objFiles,
+	SHLIBVERSION = version)
 
 # Installing libraries
-libInstall = env.Install( 
+libInstall = env.InstallVersionedLib( 
 	dir = env['CXL_lib_dir'], 
-	source = (soFiles))
+	source = (soFiles),
+	SHLIBVERSION = version)
 
 Return('libInstall')
diff --git a/CodeXL/Components/GpuDebugging/AMDTProcessDebugger/SConscript b/CodeXL/Components/GpuDebugging/AMDTProcessDebugger/SConscript
index 9b0a9a5..5cc386c 100755
--- a/CodeXL/Components/GpuDebugging/AMDTProcessDebugger/SConscript
+++ b/CodeXL/Components/GpuDebugging/AMDTProcessDebugger/SConscript
@@ -5,6 +5,7 @@ from CXL_init import *
 Import('*')
 
 libName = "CXLProcessDebugger"
+version = "1"
 
 env = CXL_env.Clone()
 env.Append( CPPPATH = [ 
@@ -53,11 +54,13 @@ objFiles = env.SharedObject(sources)
 # Creating shared libraries
 soFiles = env.SharedLibrary(
 	target = libName, 
-	source = objFiles)
+	source = objFiles,
+	SHLIBVERSION = version)
 
 # Installing libraries
-libInstall = env.Install( 
+libInstall = env.InstallVersionedLib( 
 	dir = env['CXL_lib_dir'], 
-	source = (soFiles))
+	source = (soFiles),
+	SHLIBVERSION = version)
 
 Return('libInstall')
diff --git a/CodeXL/Components/GpuProfiling/Backend/CLOccupancyAgent/makefile b/CodeXL/Components/GpuProfiling/Backend/CLOccupancyAgent/makefile
index f3e40b3..3e38f12 100755
--- a/CodeXL/Components/GpuProfiling/Backend/CLOccupancyAgent/makefile
+++ b/CodeXL/Components/GpuProfiling/Backend/CLOccupancyAgent/makefile
@@ -3,7 +3,8 @@
 DEPTH = ../..
 include $(DEPTH)/Build/Common.mk
 
-TARGETSO = $(BACKEND_OUTPUT_DIR)/lib$(GPU_PROFILER_LIB_PREFIX)CLOccupancyAgent$(TARGET_SUFFIX).so
+TARGETSONAME = lib$(GPU_PROFILER_LIB_PREFIX)CLOccupancyAgent$(TARGET_SUFFIX).so.$(VERSION)
+TARGETSO = $(BACKEND_OUTPUT_DIR)/$(TARGETSONAME)
 
 INCLUDES = \
 	-I. \
diff --git a/CodeXL/Components/GpuProfiling/Backend/CLProfileAgent/makefile b/CodeXL/Components/GpuProfiling/Backend/CLProfileAgent/makefile
index 814301a..70167b5 100755
--- a/CodeXL/Components/GpuProfiling/Backend/CLProfileAgent/makefile
+++ b/CodeXL/Components/GpuProfiling/Backend/CLProfileAgent/makefile
@@ -3,7 +3,8 @@
 DEPTH = ../..
 include $(DEPTH)/Build/Common.mk
 
-TARGETSO = $(BACKEND_OUTPUT_DIR)/lib$(GPU_PROFILER_LIB_PREFIX)CLProfileAgent$(TARGET_SUFFIX).so
+TARGETSONAME = lib$(GPU_PROFILER_LIB_PREFIX)CLProfileAgent$(TARGET_SUFFIX).so.$(VERSION)
+TARGETSO = $(BACKEND_OUTPUT_DIR)/$(TARGETSONAME)
 STREAM_SDK_LIB = -L$(ATI_STREAM_SDK_DIR)/lib/x86_64
 
 INCLUDES = \
diff --git a/CodeXL/Components/GpuProfiling/Backend/CLTraceAgent/makefile b/CodeXL/Components/GpuProfiling/Backend/CLTraceAgent/makefile
index 9e1e5d3..06c907c 100755
--- a/CodeXL/Components/GpuProfiling/Backend/CLTraceAgent/makefile
+++ b/CodeXL/Components/GpuProfiling/Backend/CLTraceAgent/makefile
@@ -3,7 +3,8 @@
 DEPTH = ../..
 include $(DEPTH)/Build/Common.mk
 
-TARGETSO = $(BACKEND_OUTPUT_DIR)/lib$(GPU_PROFILER_LIB_PREFIX)CLTraceAgent$(TARGET_SUFFIX).so
+TARGETSONAME = lib$(GPU_PROFILER_LIB_PREFIX)CLTraceAgent$(TARGET_SUFFIX).so.$(VERSION)
+TARGETSO = $(BACKEND_OUTPUT_DIR)/$(TARGETSONAME)
 
 ADDL_DEFINES = -DNON_BLOCKING_TIMEOUT
 
diff --git a/CodeXL/Components/GpuProfiling/Backend/PreloadXInitThreads/makefile b/CodeXL/Components/GpuProfiling/Backend/PreloadXInitThreads/makefile
index aa41d13..af125b5 100755
--- a/CodeXL/Components/GpuProfiling/Backend/PreloadXInitThreads/makefile
+++ b/CodeXL/Components/GpuProfiling/Backend/PreloadXInitThreads/makefile
@@ -5,7 +5,8 @@ include $(DEPTH)/Build/Common.mk
 
 # make sure CallXInitThreads gets called during initialization
 ADDL_LINKFLAGS = -Wl,-init,CallXInitThreads
-TARGETSO = $(BACKEND_OUTPUT_DIR)/lib$(GPU_PROFILER_LIB_PREFIX)PreloadXInitThreads$(TARGET_SUFFIX).so
+TARGETSONAME = lib$(GPU_PROFILER_LIB_PREFIX)PreloadXInitThreads$(TARGET_SUFFIX).so.$(VERSION)
+TARGETSO = $(BACKEND_OUTPUT_DIR)/$(TARGETSONAME)
 
 INCLUDES = \
 	-I. \
diff --git a/CodeXL/Components/GpuProfiling/Build/Common.mk b/CodeXL/Components/GpuProfiling/Build/Common.mk
index aaeeb39..de7a855 100755
--- a/CodeXL/Components/GpuProfiling/Build/Common.mk
+++ b/CodeXL/Components/GpuProfiling/Build/Common.mk
@@ -1,9 +1,12 @@
 CC = $(CXX)
+MAJOR := 1
+MINOR := 0
+VERSION := $(MAJOR)
 OPTIMIZE = -O3 -DNDEBUG
 DEBUG_CFLAGS = -g -O0 -D_DEBUG
 ADDL_LINKFLAGS = $(LDFLAGS)
 LINKFLAGS_EXE = $(ADDL_LINKFLAGS)
-LINKFLAGS_SO = -shared -Wl,-z,defs $(ADDL_LINKFLAGS)
+LINKFLAGS_SO = -shared -Wl,-z,defs -Wl,-soname,$(TARGETSONAME) $(ADDL_LINKFLAGS)
 PLATFORM_CFLAG =
 PLATFORM_LFLAG =
 TARGET_SUFFIX =
diff --git a/CodeXL/Components/GpuProfiling/Build/backend_build.sh b/CodeXL/Components/GpuProfiling/Build/backend_build.sh
index 393946a..dea4162 100755
--- a/CodeXL/Components/GpuProfiling/Build/backend_build.sh
+++ b/CodeXL/Components/GpuProfiling/Build/backend_build.sh
@@ -163,16 +163,16 @@ DEVICEINFOLIB32=lib${GPU_PROFILER_LIB_PREFIX}DeviceInfo32$DEBUG_SUFFIX.a
 
 SPROFILEBIN=CodeXLGpuProfiler$DEBUG_SUFFIX
 SPROFILEBIN32=CodeXLGpuProfiler32$DEBUG_SUFFIX
-PROFILEBIN=lib${GPU_PROFILER_LIB_PREFIX}CLProfileAgent$DEBUG_SUFFIX.so
-PROFILEBIN32=lib${GPU_PROFILER_LIB_PREFIX}CLProfileAgent32$DEBUG_SUFFIX.so
-TRACEBIN=lib${GPU_PROFILER_LIB_PREFIX}CLTraceAgent$DEBUG_SUFFIX.so
-TRACEBIN32=lib${GPU_PROFILER_LIB_PREFIX}CLTraceAgent32$DEBUG_SUFFIX.so
-OCCUPANCYBIN=lib${GPU_PROFILER_LIB_PREFIX}CLOccupancyAgent$DEBUG_SUFFIX.so
-OCCUPANCYBIN32=lib${GPU_PROFILER_LIB_PREFIX}CLOccupancyAgent32$DEBUG_SUFFIX.so
+PROFILEBIN=lib${GPU_PROFILER_LIB_PREFIX}CLProfileAgent$DEBUG_SUFFIX.so*
+PROFILEBIN32=lib${GPU_PROFILER_LIB_PREFIX}CLProfileAgent32$DEBUG_SUFFIX.so*
+TRACEBIN=lib${GPU_PROFILER_LIB_PREFIX}CLTraceAgent$DEBUG_SUFFIX.so*
+TRACEBIN32=lib${GPU_PROFILER_LIB_PREFIX}CLTraceAgent32$DEBUG_SUFFIX.so*
+OCCUPANCYBIN=lib${GPU_PROFILER_LIB_PREFIX}CLOccupancyAgent$DEBUG_SUFFIX.so*
+OCCUPANCYBIN32=lib${GPU_PROFILER_LIB_PREFIX}CLOccupancyAgent32$DEBUG_SUFFIX.so*
 HSAPROFILEAGENTBIN=lib${GPU_PROFILER_LIB_PREFIX}HSAProfileAgent$DEBUG_SUFFIX.so
 HSATRACEAGENTBIN=lib${GPU_PROFILER_LIB_PREFIX}HSATraceAgent$DEBUG_SUFFIX.so
-PRELOADXINITTHREADSBIN=lib${GPU_PROFILER_LIB_PREFIX}PreloadXInitThreads$DEBUG_SUFFIX.so
-PRELOADXINITTHREADSBIN32=lib${GPU_PROFILER_LIB_PREFIX}PreloadXInitThreads32$DEBUG_SUFFIX.so
+PRELOADXINITTHREADSBIN=lib${GPU_PROFILER_LIB_PREFIX}PreloadXInitThreads$DEBUG_SUFFIX.so*
+PRELOADXINITTHREADSBIN32=lib${GPU_PROFILER_LIB_PREFIX}PreloadXInitThreads32$DEBUG_SUFFIX.so*
 
 ACTIVITYLOGGERBIN=libCXLActivityLogger.so
 ACTIVITYLOGGERBIN32=libCXLActivityLogger.so
@@ -174,8 +174,8 @@ HSATRACEAGENTBIN=lib${GPU_PROFILER_LIB_PREFIX}HSATraceAgent$DEBUG_SUFFIX.so
 PRELOADXINITTHREADSBIN=lib${GPU_PROFILER_LIB_PREFIX}PreloadXInitThreads$DEBUG_SUFFIX.so*
 PRELOADXINITTHREADSBIN32=lib${GPU_PROFILER_LIB_PREFIX}PreloadXInitThreads32$DEBUG_SUFFIX.so*

-ACTIVITYLOGGERBIN=libCXLActivityLogger.so
-ACTIVITYLOGGERBIN32=libCXLActivityLogger.so
+ACTIVITYLOGGERBIN=libCXLActivityLogger.so*
+ACTIVITYLOGGERBIN32=libCXLActivityLogger.so*

 MAKE_TARGET_SUFFIX_X86=x86

@@ -422,11 +422,11 @@ if !($bZipOnly) ; then
       #-----------------------------------------
       # x64
       cp $PROFILER_OUTPUT/$SPROFILEBIN $BIN/$SPROFILEBIN
-      cp $PROFILER_OUTPUT/$PRELOADXINITTHREADSBIN $BIN/$PRELOADXINITTHREADSBIN
+      cp $PROFILER_OUTPUT/$PRELOADXINITTHREADSBIN $BIN/
       if $bBuildOCLProfiler ; then
-         cp $PROFILER_OUTPUT/$PROFILEBIN $BIN/$PROFILEBIN
-         cp $PROFILER_OUTPUT/$TRACEBIN $BIN/$TRACEBIN
-         cp $PROFILER_OUTPUT/$OCCUPANCYBIN $BIN/$OCCUPANCYBIN
+         cp $PROFILER_OUTPUT/$PROFILEBIN $BIN/
+         cp $PROFILER_OUTPUT/$TRACEBIN $BIN/
+         cp $PROFILER_OUTPUT/$OCCUPANCYBIN $BIN/
          cp $GPA/Bin/Linx64/$GPACL $BIN/$GPACL
       fi
       if $bBuildHSAProfiler ; then
@@ -441,10 +441,10 @@ if !($bZipOnly) ; then
       if $b32bitbuild; then
          if $bBuildOCLProfiler ; then
             cp $PROFILER_OUTPUT/$SPROFILEBIN32 $BIN/$SPROFILEBIN32
-            cp $PROFILER_OUTPUT/$PRELOADXINITTHREADSBIN32 $BIN/$PRELOADXINITTHREADSBIN32
-            cp $PROFILER_OUTPUT/$PROFILEBIN32 $BIN/$PROFILEBIN32
-            cp $PROFILER_OUTPUT/$TRACEBIN32 $BIN/$TRACEBIN32
-            cp $PROFILER_OUTPUT/$OCCUPANCYBIN32 $BIN/$OCCUPANCYBIN32
+            cp $PROFILER_OUTPUT/$PRELOADXINITTHREADSBIN32 $BIN/
+            cp $PROFILER_OUTPUT/$PROFILEBIN32 $BIN/
+            cp $PROFILER_OUTPUT/$TRACEBIN32 $BIN/
+            cp $PROFILER_OUTPUT/$OCCUPANCYBIN32 $BIN/
             cp $GPA/Bin/Linx86/$GPACL32 $BIN/$GPACL32
             cp $GPA/Bin/Linx86/$GPACOUNTER32 $BIN/$GPACOUNTER32
             cp $LINUXRESOURCES/CodeXLGpuProfilerRun32 $BIN
@@ -452,8 +452,8 @@ if !($bZipOnly) ; then
       fi

       #AMDTActivityLogger files
-      cp $SPROOT/Output_x86_64/$CODEXL_FRAMEWORK_BUILD_CONFIG_DIR/bin/$ACTIVITYLOGGERBIN $BIN/$ACTIVITYLOGGER/bin/x86_64/$ACTIVITYLOGGERBIN
-      cp $SPROOT/Output_x86/$CODEXL_FRAMEWORK_BUILD_CONFIG_DIR/bin/$ACTIVITYLOGGERBIN32 $BIN/$ACTIVITYLOGGER/bin/x86/$ACTIVITYLOGGERBIN32
+      cp $SPROOT/Output_x86_64/$CODEXL_FRAMEWORK_BUILD_CONFIG_DIR/bin/$ACTIVITYLOGGERBIN $BIN/$ACTIVITYLOGGER/bin/x86_64/
+      cp $SPROOT/Output_x86/$CODEXL_FRAMEWORK_BUILD_CONFIG_DIR/bin/$ACTIVITYLOGGERBIN32 $BIN/$ACTIVITYLOGGER/bin/x86/
       cp $ACTIVITYLOGGERDIR/CXLActivityLogger.h $BIN/$ACTIVITYLOGGER/include/$ACTIVITYLOGGER.h
       cp $ACTIVITYLOGGERDIR/Doc/AMDTActivityLogger.pdf $BIN/$ACTIVITYLOGGER/doc/AMDTActivityLogger.pdf
       #jqPlot files
diff --git a/CodeXL/Components/Graphics/Server/VulkanEnv/SConscript b/CodeXL/Components/Graphics/Server/VulkanEnv/SConscript
index 2ba2d20..33529d6 100644
--- a/CodeXL/Components/Graphics/Server/VulkanEnv/SConscript
+++ b/CodeXL/Components/Graphics/Server/VulkanEnv/SConscript
@@ -9,6 +9,7 @@ Import('*')
 env = CXL_env.Clone()
 
 libName="VulkanEnv"
+version = "1"
 
 initGPSBackend (env)
 UseTinyXml (env)
@@ -52,12 +53,14 @@ sources = \
 # build the VulkanServer shared library
 soFiles = env.SharedLibrary(
     target = libName,
-    source = sources)
+    source = sources,
+    SHLIBVERSION = version)
 install = soFiles
 
 # Installing libraries
-VulkanEnv = env.Install(
+VulkanEnv = env.InstallVersionedLib(
     dir = env['CXL_lib_dir']+'/Plugins',
-    source = (install))
+    source = (install),
+    SHLIBVERSION = version)
 
 Return('VulkanEnv')
diff --git a/CodeXL/Components/Graphics/Server/VulkanServer/SConscript b/CodeXL/Components/Graphics/Server/VulkanServer/SConscript
index ba7a904..6862d0e 100644
--- a/CodeXL/Components/Graphics/Server/VulkanServer/SConscript
+++ b/CodeXL/Components/Graphics/Server/VulkanServer/SConscript
@@ -28,12 +28,13 @@ Import('*')
 env = CXL_env.Clone()
 
 libName="CXLGraphicsServerVulkan"
+version = "1"
 
 initGPSBackend (env)
 UseTinyXml (env)
 UseGPUPerfAPI (env)
 initVulkanSDK (env)
-UseJpgLib (env)
+UseJpgLib (env)
 
 env.Append (CPPPATH =[
     env['CXL_commonproj_dir'],
@@ -57,7 +58,7 @@ env.Append (LIBS = \
     "libCXLGraphicsServerCommon",
     "libCXLOSWrappers",
     "libCXLBaseTools",
-    "libJpg",
+    "libJpg",
     "png",
     "z",               #used by PNG
     "libboost_system.a",
@@ -162,16 +163,18 @@ sources = \
 # build the VulkanServer shared library
 soFiles = env.SharedLibrary(
     target = libName,
-    source = sources)
+    source = sources,
+    SHLIBVERSION = version)
 install = soFiles
 
 # Installing libraries
-VulkanServer = env.Install(
+VulkanServer = env.InstallVersionedLib(
     dir = env['CXL_lib_dir']+'/Plugins',
-    source = (install))
+    source = (install),
+    SHLIBVERSION = version)
 
 # clean up the source files when everything is built
-env.Command( 'done', 'libVulkanServer.so', VulkanCleanup )
+env.Command( 'done', 'libVulkanServer.so*', VulkanCleanup )
 CopyJSON(env)
 
 Return('VulkanServer')
diff --git a/CodeXL/Components/PowerProfiling/Backend/AMDTPowerProfileAPI/SConscript b/CodeXL/Components/PowerProfiling/Backend/AMDTPowerProfileAPI/SConscript
index 7460e3e..d1cfa58 100755
--- a/CodeXL/Components/PowerProfiling/Backend/AMDTPowerProfileAPI/SConscript
+++ b/CodeXL/Components/PowerProfiling/Backend/AMDTPowerProfileAPI/SConscript
@@ -6,6 +6,7 @@ import shutil
 from CXL_init import *
 
 libName = "CXLPowerProfileAPI"
+version = "1"
 
 env = CXL_env.Clone()
 
@@ -88,12 +89,14 @@ objFiles = env.SharedObject(sources)
 # Creating shared libraries
 so = env.SharedLibrary(
 	target = libName, 
-	source = objFiles)
+	source = objFiles,
+	SHLIBVERSION = version)
 
 # Installing libraries
-solibInstall = env.Install( 
+solibInstall = env.InstallVersionedLib( 
 	dir = env['CXL_lib_dir'], 
-	source = (so))
+	source = (so),
+        SHLIBVERSION = version)
 
 # Install Static Library only for release version
 if (env['CXL_build'] == 'release'):
@@ -106,9 +109,10 @@ if (env['CXL_build'] == 'release'):
 	    source = objFiles)
 
     #installing partialStatic Library
-    statlibInstall = env.Install( 
+    statlibInstall = env.InstallVersionedLib( 
     	    dir = env['CXL_lib_dir'], 
-    	    source = (stat))
+    	    source = (stat),
+            SHLIBVERSION = version)
 
     # create static Library libCXLPowerProfileAPI.a
     # This library contains libCXLBaseTools.a, libCXLOSWrappers.a and 
diff --git a/CodeXL/Remote/AMDTRemoteClient/SConscript b/CodeXL/Remote/AMDTRemoteClient/SConscript
index 4b1024f..0f4eb60 100755
--- a/CodeXL/Remote/AMDTRemoteClient/SConscript
+++ b/CodeXL/Remote/AMDTRemoteClient/SConscript
@@ -4,6 +4,7 @@ Import('*')
 from CXL_init import *
 
 libName = "CXLRemoteClient"
+version = "1"
 
 env = CXL_env.Clone()
 
@@ -44,11 +45,13 @@ env.Append (LIBS = [
 # Creating shared libraries
 soFiles = env.SharedLibrary(
     target = libName, 
-    source = objFiles)
+    source = objFiles,
+    SHLIBVERSION = version)
 
 # Installing libraries
-libInstall = env.Install( 
+libInstall = env.InstallVersionedLib( 
     dir = env['CXL_lib_dir'], 
-    source = (soFiles))
+    source = (soFiles),
+    SHLIBVERSION = version)
 
 Return('libInstall')
diff --git a/Common/Src/AMDTAPIClasses/SConscript b/Common/Src/AMDTAPIClasses/SConscript
index 6da010d..c2c4268 100755
--- a/Common/Src/AMDTAPIClasses/SConscript
+++ b/Common/Src/AMDTAPIClasses/SConscript
@@ -5,6 +5,7 @@ from CXL_init import *
 Import('*')
 
 libName = "CXLAPIClasses"
+version = "1"
 
 env = CXL_env.Clone()
 env.Append( CPPPATH = [ 
@@ -205,17 +206,20 @@ objFiles = env.SharedObject(sources)
 if (env['CXL_build_type'] == 'static'):
 	soFiles = env.StaticLibrary(
 	target = libName,
-	source = objFiles)
+	source = objFiles,
+	SHLIBVERSION = version)
 else:
 	# Creating shared libraries
 	soFiles = env.SharedLibrary(
 	target = libName,
-	source = objFiles)
+	source = objFiles,
+	SHLIBVERSION = version)
 
 
 # Installing libraries
-libInstall = env.Install( 
+libInstall = env.InstallVersionedLib( 
 	dir = env['CXL_lib_dir'], 
-	source = (soFiles))
+	source = (soFiles),
+	SHLIBVERSION = version)
 
 Return('libInstall')
diff --git a/Common/Src/AMDTActivityLogger/SConscript b/Common/Src/AMDTActivityLogger/SConscript
index 5fe43df..142f335 100755
--- a/Common/Src/AMDTActivityLogger/SConscript
+++ b/Common/Src/AMDTActivityLogger/SConscript
@@ -4,6 +4,7 @@ Import('*')
 from CXL_init import *
 
 libName = "CXLActivityLogger"
+version = "1"
 
 env = CXL_env.Clone()
 
@@ -46,11 +47,13 @@ env.Append (LIBS = [
 # Creating shared libraries
 soFiles = env.SharedLibrary(
     target = libName, 
-    source = objFiles)
+    source = objFiles,
+    SHLIBVERSION = version)
 
 # Installing libraries
-libInstall = env.Install( 
+libInstall = env.InstallVersionedLib( 
     dir = env['CXL_lib_dir'], 
-    source = (soFiles))
+    source = (soFiles),
+    SHLIBVERSION = version)
 
 Return('libInstall')
diff --git a/Common/Src/AMDTBaseTools/SConscript b/Common/Src/AMDTBaseTools/SConscript
index add0162..1f234e8 100755
--- a/Common/Src/AMDTBaseTools/SConscript
+++ b/Common/Src/AMDTBaseTools/SConscript
@@ -4,6 +4,7 @@ Import('*')
 from CXL_init import *
 
 libName = "CXLBaseTools"
+version = "1"
 
 env = CXL_env.Clone()
 
@@ -37,19 +38,22 @@ objFiles = env.SharedObject(sources)
 # create static Library
 statFiles = env.StaticLibrary(
 	target = libName,
-	source = objFiles)
+	source = objFiles,
+	SHLIBVERSION = version)
 install = statFiles
 
 # Creating shared libraries
 if (env['CXL_build_type'] != 'static'):
     soFiles = env.SharedLibrary(
         target = libName,
-        source = objFiles)
+        source = objFiles,
+	SHLIBVERSION = version)
     install += soFiles
 
 # Installing libraries
-libInstall = env.Install(
+libInstall = env.InstallVersionedLib(
 	dir = env['CXL_lib_dir'],
-	source = (install))
+	source = (install),
+	SHLIBVERSION = version)
 
 Return('libInstall')
diff --git a/Common/Src/AMDTOSAPIWrappers/SConscript b/Common/Src/AMDTOSAPIWrappers/SConscript
index 03934fd..bc56f56 100644
--- a/Common/Src/AMDTOSAPIWrappers/SConscript
+++ b/Common/Src/AMDTOSAPIWrappers/SConscript
@@ -4,6 +4,7 @@ Import('*')
 from CXL_init import *
 
 libName = "CXLOSAPIWrappers"
+version = "1"
 
 env = CXL_env.Clone()
 
@@ -85,16 +86,19 @@ env.Append (LIBS = [
 if (env['CXL_build_type'] == 'static'):
 	soFiles = env.StaticLibrary(
 	target = libName,
-	source = objFiles)
+	source = objFiles,
+	SHLIBVERSION = version)
 else:
 	# Creating shared libraries
 	soFiles = env.SharedLibrary(
 	target = libName,
-	source = objFiles)
+	source = objFiles,
+	SHLIBVERSION = version)
 
 # Installing libraries
-libInstall = env.Install(
+libInstall = env.InstallVersionedLib(
     dir = env['CXL_lib_dir'],
-    source = (soFiles))
+    source = (soFiles),
+    SHLIBVERSION = version)
 
 Return('libInstall')
diff --git a/Common/Src/AMDTOSWrappers/SConscript b/Common/Src/AMDTOSWrappers/SConscript
index f2134a9..edc80eb 100755
--- a/Common/Src/AMDTOSWrappers/SConscript
+++ b/Common/Src/AMDTOSWrappers/SConscript
@@ -4,6 +4,7 @@ Import('*')
 from CXL_init import *
 
 libName = "CXLOSWrappers"
+version = "1"
 
 env = CXL_env.Clone()
 
@@ -169,19 +170,22 @@ env.Append (LIBS = [
 # create static library
 statFiles = env.StaticLibrary(
 	    target = libName,
-	    source = objFiles + objFilesC)
+	    source = objFiles + objFilesC,
+	    SHLIBVERSION = version)
 install = statFiles
 
 if (env['CXL_build_type'] != 'static'):
     # Creating shared libraries
     soFiles = env.SharedLibrary(
         target = libName,
-        source = objFiles + objFilesC)
+        source = objFiles + objFilesC,
+        SHLIBVERSION = version)
     install += soFiles
 
 # Installing libraries
-libInstall = env.Install(
+libInstall = env.InstallVersionedLib(
     dir = env['CXL_lib_dir'],
-    source = (install))
+    source = (install),
+    SHLIBVERSION = version)
 
 Return('libInstall')
-- 
2.7.4

