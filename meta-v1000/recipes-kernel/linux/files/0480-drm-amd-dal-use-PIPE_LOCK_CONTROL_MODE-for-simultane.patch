From d91e931f1ac098348c71d6241a01af03e92ba8db Mon Sep 17 00:00:00 2001
From: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date: Wed, 11 May 2016 15:42:38 -0400
Subject: [PATCH 0480/1722] drm/amd/dal: use PIPE_LOCK_CONTROL_MODE for
 simultaneous unlocking

Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Acked-by: Jordan Lazare <Jordan.Lazare@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc.c               | 41 ++++++++++++----------
 .../drm/amd/dal/dc/dce110/dce110_hw_sequencer.c    |  8 +----
 2 files changed, 23 insertions(+), 26 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index a27b40f..7d8d144 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -917,6 +917,11 @@ bool dc_commit_surfaces_to_target(
 			struct pipe_ctx *pipe_ctx =
 						&context->res_ctx.pipe_ctx[j];
 			struct core_gamma *gamma = NULL;
+			int lock_mask =
+				PIPE_LOCK_CONTROL_GRAPHICS |
+				PIPE_LOCK_CONTROL_SCL |
+				PIPE_LOCK_CONTROL_BLENDER |
+				PIPE_LOCK_CONTROL_MODE;
 
 			if (pipe_ctx->surface !=
 					DC_SURFACE_TO_CORE(new_surfaces[i]))
@@ -942,18 +947,13 @@ bool dc_commit_surfaces_to_target(
 					dc_surface->dst_rect.width,
 					dc_surface->dst_rect.height);
 
+			if (!pipe_ctx->surface->public.flip_immediate)
+				lock_mask |= PIPE_LOCK_CONTROL_SURFACE;
+
 			core_dc->hwss.pipe_control_lock(
 					core_dc->ctx,
 					pipe_ctx->pipe_idx,
-					PIPE_LOCK_CONTROL_MODE,
-					false);
-			core_dc->hwss.pipe_control_lock(
-					core_dc->ctx,
-					pipe_ctx->pipe_idx,
-					PIPE_LOCK_CONTROL_GRAPHICS |
-					PIPE_LOCK_CONTROL_SCL |
-					PIPE_LOCK_CONTROL_BLENDER |
-					PIPE_LOCK_CONTROL_SURFACE,
+					lock_mask,
 					true);
 
 			core_dc->hwss.set_plane_config(
@@ -1084,11 +1084,13 @@ void dc_flip_surface_addrs(
 			ctx_surface->public.address = flip_addrs[i].address;
 			ctx_surface->public.flip_immediate = flip_addrs[i].flip_immediate;
 
-			core_dc->hwss.pipe_control_lock(
-					core_dc->ctx,
-					pipe_ctx->pipe_idx,
-					PIPE_LOCK_CONTROL_SURFACE,
-					true);
+			if (!ctx_surface->public.flip_immediate)
+				core_dc->hwss.pipe_control_lock(
+						core_dc->ctx,
+						pipe_ctx->pipe_idx,
+						PIPE_LOCK_CONTROL_SURFACE |
+						PIPE_LOCK_CONTROL_MODE,
+						true);
 
 			core_dc->hwss.update_plane_addr(core_dc, pipe_ctx);
 		}
@@ -1102,11 +1104,12 @@ void dc_flip_surface_addrs(
 			if (DC_SURFACE_TO_CORE(surfaces[i]) != ctx_surface)
 				continue;
 
-			core_dc->hwss.pipe_control_lock(
-					core_dc->ctx,
-					pipe_ctx->pipe_idx,
-					PIPE_LOCK_CONTROL_SURFACE,
-					false);
+			if (!ctx_surface->public.flip_immediate)
+				core_dc->hwss.pipe_control_lock(
+						core_dc->ctx,
+						pipe_ctx->pipe_idx,
+						PIPE_LOCK_CONTROL_SURFACE,
+						false);
 		}
 }
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
index eec1fe1..c1ae34a 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
@@ -1421,15 +1421,9 @@ static void update_plane_addr(struct core_dc *dc, struct pipe_ctx *pipe_ctx)
 
 	pipe_ctx->tg->funcs->set_blank(pipe_ctx->tg, false);
 
-	if (surface->public.flip_immediate) {
-		dc->hwss.pipe_control_lock(
-					dc->ctx,
-					pipe_ctx->pipe_idx,
-					PIPE_LOCK_CONTROL_SURFACE,
-					false);
+	if (surface->public.flip_immediate)
 		pipe_ctx->mi->funcs->wait_for_no_surface_update_pending(
 								pipe_ctx->mi);
-	}
 }
 
 
-- 
2.7.4

