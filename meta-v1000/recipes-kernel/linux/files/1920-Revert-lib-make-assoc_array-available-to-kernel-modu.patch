From 0417201454c6a39942121697064fb5a2a4b0a0b8 Mon Sep 17 00:00:00 2001
From: Harish Kasiviswanathan <Harish.Kasiviswanathan@amd.com>
Date: Thu, 1 Dec 2016 11:36:31 -0500
Subject: [PATCH 1920/2094] Revert "lib: make assoc_array available to kernel
 modules"

Not needed anymore. Using hash table instead.

This reverts commit d79eba883de2 ("lib: make assoc_array available to
kernel modules")

Change-Id: I6fc69e640effbc8fd621d24aa6adcd64fd704980
Signed-off-by: Harish Kasiviswanathan <Harish.Kasiviswanathan@amd.com>
---
 lib/assoc_array.c | 10 ----------
 1 file changed, 10 deletions(-)

diff --git a/lib/assoc_array.c b/lib/assoc_array.c
index 24d94ff..59fd7c0 100644
--- a/lib/assoc_array.c
+++ b/lib/assoc_array.c
@@ -153,7 +153,6 @@ int assoc_array_iterate(const struct assoc_array *array,
 		return 0;
 	return assoc_array_subtree_iterate(root, NULL, iterator, iterator_data);
 }
-EXPORT_SYMBOL(assoc_array_iterate);
 
 enum assoc_array_walk_status {
 	assoc_array_walk_tree_empty,
@@ -353,7 +352,6 @@ void *assoc_array_find(const struct assoc_array *array,
 
 	return NULL;
 }
-EXPORT_SYMBOL(assoc_array_find);
 
 /*
  * Destructively iterate over an associative array.  The caller must prevent
@@ -463,7 +461,6 @@ void assoc_array_destroy(struct assoc_array *array,
 	assoc_array_destroy_subtree(array->root, ops);
 	array->root = NULL;
 }
-EXPORT_SYMBOL(assoc_array_destroy);
 
 /*
  * Handle insertion into an empty tree.
@@ -1053,7 +1050,6 @@ struct assoc_array_edit *assoc_array_insert(struct assoc_array *array,
 	assoc_array_cancel_edit(edit);
 	return ERR_PTR(-ENOMEM);
 }
-EXPORT_SYMBOL(assoc_array_insert);
 
 /**
  * assoc_array_insert_set_object - Set the new object pointer in an edit script
@@ -1069,7 +1065,6 @@ void assoc_array_insert_set_object(struct assoc_array_edit *edit, void *object)
 	BUG_ON(!object);
 	edit->leaf = assoc_array_leaf_to_ptr(object);
 }
-EXPORT_SYMBOL(assoc_array_insert_set_object);
 
 struct assoc_array_delete_collapse_context {
 	struct assoc_array_node	*node;
@@ -1289,7 +1284,6 @@ struct assoc_array_edit *assoc_array_delete(struct assoc_array *array,
 	assoc_array_cancel_edit(edit);
 	return ERR_PTR(-ENOMEM);
 }
-EXPORT_SYMBOL(assoc_array_delete);
 
 /**
  * assoc_array_clear - Script deletion of all objects from an associative array
@@ -1331,7 +1325,6 @@ struct assoc_array_edit *assoc_array_clear(struct assoc_array *array,
 	pr_devel("all gone\n");
 	return edit;
 }
-EXPORT_SYMBOL(assoc_array_clear);
 
 /*
  * Handle the deferred destruction after an applied edit.
@@ -1434,7 +1427,6 @@ void assoc_array_apply_edit(struct assoc_array_edit *edit)
 
 	call_rcu(&edit->rcu, assoc_array_rcu_cleanup);
 }
-EXPORT_SYMBOL(assoc_array_apply_edit);
 
 /**
  * assoc_array_cancel_edit - Discard an edit script.
@@ -1465,7 +1457,6 @@ void assoc_array_cancel_edit(struct assoc_array_edit *edit)
 	}
 	kfree(edit);
 }
-EXPORT_SYMBOL(assoc_array_cancel_edit);
 
 /**
  * assoc_array_gc - Garbage collect an associative array.
@@ -1758,4 +1749,3 @@ int assoc_array_gc(struct assoc_array *array,
 	kfree(edit);
 	return -ENOMEM;
 }
-EXPORT_SYMBOL(assoc_array_gc);
-- 
2.7.4

