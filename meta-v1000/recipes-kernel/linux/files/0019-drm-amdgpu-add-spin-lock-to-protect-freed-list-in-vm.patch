From 1bd36d97a02917336f0181057e9927bd727217f0 Mon Sep 17 00:00:00 2001
From: jimqu <Jim.Qu@amd.com>
Date: Fri, 4 Dec 2015 17:17:00 +0800
Subject: [PATCH 0019/1722] drm/amdgpu: add spin lock to protect freed list in
 vm (v2)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

there is a protection fault about freed list when OCL test.
add a spin lock to protect it.

v2: drop changes in vm_fini

Signed-off-by: JimQu <jim.qu@amd.com>
Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c | 23 ++++++++++++++++-------
 1 file changed, 16 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
index a583f36..49bc809 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
@@ -1030,21 +1030,24 @@ int amdgpu_vm_clear_freed(struct amdgpu_device *adev,
 {
 	struct amdgpu_bo_va_mapping *mapping;
 	int r;
-
+ 
+        spin_lock(&vm->freed_lock);
 	while (!list_empty(&vm->freed)) {
 		mapping = list_first_entry(&vm->freed,
 			struct amdgpu_bo_va_mapping, list);
 		list_del(&mapping->list);
-
+                spin_unlock(&vm->freed_lock);
 		r = amdgpu_vm_bo_split_mapping(adev, 0, NULL, vm, mapping,
 					       0, 0, NULL);
 		kfree(mapping);
 		if (r)
 			return r;
-
+ 
+                spin_lock(&vm->freed_lock);
 	}
-	return 0;
+        spin_unlock(&vm->freed_lock);
 
+	return 0;
 }
 
 /**
@@ -1294,11 +1297,14 @@ int amdgpu_vm_bo_unmap(struct amdgpu_device *adev,
 	interval_tree_remove(&mapping->it, &vm->va);
 	trace_amdgpu_vm_bo_unmap(bo_va, mapping);
 
-	if (valid)
+	if (valid) {
+                spin_lock(&vm->freed_lock);
 		list_add(&mapping->list, &vm->freed);
-	else
+                spin_unlock(&vm->freed_lock);
+        } else {
 		kfree(mapping);
-
+	}
+	
 	return 0;
 }
 
@@ -1328,7 +1334,9 @@ void amdgpu_vm_bo_rmv(struct amdgpu_device *adev,
 		list_del(&mapping->list);
 		interval_tree_remove(&mapping->it, &vm->va);
 		trace_amdgpu_vm_bo_unmap(bo_va, mapping);
+                spin_lock(&vm->freed_lock);
 		list_add(&mapping->list, &vm->freed);
+                spin_unlock(&vm->freed_lock);
 	}
 	list_for_each_entry_safe(mapping, next, &bo_va->invalids, list) {
 		list_del(&mapping->list);
@@ -1388,6 +1396,7 @@ int amdgpu_vm_init(struct amdgpu_device *adev, struct amdgpu_vm *vm)
 	INIT_LIST_HEAD(&vm->invalidated);
 	INIT_LIST_HEAD(&vm->cleared);
 	INIT_LIST_HEAD(&vm->freed);
+        spin_lock_init(&vm->freed_lock);
 
 	pd_size = amdgpu_vm_directory_size(adev);
 	pd_entries = amdgpu_vm_num_pdes(adev);
-- 
2.7.4

