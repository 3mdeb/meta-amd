From 3969335b2f537aa170d65b2b07f229a1c6973737 Mon Sep 17 00:00:00 2001
From: Alex Deucher <alexander.deucher@amd.com>
Date: Thu, 13 Oct 2016 17:41:13 -0400
Subject: [PATCH 1267/1722] drm/amdgpu: rework IP block registration (v3)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This makes it easier to replace specific IP blocks on
asics for handling virtual_dce, DAL, etc. and for building
IP lists for hw or tables.  This also stored the status
information in the same structure.

v2: split out spelling fix into a separate patch
    add a function to add IPs to the list
v3: add DAL support

Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/vi.c | 201 +++++++++++++++++++++-------------------
 1 file changed, 108 insertions(+), 93 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/vi.c b/drivers/gpu/drm/amd/amdgpu/vi.c
index 7f4167cc..a2b5c23 100644
--- a/drivers/gpu/drm/amd/amdgpu/vi.c
+++ b/drivers/gpu/drm/amd/amdgpu/vi.c
@@ -974,7 +974,7 @@ static int vi_common_early_init(void *handle)
                         AMD_CG_SUPPORT_SDMA_LS |
                         AMD_CG_SUPPORT_VCE_MGCG;
                 /* rev0 hardware requires workarounds to support PG */
-		dev->pg_flags = 0;
+		adev->pg_flags = 0;
                 if (adev->rev_id != 0x00) {
                         adev->pg_flags |= AMD_PG_SUPPORT_GFX_PG |
                                 AMD_PG_SUPPORT_GFX_SMG |
@@ -1286,106 +1286,121 @@ static const struct amdgpu_ip_block_version vi_common_ip_block =
 
 int vi_set_ip_blocks(struct amdgpu_device *adev)
 {
-        if (adev->enable_virtual_display) {
-                amdgpu_dal = 0;
-                switch (adev->asic_type) {
-                case CHIP_TOPAZ:
-                        adev->ip_blocks = topaz_ip_blocks_vd;
-                        adev->num_ip_blocks = ARRAY_SIZE(topaz_ip_blocks_vd);
-                        break;
-                case CHIP_FIJI:
-                        adev->ip_blocks = fiji_ip_blocks_vd;
-                        adev->num_ip_blocks = ARRAY_SIZE(fiji_ip_blocks_vd);
-                        break;
-                case CHIP_TONGA:
-                        adev->ip_blocks = tonga_ip_blocks_vd;
-                        adev->num_ip_blocks = ARRAY_SIZE(tonga_ip_blocks_vd);
-                        break;
-                case CHIP_POLARIS11:
-                case CHIP_POLARIS10:
-                        adev->ip_blocks = polaris11_ip_blocks_vd;
-                        adev->num_ip_blocks = ARRAY_SIZE(polaris11_ip_blocks_vd);
-                        break;
-
-                case CHIP_CARRIZO:
-                case CHIP_STONEY:
-                        adev->ip_blocks = cz_ip_blocks_vd;
-                        adev->num_ip_blocks = ARRAY_SIZE(cz_ip_blocks_vd);
-                        break;
-                default:
-                        /* FIXME: not supported yet */
-                        return -EINVAL;
-                }
-        } else {
-                switch (adev->asic_type) {
-                case CHIP_TOPAZ:
-                        adev->ip_blocks = topaz_ip_blocks;
-                        adev->num_ip_blocks = ARRAY_SIZE(topaz_ip_blocks);
-                        break;
-                case CHIP_FIJI:
+	
+	switch (adev->asic_type) {
+	case CHIP_TOPAZ:
+		/* topaz has no DCE, UVD, VCE */
+		amdgpu_ip_block_add(adev, &vi_common_ip_block);
+		amdgpu_ip_block_add(adev, &gmc_v7_4_ip_block);
+		amdgpu_ip_block_add(adev, &iceland_ih_ip_block);
+		amdgpu_ip_block_add(adev, &amdgpu_pp_ip_block);
+		if (adev->enable_virtual_display)
+			amdgpu_ip_block_add(adev, &dce_virtual_ip_block);
+		amdgpu_ip_block_add(adev, &gfx_v8_0_ip_block);
+		amdgpu_ip_block_add(adev, &sdma_v2_4_ip_block);
+		break;
+	case CHIP_FIJI:
+		amdgpu_ip_block_add(adev, &vi_common_ip_block);
+		amdgpu_ip_block_add(adev, &gmc_v8_5_ip_block);
+		amdgpu_ip_block_add(adev, &tonga_ih_ip_block);
+		amdgpu_ip_block_add(adev, &amdgpu_pp_ip_block);
+		if (adev->enable_virtual_display)
+			amdgpu_ip_block_add(adev, &dce_virtual_ip_block);
 #if defined(CONFIG_DRM_AMD_DAL)
-                        if (amdgpu_device_has_dal_support(adev)) {
-                                adev->ip_blocks = fiji_ip_blocks_dal;
-                                adev->num_ip_blocks = ARRAY_SIZE(fiji_ip_blocks_dal);
-                        } else {
-                                adev->ip_blocks = fiji_ip_blocks;
-                                adev->num_ip_blocks = ARRAY_SIZE(fiji_ip_blocks);
-                        }
-#else
-                        adev->ip_blocks = fiji_ip_blocks;
-                        adev->num_ip_blocks = ARRAY_SIZE(fiji_ip_blocks);
+		else if (amdgpu_device_has_dal_support(adev))
+			amdgpu_ip_block_add(adev, &dm_ip_block);
 #endif
-                        break;
-                case CHIP_TONGA:
+		else
+			amdgpu_ip_block_add(adev, &dce_v10_1_ip_block);
+		amdgpu_ip_block_add(adev, &gfx_v8_0_ip_block);
+		amdgpu_ip_block_add(adev, &sdma_v3_0_ip_block);
+		amdgpu_ip_block_add(adev, &uvd_v6_0_ip_block);
+		amdgpu_ip_block_add(adev, &vce_v3_0_ip_block);
+		break;
+	case CHIP_TONGA:
+		amdgpu_ip_block_add(adev, &vi_common_ip_block);
+		amdgpu_ip_block_add(adev, &gmc_v8_0_ip_block);
+		amdgpu_ip_block_add(adev, &tonga_ih_ip_block);
+		amdgpu_ip_block_add(adev, &amdgpu_pp_ip_block);
+		if (adev->enable_virtual_display)
+			amdgpu_ip_block_add(adev, &dce_virtual_ip_block);
 #if defined(CONFIG_DRM_AMD_DAL)
-                        if (amdgpu_device_has_dal_support(adev)) {
-                                adev->ip_blocks = tonga_ip_blocks_dal;
-                                adev->num_ip_blocks = ARRAY_SIZE(tonga_ip_blocks_dal);
-                        } else {
-                                adev->ip_blocks = tonga_ip_blocks;
-                                adev->num_ip_blocks = ARRAY_SIZE(tonga_ip_blocks);
-                        }
-#else
-                        adev->ip_blocks = tonga_ip_blocks;
-                        adev->num_ip_blocks = ARRAY_SIZE(tonga_ip_blocks);
+		else if (amdgpu_device_has_dal_support(adev))
+			amdgpu_ip_block_add(adev, &dm_ip_block);
 #endif
-                        break;
-                case CHIP_POLARIS11:
-                case CHIP_POLARIS10:
+		else
+			amdgpu_ip_block_add(adev, &dce_v10_0_ip_block);
+		amdgpu_ip_block_add(adev, &gfx_v8_0_ip_block);
+		amdgpu_ip_block_add(adev, &sdma_v3_0_ip_block);
+		amdgpu_ip_block_add(adev, &uvd_v5_0_ip_block);
+		amdgpu_ip_block_add(adev, &vce_v3_0_ip_block);
+		break;
+	case CHIP_POLARIS11:
+	case CHIP_POLARIS10:
+		amdgpu_ip_block_add(adev, &vi_common_ip_block);
+		amdgpu_ip_block_add(adev, &gmc_v8_1_ip_block);
+		amdgpu_ip_block_add(adev, &tonga_ih_ip_block);
+		amdgpu_ip_block_add(adev, &amdgpu_pp_ip_block);
+		if (adev->enable_virtual_display)
+			amdgpu_ip_block_add(adev, &dce_virtual_ip_block);
 #if defined(CONFIG_DRM_AMD_DAL)
-                        if (amdgpu_device_has_dal_support(adev)) {
-                                adev->ip_blocks = polaris11_ip_blocks_dal;
-                                adev->num_ip_blocks = ARRAY_SIZE(polaris11_ip_blocks_dal);
-                        } else {
-                                adev->ip_blocks = polaris11_ip_blocks;
-                                adev->num_ip_blocks = ARRAY_SIZE(polaris11_ip_blocks);
-                        }
-#else
-                        adev->ip_blocks = polaris11_ip_blocks;
-                        adev->num_ip_blocks = ARRAY_SIZE(polaris11_ip_blocks);
+		else if (amdgpu_device_has_dal_support(adev))
+			amdgpu_ip_block_add(adev, &dm_ip_block);
 #endif
-                        break;
-                case CHIP_CARRIZO:
-                case CHIP_STONEY:
+		else
+			amdgpu_ip_block_add(adev, &dce_v11_2_ip_block);
+		amdgpu_ip_block_add(adev, &gfx_v8_0_ip_block);
+		amdgpu_ip_block_add(adev, &sdma_v3_1_ip_block);
+		amdgpu_ip_block_add(adev, &uvd_v6_3_ip_block);
+		amdgpu_ip_block_add(adev, &vce_v3_4_ip_block);
+		break;
+	case CHIP_CARRIZO:
+		amdgpu_ip_block_add(adev, &vi_common_ip_block);
+		amdgpu_ip_block_add(adev, &gmc_v8_0_ip_block);
+		amdgpu_ip_block_add(adev, &cz_ih_ip_block);
+		amdgpu_ip_block_add(adev, &amdgpu_pp_ip_block);
+		if (adev->enable_virtual_display)
+			amdgpu_ip_block_add(adev, &dce_virtual_ip_block);
 #if defined(CONFIG_DRM_AMD_DAL)
-                        if (amdgpu_device_has_dal_support(adev)) {
-                                adev->ip_blocks = cz_ip_blocks_dal;
-                                adev->num_ip_blocks = ARRAY_SIZE(cz_ip_blocks_dal);
-                        } else {
-                                adev->ip_blocks = cz_ip_blocks;
-                                adev->num_ip_blocks = ARRAY_SIZE(cz_ip_blocks);
-                        }
-#else
-                        adev->ip_blocks = cz_ip_blocks;
-                        adev->num_ip_blocks = ARRAY_SIZE(cz_ip_blocks);
+		else if (amdgpu_device_has_dal_support(adev))
+			amdgpu_ip_block_add(adev, &dm_ip_block);
 #endif
-                        break;
-                default:
-                        /* FIXME: not supported yet */
-                        return -EINVAL;
-                }
-        }
+		else
+			amdgpu_ip_block_add(adev, &dce_v11_0_ip_block);
+		amdgpu_ip_block_add(adev, &gfx_v8_0_ip_block);
+		amdgpu_ip_block_add(adev, &sdma_v3_0_ip_block);
+		amdgpu_ip_block_add(adev, &uvd_v6_0_ip_block);
+		amdgpu_ip_block_add(adev, &vce_v3_1_ip_block);
+#if defined(CONFIG_DRM_AMD_ACP)
+		amdgpu_ip_block_add(adev, &acp_ip_block);
+#endif
+		break;
+	case CHIP_STONEY:
+		amdgpu_ip_block_add(adev, &vi_common_ip_block);
+		amdgpu_ip_block_add(adev, &gmc_v8_0_ip_block);
+		amdgpu_ip_block_add(adev, &cz_ih_ip_block);
+		amdgpu_ip_block_add(adev, &amdgpu_pp_ip_block);
+		if (adev->enable_virtual_display)
+			amdgpu_ip_block_add(adev, &dce_virtual_ip_block);
+#if defined(CONFIG_DRM_AMD_DAL)
+		else if (amdgpu_device_has_dal_support(adev))
+			amdgpu_ip_block_add(adev, &dm_ip_block);
+#endif
+		else
+			amdgpu_ip_block_add(adev, &dce_v11_0_ip_block);
+		amdgpu_ip_block_add(adev, &gfx_v8_1_ip_block);
+		amdgpu_ip_block_add(adev, &sdma_v3_0_ip_block);
+		amdgpu_ip_block_add(adev, &uvd_v6_2_ip_block);
+		amdgpu_ip_block_add(adev, &vce_v3_4_ip_block);
+#if defined(CONFIG_DRM_AMD_ACP)
+		amdgpu_ip_block_add(adev, &acp_ip_block);
+#endif
+		break;
+	default:
+		/* FIXME: not supported yet */
+		return -EINVAL;
+	}
 
-        return 0;
+	return 0;
 }
 
-- 
2.7.4

