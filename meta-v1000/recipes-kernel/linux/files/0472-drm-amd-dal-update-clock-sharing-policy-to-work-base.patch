From b39f8b5bc2814336f220379707b143526464dd18 Mon Sep 17 00:00:00 2001
From: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date: Tue, 10 May 2016 15:15:53 -0400
Subject: [PATCH 0472/1722] drm/amd/dal: update clock sharing policy to work
 based on adjusted pixel clock

Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Acked-by: Jordan Lazare <Jordan.Lazare@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc.c          | 22 ++-----
 drivers/gpu/drm/amd/dal/dc/core/dc_resource.c | 90 +++++++++++++++------------
 drivers/gpu/drm/amd/dal/dc/inc/core_types.h   |  2 +
 drivers/gpu/drm/amd/dal/dc/inc/resource.h     |  6 +-
 4 files changed, 59 insertions(+), 61 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index 2688f32..01b5c2f 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -498,10 +498,9 @@ static void program_timing_sync(
 			if (!ctx->res_ctx.pipe_ctx[j].stream)
 				continue;
 
-			if (resource_is_same_timing(
-				&ctx->res_ctx.pipe_ctx[j].stream->public.timing,
-				&ctx->res_ctx.pipe_ctx[i].stream->public
-								.timing)) {
+			if (resource_are_streams_clk_sharable(
+					ctx->res_ctx.pipe_ctx[j].stream,
+					ctx->res_ctx.pipe_ctx[i].stream)) {
 				tg_set[group_size] =
 					ctx->res_ctx.pool.timing_generators[j];
 				group_size++;
@@ -621,20 +620,7 @@ static void fill_display_configs(
 			cfg->link_settings.lane_count = stream->sink->link->public.cur_link_settings.lane_count;
 			cfg->link_settings.link_rate = stream->sink->link->public.cur_link_settings.link_rate;
 			cfg->link_settings.link_spread = stream->sink->link->public.cur_link_settings.link_spread;
-			cfg->sym_clock = stream->public.timing.pix_clk_khz;
-			switch (stream->public.timing.display_color_depth) {
-			case COLOR_DEPTH_101010:
-				cfg->sym_clock = (cfg->sym_clock * 30) / 24;
-				break;
-			case COLOR_DEPTH_121212:
-				cfg->sym_clock = (cfg->sym_clock * 36) / 24;
-				break;
-			case COLOR_DEPTH_161616:
-				cfg->sym_clock = (cfg->sym_clock * 48) / 24;
-				break;
-			default:
-				break;
-			}
+			cfg->sym_clock = stream->actual_pix_clk_khz;
 			/* Round v_refresh*/
 			cfg->v_refresh = stream->public.timing.pix_clk_khz * 1000;
 			cfg->v_refresh /= stream->public.timing.h_total;
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c b/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
index fd164a4..de6e4c9 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
@@ -160,11 +160,21 @@ void resource_reference_clock_source(
 		res_ctx->dp_clock_source_ref_count++;
 }
 
-bool resource_is_same_timing(
-	const struct dc_crtc_timing *timing1,
-	const struct dc_crtc_timing *timing2)
+bool resource_are_streams_clk_sharable(
+	const struct core_stream *stream1,
+	const struct core_stream *stream2)
 {
-	return memcmp(timing1, timing2, sizeof(struct dc_crtc_timing)) == 0;
+
+	if (stream1->public.timing.h_total != stream2->public.timing.h_total)
+		return false;
+
+	if (stream1->public.timing.v_total != stream2->public.timing.v_total)
+		return false;
+
+	if (stream1->actual_pix_clk_khz != stream2->actual_pix_clk_khz)
+		return false;
+
+	return true;
 }
 
 static bool is_sharable_clk_src(
@@ -188,9 +198,8 @@ static bool is_sharable_clk_src(
 	if (dc_is_dp_signal(pipe_with_clk_src->signal))
 		return false;
 
-	if (!resource_is_same_timing(
-		&pipe_with_clk_src->stream->public.timing,
-		&pipe->stream->public.timing))
+	if (!resource_are_streams_clk_sharable(
+			pipe_with_clk_src->stream, pipe->stream))
 		return false;
 
 	return true;
@@ -738,31 +747,33 @@ static void copy_pipe_ctx(
 		to_pipe_ctx->surface = surface;
 }
 
-static struct core_stream *find_pll_stream_by_timing(
-		struct dc_crtc_timing *timing,
-		struct validate_context *context)
+static int get_norm_pix_clk(const struct dc_crtc_timing *timing)
 {
-	uint8_t i, j;
+	uint32_t pix_clk = timing->pix_clk_khz;
+	uint32_t normalized_pix_clk = pix_clk;
 
-	for (i = 0; i < context->target_count; i++) {
-		struct core_target *target = context->targets[i];
+	if (timing->pixel_encoding == PIXEL_ENCODING_YCBCR420)
+		pix_clk /= 2;
 
-		for (j = 0; j < target->public.stream_count; j++) {
-			struct core_stream *stream =
-				DC_STREAM_TO_CORE(target->public.streams[j]);
-
-			/* We are looking for non dp, non virtual stream that
-			 * matches the timing provided
-			 */
-			if (resource_is_same_timing(timing, &stream->public.timing)
-				&& !dc_is_dp_signal(stream->sink->public.sink_signal)
-				&& stream->sink->link->public.connector_signal
-							!= SIGNAL_TYPE_VIRTUAL)
-					return stream;
-		}
+	switch (timing->display_color_depth) {
+	case COLOR_DEPTH_888:
+		normalized_pix_clk = pix_clk;
+		break;
+	case COLOR_DEPTH_101010:
+		normalized_pix_clk = (pix_clk * 30) / 24;
+		break;
+	case COLOR_DEPTH_121212:
+		normalized_pix_clk = (pix_clk * 36) / 24;
+		break;
+	case COLOR_DEPTH_161616:
+		normalized_pix_clk = (pix_clk * 48) / 24;
+		break;
+	default:
+		ASSERT(0);
+		break;
 	}
 
-	return NULL;
+	return normalized_pix_clk;
 }
 
 enum dc_status resource_map_pool_resources(
@@ -778,6 +789,14 @@ enum dc_status resource_map_pool_resources(
 			struct core_stream *stream =
 				DC_STREAM_TO_CORE(target->public.streams[j]);
 
+			/* update actual pixel clock on all streams */
+			if (dc_is_hdmi_signal(stream->sink->public.sink_signal))
+				stream->actual_pix_clk_khz = get_norm_pix_clk(
+					&stream->public.timing);
+			else
+				stream->actual_pix_clk_khz =
+					stream->public.timing.pix_clk_khz;
+
 			if (!resource_is_stream_unchanged(&dc->current_context, stream))
 				continue;
 
@@ -798,16 +817,6 @@ enum dc_status resource_map_pool_resources(
 					&context->res_ctx,
 					pipe_ctx->stream_enc);
 
-				/* Switch to dp clock source only if there is
-				 * no non dp stream that shares the same timing
-				 * with the dp stream.
-				 */
-				if (dc_is_dp_signal(pipe_ctx->signal) &&
-					!find_pll_stream_by_timing(
-						&stream->public.timing, context))
-					pipe_ctx->clock_source =
-						context->res_ctx.pool.dp_clock_source;
-
 				resource_reference_clock_source(
 					&context->res_ctx,
 					pipe_ctx->clock_source);
@@ -1364,9 +1373,10 @@ static bool check_timing_change(struct core_stream *cur_stream,
 	if (cur_stream->sink != new_stream->sink)
 		return true;
 
-	return !resource_is_same_timing(
-					&cur_stream->public.timing,
-					&new_stream->public.timing);
+	return memcmp(
+		&cur_stream->public.timing,
+		&new_stream->public.timing,
+		sizeof(struct dc_crtc_timing)) != 0;
 }
 
 bool pipe_need_reprogram(
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/core_types.h b/drivers/gpu/drm/amd/dal/dc/inc/core_types.h
index 0ce43b0..764a112 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/core_types.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/core_types.h
@@ -93,6 +93,8 @@ struct core_stream {
 	struct bit_depth_reduction_params bit_depth_params;
 	struct clamping_and_pixel_encoding_params clamping;
 
+	int actual_pix_clk_khz;
+
 	struct dc_stream_status status;
 };
 
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/resource.h b/drivers/gpu/drm/amd/dal/dc/inc/resource.h
index 22133f0..480df80 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/resource.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/resource.h
@@ -65,9 +65,9 @@ void resource_reference_clock_source(
 		struct resource_context *res_ctx,
 		struct clock_source *clock_source);
 
-bool resource_is_same_timing(
-		const struct dc_crtc_timing *timing1,
-		const struct dc_crtc_timing *timing2);
+bool resource_are_streams_clk_sharable(
+		const struct core_stream *stream1,
+		const struct core_stream *stream2);
 
 struct clock_source *resource_find_used_clk_src_for_sharing(
 		struct resource_context *res_ctx,
-- 
2.7.4

