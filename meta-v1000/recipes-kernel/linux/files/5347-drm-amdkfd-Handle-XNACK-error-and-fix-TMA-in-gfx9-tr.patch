From 50f9127cc2e215dba4fa48a3eb00e1bd1adffc4f Mon Sep 17 00:00:00 2001
From: Jay Cornwall <Jay.Cornwall@amd.com>
Date: Wed, 5 Apr 2017 17:19:57 -0500
Subject: [PATCH 5347/5855] drm/amdkfd: Handle XNACK error and fix TMA in gfx9
 trap handler

If a wavefront receives XNACK error response from the TLB it will
raise the MEM_VIOL exception and jump to the configured trap handler.
The trap handler fails in this scenario by issuing additional TLB
transactions from the wavefront, causing it to enter a failure state.

Modify the trap handler to detect XNACK error state, halt the wavefront
and then return it to the faulting instruction. It can be context-saved
cleanly in this state.

Additionally, fix incorrect use of the SQ_SHADER_TMA* registers by
shifting the address left by 8 bits.

Change-Id: If5714bd87c5cd4910e87d2fb59f72cbf8dda67c4
Signed-off-by: Jay Cornwall <Jay.Cornwall@amd.com>
---
 .../gpu/drm/amd/amdkfd/cwsr_trap_handler_gfx9.asm  | 452 +++++++++++----------
 1 file changed, 233 insertions(+), 219 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdkfd/cwsr_trap_handler_gfx9.asm b/drivers/gpu/drm/amd/amdkfd/cwsr_trap_handler_gfx9.asm
index 661bd0a..eee4840 100644
--- a/drivers/gpu/drm/amd/amdkfd/cwsr_trap_handler_gfx9.asm
+++ b/drivers/gpu/drm/amd/amdkfd/cwsr_trap_handler_gfx9.asm
@@ -99,6 +99,7 @@ var SWIZZLE_EN			    =	0		    //whether we use swizzled buffer addressing
 var SQ_WAVE_STATUS_INST_ATC_SHIFT  = 23
 var SQ_WAVE_STATUS_INST_ATC_MASK   = 0x00800000
 var SQ_WAVE_STATUS_SPI_PRIO_MASK   = 0x00000006
+var SQ_WAVE_STATUS_HALT_MASK       = 0x2000
 
 var SQ_WAVE_LDS_ALLOC_LDS_SIZE_SHIFT	= 12
 var SQ_WAVE_LDS_ALLOC_LDS_SIZE_SIZE	= 9
@@ -118,6 +119,7 @@ var SQ_WAVE_TRAPSTS_PRE_SAVECTX_SIZE	=   10
 var SQ_WAVE_TRAPSTS_POST_SAVECTX_MASK	=   0xFFFFF800
 var SQ_WAVE_TRAPSTS_POST_SAVECTX_SHIFT	=   11
 var SQ_WAVE_TRAPSTS_POST_SAVECTX_SIZE	=   21
+var SQ_WAVE_TRAPSTS_XNACK_ERROR_MASK	= 0x10000000
 
 var SQ_WAVE_IB_STS_RCNT_SHIFT		=   16			//FIXME
 var SQ_WAVE_IB_STS_FIRST_REPLAY_SHIFT	=   15			//FIXME
@@ -240,14 +242,23 @@ L_SKIP_RESTORE:
     s_getreg_b32    s_save_status, hwreg(HW_REG_STATUS)				    //save STATUS since we will change SCC
     s_andn2_b32	    s_save_status, s_save_status, SQ_WAVE_STATUS_SPI_PRIO_MASK	    //check whether this is for save
     s_getreg_b32    s_save_trapsts, hwreg(HW_REG_TRAPSTS)
-    s_and_b32	    s_save_trapsts, s_save_trapsts, SQ_WAVE_TRAPSTS_SAVECTX_MASK    //check whether this is for save
+    s_and_b32	    ttmp8, s_save_trapsts, SQ_WAVE_TRAPSTS_SAVECTX_MASK    //check whether this is for save
     s_cbranch_scc1  L_SAVE					//this is the operation for save
 
     // *********    Handle non-CWSR traps	*******************
 if (!EMU_RUN_HACK)
+    // If STATUS.XNACK_ERROR is asserted then we cannot fetch from the TMA.
+    // Instead, halt the wavefront and return from the trap.
+    s_and_b32       ttmp8, s_save_trapsts, SQ_WAVE_TRAPSTS_XNACK_ERROR_MASK
+    s_cbranch_scc0  L_NO_XNACK_ERROR
+    s_or_b32        s_save_status, s_save_status, SQ_WAVE_STATUS_HALT_MASK
+    s_branch        L_EXCP_CASE
+
+L_NO_XNACK_ERROR:
     /* read tba and tma for next level trap handler, ttmp4 is used as s_save_status */
     s_getreg_b32    tma_lo,hwreg(HW_REG_SQ_SHADER_TMA_LO)
     s_getreg_b32    tma_hi,hwreg(HW_REG_SQ_SHADER_TMA_HI)
+    s_lshl_b64      [tma_lo, tma_hi], [tma_lo, tma_hi], 0x8
     s_load_dwordx4  [ttmp8,ttmp9, ttmp10, ttmp11], [tma_lo,tma_hi], 0
     s_waitcnt lgkmcnt(0)
     s_or_b32	    ttmp7, ttmp8, ttmp9
@@ -1139,255 +1150,258 @@ end
 #endif
 
 static const uint32_t cwsr_trap_gfx9_hex[] = {
-	0xbf820001, 0xbf820125,
+	0xbf820001, 0xbf82012c,
 	0xb8f0f802, 0x89708670,
-	0xb8f1f803, 0x8671ff71,
-	0x00000400, 0xbf850013,
+	0xb8f1f803, 0x8674ff71,
+	0x00000400, 0xbf85001a,
+	0x8674ff71, 0x10000000,
+	0xbf840003, 0x8770ff70,
+	0x00002000, 0xbf820010,
 	0xb8faf812, 0xb8fbf813,
-	0xc00a1d3d, 0x00000000,
-	0xbf8cc07f, 0x87737574,
-	0xbf840002, 0xb970f802,
-	0xbe801d74, 0xb8f1f803,
-	0x8671ff71, 0x000001ff,
-	0xbf850002, 0x806c846c,
-	0x826d806d, 0x866dff6d,
-	0x0000ffff, 0xb970f802,
-	0xbe801f6c, 0xb8f1f803,
-	0x8671ff71, 0x00000100,
-	0xbf840006, 0xbef60080,
-	0xb9760203, 0x866dff6d,
-	0x0000ffff, 0x80ec886c,
-	0x82ed806d, 0xbef60080,
-	0xb9760283, 0xbef20068,
-	0xbef30069, 0xb8f62407,
-	0x8e769c76, 0x876d766d,
-	0xb8f603c7, 0x8e769b76,
-	0x876d766d, 0xb8f6f807,
-	0x8676ff76, 0x00007fff,
-	0xb976f807, 0xbeee007e,
-	0xbeef007f, 0xbefe0180,
-	0xbf900004, 0xbf8e0002,
-	0xbf88fffe, 0xbef4007e,
-	0x8675ff7f, 0x0000ffff,
-	0x8775ff75, 0x00040000,
-	0xbef60080, 0xbef700ff,
-	0x00807fac, 0x8676ff7f,
-	0x08000000, 0x8f768376,
-	0x87777677, 0x8676ff7f,
-	0x70000000, 0x8f768176,
-	0x87777677, 0xbefb007c,
-	0xbefa0080, 0xb8fa2a05,
-	0x807a817a, 0x8e7a8a7a,
-	0xb8f61605, 0x80768176,
-	0x8e768676, 0x807a767a,
-	0xbef60084, 0xbef600ff,
-	0x01000000, 0xbefe007c,
-	0xbefc007a, 0xc0611efa,
-	0x0000007c, 0x807a847a,
-	0xbefc007e, 0xbefe007c,
-	0xbefc007a, 0xc0611b3a,
-	0x0000007c, 0x807a847a,
-	0xbefc007e, 0xbefe007c,
-	0xbefc007a, 0xc0611b7a,
-	0x0000007c, 0x807a847a,
-	0xbefc007e, 0xbefe007c,
-	0xbefc007a, 0xc0611bba,
-	0x0000007c, 0x807a847a,
-	0xbefc007e, 0xbefe007c,
-	0xbefc007a, 0xc0611bfa,
-	0x0000007c, 0x807a847a,
-	0xbefc007e, 0xbefe007c,
-	0xbefc007a, 0xc0611c3a,
-	0x0000007c, 0x807a847a,
-	0xbefc007e, 0xb8f1f803,
+	0x8efa887a, 0xc00a1d3d,
+	0x00000000, 0xbf8cc07f,
+	0x87737574, 0xbf840002,
+	0xb970f802, 0xbe801d74,
+	0xb8f1f803, 0x8671ff71,
+	0x000001ff, 0xbf850002,
+	0x806c846c, 0x826d806d,
+	0x866dff6d, 0x0000ffff,
+	0xb970f802, 0xbe801f6c,
+	0xb8f1f803, 0x8671ff71,
+	0x00000100, 0xbf840006,
+	0xbef60080, 0xb9760203,
+	0x866dff6d, 0x0000ffff,
+	0x80ec886c, 0x82ed806d,
+	0xbef60080, 0xb9760283,
+	0xbef20068, 0xbef30069,
+	0xb8f62407, 0x8e769c76,
+	0x876d766d, 0xb8f603c7,
+	0x8e769b76, 0x876d766d,
+	0xb8f6f807, 0x8676ff76,
+	0x00007fff, 0xb976f807,
+	0xbeee007e, 0xbeef007f,
+	0xbefe0180, 0xbf900004,
+	0xbf8e0002, 0xbf88fffe,
+	0xbef4007e, 0x8675ff7f,
+	0x0000ffff, 0x8775ff75,
+	0x00040000, 0xbef60080,
+	0xbef700ff, 0x00807fac,
+	0x8676ff7f, 0x08000000,
+	0x8f768376, 0x87777677,
+	0x8676ff7f, 0x70000000,
+	0x8f768176, 0x87777677,
+	0xbefb007c, 0xbefa0080,
+	0xb8fa2a05, 0x807a817a,
+	0x8e7a8a7a, 0xb8f61605,
+	0x80768176, 0x8e768676,
+	0x807a767a, 0xbef60084,
+	0xbef600ff, 0x01000000,
+	0xbefe007c, 0xbefc007a,
+	0xc0611efa, 0x0000007c,
+	0x807a847a, 0xbefc007e,
+	0xbefe007c, 0xbefc007a,
+	0xc0611b3a, 0x0000007c,
+	0x807a847a, 0xbefc007e,
+	0xbefe007c, 0xbefc007a,
+	0xc0611b7a, 0x0000007c,
+	0x807a847a, 0xbefc007e,
 	0xbefe007c, 0xbefc007a,
-	0xc0611c7a, 0x0000007c,
+	0xc0611bba, 0x0000007c,
 	0x807a847a, 0xbefc007e,
 	0xbefe007c, 0xbefc007a,
-	0xc0611cba, 0x0000007c,
+	0xc0611bfa, 0x0000007c,
 	0x807a847a, 0xbefc007e,
 	0xbefe007c, 0xbefc007a,
-	0xc0611cfa, 0x0000007c,
+	0xc0611c3a, 0x0000007c,
 	0x807a847a, 0xbefc007e,
-	0xb8fbf801, 0xbefe007c,
-	0xbefc007a, 0xc0611efa,
+	0xb8f1f803, 0xbefe007c,
+	0xbefc007a, 0xc0611c7a,
 	0x0000007c, 0x807a847a,
 	0xbefc007e, 0xbefe007c,
-	0xbefc007a, 0xc0611e3a,
+	0xbefc007a, 0xc0611cba,
 	0x0000007c, 0x807a847a,
 	0xbefc007e, 0xbefe007c,
-	0xbefc007a, 0xc0611e7a,
+	0xbefc007a, 0xc0611cfa,
 	0x0000007c, 0x807a847a,
-	0xbefc007e, 0x8676ff7f,
-	0x04000000, 0xbeef0080,
-	0x876f6f76, 0xb8fa2a05,
-	0x807a817a, 0x8e7a8a7a,
-	0xb8f11605, 0x80718171,
-	0x8e718471, 0x8e768271,
-	0xbef600ff, 0x01000000,
-	0xbef20174, 0x80747a74,
-	0xbefc0080, 0xbf800000,
-	0xbe802b00, 0xbe822b02,
-	0xbe842b04, 0xbe862b06,
-	0xbe882b08, 0xbe8a2b0a,
-	0xbe8c2b0c, 0xbe8e2b0e,
-	0xc06b003a, 0x00000000,
-	0xc06b013a, 0x00000010,
-	0xc06b023a, 0x00000020,
-	0xc06b033a, 0x00000030,
-	0x8074c074, 0x82758075,
-	0x807c907c, 0xbf0a717c,
-	0xbf85ffeb, 0xbef40172,
-	0xbefa0080, 0xbefe00c1,
-	0xbeff00c1, 0xbef600ff,
-	0x01000000, 0xe0724000,
-	0x7a1d0000, 0xe0724100,
-	0x7a1d0100, 0xe0724200,
-	0x7a1d0200, 0xe0724300,
-	0x7a1d0300, 0xbefe00c1,
-	0xbeff00c1, 0xb8f14306,
-	0x8671c171, 0xbf84002c,
-	0xbf8a0000, 0x8676ff6f,
-	0x04000000, 0xbf840028,
-	0x8e718671, 0x8e718271,
-	0xbef60071, 0xb8fa2a05,
-	0x807a817a, 0x8e7a8a7a,
-	0xb8f61605, 0x80768176,
-	0x8e768676, 0x807a767a,
-	0x807aff7a, 0x00000080,
-	0xbef600ff, 0x01000000,
-	0xbefc0080, 0xd28c0002,
-	0x000100c1, 0xd28d0003,
-	0x000204c1, 0xd1060002,
-	0x00011103, 0x7e0602ff,
-	0x00000200, 0xbefc00ff,
-	0x00010000, 0xbe800077,
-	0x8677ff77, 0xff7fffff,
-	0x8777ff77, 0x00058000,
-	0xd8ec0000, 0x00000002,
-	0xbf8cc07f, 0xe0765000,
-	0x7a1d0002, 0x68040702,
-	0xd0c9006a, 0x0000e302,
-	0xbf87fff7, 0xbef70000,
-	0xbefa00ff, 0x00000400,
+	0xbefc007e, 0xb8fbf801,
+	0xbefe007c, 0xbefc007a,
+	0xc0611efa, 0x0000007c,
+	0x807a847a, 0xbefc007e,
+	0xbefe007c, 0xbefc007a,
+	0xc0611e3a, 0x0000007c,
+	0x807a847a, 0xbefc007e,
+	0xbefe007c, 0xbefc007a,
+	0xc0611e7a, 0x0000007c,
+	0x807a847a, 0xbefc007e,
+	0x8676ff7f, 0x04000000,
+	0xbeef0080, 0x876f6f76,
+	0xb8fa2a05, 0x807a817a,
+	0x8e7a8a7a, 0xb8f11605,
+	0x80718171, 0x8e718471,
+	0x8e768271, 0xbef600ff,
+	0x01000000, 0xbef20174,
+	0x80747a74, 0xbefc0080,
+	0xbf800000, 0xbe802b00,
+	0xbe822b02, 0xbe842b04,
+	0xbe862b06, 0xbe882b08,
+	0xbe8a2b0a, 0xbe8c2b0c,
+	0xbe8e2b0e, 0xc06b003a,
+	0x00000000, 0xc06b013a,
+	0x00000010, 0xc06b023a,
+	0x00000020, 0xc06b033a,
+	0x00000030, 0x8074c074,
+	0x82758075, 0x807c907c,
+	0xbf0a717c, 0xbf85ffeb,
+	0xbef40172, 0xbefa0080,
 	0xbefe00c1, 0xbeff00c1,
-	0xb8f12a05, 0x80718171,
-	0x8e718271, 0x8e768871,
 	0xbef600ff, 0x01000000,
-	0xbefc0084, 0xbf0a717c,
-	0xbf840015, 0xbf11017c,
-	0x8071ff71, 0x00001000,
-	0x7e000300, 0x7e020301,
-	0x7e040302, 0x7e060303,
 	0xe0724000, 0x7a1d0000,
 	0xe0724100, 0x7a1d0100,
 	0xe0724200, 0x7a1d0200,
 	0xe0724300, 0x7a1d0300,
-	0x807c847c, 0x807aff7a,
-	0x00000400, 0xbf0a717c,
-	0xbf85ffef, 0xbf9c0000,
-	0xbf8200ca, 0xbef4007e,
-	0x8675ff7f, 0x0000ffff,
-	0x8775ff75, 0x00040000,
-	0xbef60080, 0xbef700ff,
-	0x00807fac, 0x8672ff7f,
-	0x08000000, 0x8f728372,
-	0x87777277, 0x8672ff7f,
-	0x70000000, 0x8f728172,
-	0x87777277, 0x8672ff7f,
-	0x04000000, 0xbf84001e,
 	0xbefe00c1, 0xbeff00c1,
-	0xb8ef4306, 0x866fc16f,
-	0xbf840019, 0x8e6f866f,
-	0x8e6f826f, 0xbef6006f,
-	0xb8ee2a05, 0x806e816e,
-	0x8e6e8a6e, 0xb8f21605,
-	0x80728172, 0x8e728672,
-	0x806e726e, 0x806eff6e,
+	0xb8f14306, 0x8671c171,
+	0xbf84002c, 0xbf8a0000,
+	0x8676ff6f, 0x04000000,
+	0xbf840028, 0x8e718671,
+	0x8e718271, 0xbef60071,
+	0xb8fa2a05, 0x807a817a,
+	0x8e7a8a7a, 0xb8f61605,
+	0x80768176, 0x8e768676,
+	0x807a767a, 0x807aff7a,
 	0x00000080, 0xbef600ff,
 	0x01000000, 0xbefc0080,
-	0xe0510000, 0x6e1d0000,
-	0xe0510100, 0x6e1d0000,
-	0x807cff7c, 0x00000200,
-	0x806eff6e, 0x00000200,
-	0xbf0a6f7c, 0xbf85fff6,
-	0xbeee0080, 0xbefe00c1,
-	0xbeff00c1, 0xb8ef2a05,
-	0x806f816f, 0x8e6f826f,
-	0x8e76886f, 0xbef600ff,
-	0x01000000, 0xbef2006e,
-	0x806eff6e, 0x00000400,
-	0xbefc0084, 0xbf11087c,
-	0x806fff6f, 0x00008000,
-	0xe0524000, 0x6e1d0000,
-	0xe0524100, 0x6e1d0100,
-	0xe0524200, 0x6e1d0200,
-	0xe0524300, 0x6e1d0300,
-	0xbf8c0f70, 0x7e000300,
+	0xd28c0002, 0x000100c1,
+	0xd28d0003, 0x000204c1,
+	0xd1060002, 0x00011103,
+	0x7e0602ff, 0x00000200,
+	0xbefc00ff, 0x00010000,
+	0xbe800077, 0x8677ff77,
+	0xff7fffff, 0x8777ff77,
+	0x00058000, 0xd8ec0000,
+	0x00000002, 0xbf8cc07f,
+	0xe0765000, 0x7a1d0002,
+	0x68040702, 0xd0c9006a,
+	0x0000e302, 0xbf87fff7,
+	0xbef70000, 0xbefa00ff,
+	0x00000400, 0xbefe00c1,
+	0xbeff00c1, 0xb8f12a05,
+	0x80718171, 0x8e718271,
+	0x8e768871, 0xbef600ff,
+	0x01000000, 0xbefc0084,
+	0xbf0a717c, 0xbf840015,
+	0xbf11017c, 0x8071ff71,
+	0x00001000, 0x7e000300,
 	0x7e020301, 0x7e040302,
-	0x7e060303, 0x807c847c,
-	0x806eff6e, 0x00000400,
-	0xbf0a6f7c, 0xbf85ffee,
-	0xbf9c0000, 0xe0524000,
-	0x721d0000, 0xe0524100,
-	0x721d0100, 0xe0524200,
-	0x721d0200, 0xe0524300,
-	0x721d0300, 0xb8ee2a05,
-	0x806e816e, 0x8e6e8a6e,
-	0xb8f21605, 0x80728172,
-	0x8e728672, 0x806e726e,
-	0x80eec06e, 0xb8ef1605,
-	0x806f816f, 0x8e6f846f,
-	0x8e76826f, 0xbef600ff,
-	0x01000000, 0xbefc006f,
-	0xc031003a, 0x0000006e,
-	0x80eec06e, 0xbf8cc07f,
-	0x80fc907c, 0xbe802d00,
-	0xbe822d02, 0xbe842d04,
-	0xbe862d06, 0xbe882d08,
-	0xbe8a2d0a, 0xbe8c2d0c,
-	0xbe8e2d0e, 0xbf06807c,
-	0xbf84fff1, 0xb8ee2a05,
+	0x7e060303, 0xe0724000,
+	0x7a1d0000, 0xe0724100,
+	0x7a1d0100, 0xe0724200,
+	0x7a1d0200, 0xe0724300,
+	0x7a1d0300, 0x807c847c,
+	0x807aff7a, 0x00000400,
+	0xbf0a717c, 0xbf85ffef,
+	0xbf9c0000, 0xbf8200ca,
+	0xbef4007e, 0x8675ff7f,
+	0x0000ffff, 0x8775ff75,
+	0x00040000, 0xbef60080,
+	0xbef700ff, 0x00807fac,
+	0x8672ff7f, 0x08000000,
+	0x8f728372, 0x87777277,
+	0x8672ff7f, 0x70000000,
+	0x8f728172, 0x87777277,
+	0x8672ff7f, 0x04000000,
+	0xbf84001e, 0xbefe00c1,
+	0xbeff00c1, 0xb8ef4306,
+	0x866fc16f, 0xbf840019,
+	0x8e6f866f, 0x8e6f826f,
+	0xbef6006f, 0xb8ee2a05,
 	0x806e816e, 0x8e6e8a6e,
 	0xb8f21605, 0x80728172,
 	0x8e728672, 0x806e726e,
-	0xbef60084, 0xbef600ff,
-	0x01000000, 0xc0211bfa,
+	0x806eff6e, 0x00000080,
+	0xbef600ff, 0x01000000,
+	0xbefc0080, 0xe0510000,
+	0x6e1d0000, 0xe0510100,
+	0x6e1d0000, 0x807cff7c,
+	0x00000200, 0x806eff6e,
+	0x00000200, 0xbf0a6f7c,
+	0xbf85fff6, 0xbeee0080,
+	0xbefe00c1, 0xbeff00c1,
+	0xb8ef2a05, 0x806f816f,
+	0x8e6f826f, 0x8e76886f,
+	0xbef600ff, 0x01000000,
+	0xbef2006e, 0x806eff6e,
+	0x00000400, 0xbefc0084,
+	0xbf11087c, 0x806fff6f,
+	0x00008000, 0xe0524000,
+	0x6e1d0000, 0xe0524100,
+	0x6e1d0100, 0xe0524200,
+	0x6e1d0200, 0xe0524300,
+	0x6e1d0300, 0xbf8c0f70,
+	0x7e000300, 0x7e020301,
+	0x7e040302, 0x7e060303,
+	0x807c847c, 0x806eff6e,
+	0x00000400, 0xbf0a6f7c,
+	0xbf85ffee, 0xbf9c0000,
+	0xe0524000, 0x721d0000,
+	0xe0524100, 0x721d0100,
+	0xe0524200, 0x721d0200,
+	0xe0524300, 0x721d0300,
+	0xb8ee2a05, 0x806e816e,
+	0x8e6e8a6e, 0xb8f21605,
+	0x80728172, 0x8e728672,
+	0x806e726e, 0x80eec06e,
+	0xb8ef1605, 0x806f816f,
+	0x8e6f846f, 0x8e76826f,
+	0xbef600ff, 0x01000000,
+	0xbefc006f, 0xc031003a,
+	0x0000006e, 0x80eec06e,
+	0xbf8cc07f, 0x80fc907c,
+	0xbe802d00, 0xbe822d02,
+	0xbe842d04, 0xbe862d06,
+	0xbe882d08, 0xbe8a2d0a,
+	0xbe8c2d0c, 0xbe8e2d0e,
+	0xbf06807c, 0xbf84fff1,
+	0xb8ee2a05, 0x806e816e,
+	0x8e6e8a6e, 0xb8f21605,
+	0x80728172, 0x8e728672,
+	0x806e726e, 0xbef60084,
+	0xbef600ff, 0x01000000,
+	0xc0211bfa, 0x0000006e,
+	0x806e846e, 0xc0211b3a,
 	0x0000006e, 0x806e846e,
-	0xc0211b3a, 0x0000006e,
-	0x806e846e, 0xc0211b7a,
+	0xc0211b7a, 0x0000006e,
+	0x806e846e, 0xc0211eba,
 	0x0000006e, 0x806e846e,
-	0xc0211eba, 0x0000006e,
-	0x806e846e, 0xc0211efa,
+	0xc0211efa, 0x0000006e,
+	0x806e846e, 0xc0211c3a,
 	0x0000006e, 0x806e846e,
-	0xc0211c3a, 0x0000006e,
-	0x806e846e, 0xc0211c7a,
+	0xc0211c7a, 0x0000006e,
+	0x806e846e, 0xc0211a3a,
 	0x0000006e, 0x806e846e,
-	0xc0211a3a, 0x0000006e,
-	0x806e846e, 0xc0211a7a,
+	0xc0211a7a, 0x0000006e,
+	0x806e846e, 0xc0211cfa,
 	0x0000006e, 0x806e846e,
-	0xc0211cfa, 0x0000006e,
-	0x806e846e, 0xc0211e3a,
+	0xc0211e3a, 0x0000006e,
+	0x806e846e, 0xc0211e7a,
 	0x0000006e, 0x806e846e,
-	0xc0211e7a, 0x0000006e,
-	0x806e846e, 0xbf8cc07f,
-	0x866dff6d, 0x0000ffff,
-	0xbefc006f, 0xbefe007a,
-	0xbeff007b, 0x866f71ff,
-	0x000003ff, 0xb96f4803,
-	0x866f71ff, 0xfffff800,
-	0x8f6f8b6f, 0xb96fa2c3,
-	0xb973f801, 0x866fff6d,
-	0xf0000000, 0x8f6f9c6f,
-	0x8e6f906f, 0xbef20080,
-	0x87726f72, 0x866fff6d,
-	0x08000000, 0x8f6f9b6f,
-	0x8e6f8f6f, 0x87726f72,
-	0x866fff70, 0x00800000,
-	0x8f6f976f, 0xb972f807,
-	0x86fe7e7e, 0x86ea6a6a,
-	0xb970f802, 0xbf8a0000,
-	0x95806f6c, 0xbf810000,
-	0x00000000, 0x00000000,
+	0xbf8cc07f, 0x866dff6d,
+	0x0000ffff, 0xbefc006f,
+	0xbefe007a, 0xbeff007b,
+	0x866f71ff, 0x000003ff,
+	0xb96f4803, 0x866f71ff,
+	0xfffff800, 0x8f6f8b6f,
+	0xb96fa2c3, 0xb973f801,
+	0x866fff6d, 0xf0000000,
+	0x8f6f9c6f, 0x8e6f906f,
+	0xbef20080, 0x87726f72,
+	0x866fff6d, 0x08000000,
+	0x8f6f9b6f, 0x8e6f8f6f,
+	0x87726f72, 0x866fff70,
+	0x00800000, 0x8f6f976f,
+	0xb972f807, 0x86fe7e7e,
+	0x86ea6a6a, 0xb970f802,
+	0xbf8a0000, 0x95806f6c,
+	0xbf810000, 0x00000000,
 };
 
-- 
2.7.4

