From 64dd77f7a0886fdc805c8fcbe63d45e4e964aed4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>
Date: Thu, 24 Mar 2016 13:49:45 +0100
Subject: [PATCH 1005/1110] drm/amd/dal: remove dead functions prototype.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Seriously ...

Signed-off-by: Jérôme Glisse <jglisse@redhat.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
---
 .../gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.h    |   5 -
 drivers/gpu/drm/amd/dal/dal_services.h             |  12 -
 drivers/gpu/drm/amd/dal/dc/audio/audio.h           |   4 -
 drivers/gpu/drm/amd/dal/dc/dc.h                    |   2 -
 .../gpu/drm/amd/dal/dc/dce110/dce110_compressor.h  |   5 -
 .../gpu/drm/amd/dal/dc/dce110/dce110_transform.h   |   5 -
 .../amd/dal/dc/dce110/dce110_transform_bit_depth.h |   4 -
 .../gpu/drm/amd/dal/dc/dce112/dce112_compressor.h  |   5 -
 .../gpu/drm/amd/dal/dc/dce80/dce80_compressor.h    |   5 -
 drivers/gpu/drm/amd/dal/dc/dce80/dce80_transform.h |   5 -
 drivers/gpu/drm/amd/dal/dc/dm_services.h           |  10 -
 .../drm/amd/dal/include/bios_parser_interface.h    |  19 --
 .../drm/amd/dal/include/display_path_interface.h   | 249 ---------------------
 drivers/gpu/drm/amd/dal/include/dmcu_interface.h   |  38 ----
 .../gpu/drm/amd/dal/include/encoder_interface.h    |  16 --
 .../drm/amd/dal/include/hw_sequencer_interface.h   | 146 ------------
 .../drm/amd/dal/include/link_service_interface.h   | 144 ------------
 17 files changed, 674 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.h b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.h
index 8f65194..7b400d1 100644
--- a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.h
+++ b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.h
@@ -50,11 +50,6 @@ void amdgpu_dm_crtc_destroy(struct drm_crtc *crtc);
 void amdgpu_dm_connector_destroy(struct drm_connector *connector);
 void amdgpu_dm_encoder_destroy(struct drm_encoder *encoder);
 
-void dm_add_display_info(
-	struct drm_display_info *disp_info,
-	struct amdgpu_display_manager *dm,
-	uint32_t display_index);
-
 int amdgpu_dm_connector_get_modes(struct drm_connector *connector);
 
 int amdgpu_dm_atomic_commit(
diff --git a/drivers/gpu/drm/amd/dal/dal_services.h b/drivers/gpu/drm/amd/dal/dal_services.h
index 398e4e5..fbd1fb2 100644
--- a/drivers/gpu/drm/amd/dal/dal_services.h
+++ b/drivers/gpu/drm/amd/dal/dal_services.h
@@ -61,14 +61,8 @@ void dal_register_timer_interrupt(
 /* Reallocate memory. The contents will remain unchanged.*/
 void *dc_service_realloc(struct dc_context *ctx, const void *ptr, uint32_t size);
 
-void dc_service_memmove(void *dst, const void *src, uint32_t size);
-
 void dc_service_memset(void *p, int32_t c, uint32_t count);
 
-int32_t dal_memcmp(const void *p1, const void *p2, uint32_t count);
-
-int32_t dal_strncmp(const int8_t *p1, const int8_t *p2, uint32_t count);
-
 /*
  *
  * GPU registers access
@@ -178,11 +172,6 @@ struct platform_info_ext_brightness_caps {
 	uint8_t	max_input_signal;
 };
 
-bool dal_get_platform_info(
-	struct dc_context *ctx,
-	struct platform_info_params *params);
-
-
 static inline uint32_t dal_bios_cmd_table_para_revision(
 	struct dc_context *ctx,
 	uint32_t index)
@@ -255,7 +244,6 @@ bool dal_exec_bios_cmd_table(
 	vsnprintf(buffer, size, fmt, args)
 
 long dal_get_pid(void);
-long dal_get_tgid(void);
 
 /*
  *
diff --git a/drivers/gpu/drm/amd/dal/dc/audio/audio.h b/drivers/gpu/drm/amd/dal/dc/audio/audio.h
index 7ca71eb..bf09a13 100644
--- a/drivers/gpu/drm/amd/dal/dc/audio/audio.h
+++ b/drivers/gpu/drm/amd/dal/dc/audio/audio.h
@@ -186,8 +186,4 @@ bool dal_audio_construct_base(
 void dal_audio_destruct_base(
 	struct audio *audio);
 
-void dal_audio_release_hw_base(
-	struct audio *audio);
-
 #endif  /* __DAL_AUDIO__ */
-
diff --git a/drivers/gpu/drm/amd/dal/dc/dc.h b/drivers/gpu/drm/amd/dal/dc/dc.h
index dbc972f..d5bb183 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc.h
+++ b/drivers/gpu/drm/amd/dal/dc/dc.h
@@ -250,8 +250,6 @@ bool dc_target_is_connected_to_sink(
 		const struct dc_target *dc_target,
 		const struct dc_sink *dc_sink);
 
-uint8_t dc_target_get_controller_id(const struct dc_target *dc_target);
-
 uint32_t dc_target_get_vblank_counter(const struct dc_target *dc_target);
 
 /* TODO: Return parsed values rather than direct register read
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_compressor.h b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_compressor.h
index 0beef22..86c30d4 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_compressor.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_compressor.h
@@ -63,11 +63,6 @@ void dce110_compressor_program_compressed_surface_address_and_pitch(
 	struct compressor *cp,
 	struct compr_addr_and_pitch_params *params);
 
-bool dce110_compressor_get_required_compressed_surface_size(
-	struct compressor *cp,
-	struct fbc_input_info *input_info,
-	struct fbc_requested_compressed_size *size);
-
 bool dce110_compressor_is_fbc_enabled_in_hw(struct compressor *cp,
 	uint32_t *fbc_mapped_crtc_id);
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform.h b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform.h
index e906fbf..f97d7ab 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform.h
@@ -58,11 +58,6 @@ bool dce110_transform_set_scaler(
 
 void dce110_transform_set_scaler_bypass(struct transform *xfm);
 
-bool dce110_transform_update_viewport(
-	struct transform *xfm,
-	const struct rect *view_port,
-	bool is_fbc_attached);
-
 void dce110_transform_set_scaler_filter(
 	struct transform *xfm,
 	struct scaler_filter *filter);
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform_bit_depth.h b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform_bit_depth.h
index ff100cc..71f1c3a 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform_bit_depth.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform_bit_depth.h
@@ -35,10 +35,6 @@ bool dce110_transform_get_max_num_of_supported_lines(
 	uint32_t pixel_width,
 	uint32_t *lines);
 
-void dce110_transform_enable_alpha(
-	struct dce110_transform *xfm110,
-	bool enable);
-
 bool dce110_transform_get_next_lower_pixel_storage_depth(
 	struct dce110_transform *xfm110,
 	uint32_t display_bpp,
diff --git a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_compressor.h b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_compressor.h
index bcf4480..6a0efe8 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_compressor.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_compressor.h
@@ -63,11 +63,6 @@ void dce112_compressor_program_compressed_surface_address_and_pitch(
 	struct compressor *cp,
 	struct compr_addr_and_pitch_params *params);
 
-bool dce112_compressor_get_required_compressed_surface_size(
-	struct compressor *cp,
-	struct fbc_input_info *input_info,
-	struct fbc_requested_compressed_size *size);
-
 bool dce112_compressor_is_fbc_enabled_in_hw(struct compressor *cp,
 	uint32_t *fbc_mapped_crtc_id);
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_compressor.h b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_compressor.h
index 8254118..f5f357c 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_compressor.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_compressor.h
@@ -63,11 +63,6 @@ void dce80_compressor_program_compressed_surface_address_and_pitch(
 	struct compressor *cp,
 	struct compr_addr_and_pitch_params *params);
 
-bool dce80_compressor_get_required_compressed_surface_size(
-	struct compressor *cp,
-	struct fbc_input_info *input_info,
-	struct fbc_requested_compressed_size *size);
-
 bool dce80_compressor_is_fbc_enabled_in_hw(struct compressor *cp,
 	uint32_t *fbc_mapped_crtc_id);
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_transform.h b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_transform.h
index b719546..58b3ee4 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_transform.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_transform.h
@@ -58,11 +58,6 @@ bool dce80_transform_set_scaler(
 
 void dce80_transform_set_scaler_bypass(struct transform *xfm);
 
-bool dce80_transform_update_viewport(
-	struct transform *xfm,
-	const struct rect *view_port,
-	bool is_fbc_attached);
-
 void dce80_transform_set_scaler_filter(
 	struct transform *xfm,
 	struct scaler_filter *filter);
diff --git a/drivers/gpu/drm/amd/dal/dc/dm_services.h b/drivers/gpu/drm/amd/dal/dc/dm_services.h
index 4c45a66..5347371 100644
--- a/drivers/gpu/drm/amd/dal/dc/dm_services.h
+++ b/drivers/gpu/drm/amd/dal/dc/dm_services.h
@@ -48,10 +48,6 @@ irq_handler_idx dm_register_interrupt(
 	interrupt_handler ih,
 	void *handler_args);
 
-void dm_unregister_interrupt(
-	struct dc_context *ctx,
-	enum dc_irq_source irq_source,
-	irq_handler_idx handler_idx);
 
 /*
  *
@@ -156,12 +152,6 @@ bool dm_exec_bios_cmd_table(
 uint32_t dm_bios_cmd_table_para_revision(
 struct dc_context *ctx,
 	uint32_t index);
-
-bool dm_bios_cmd_table_revision(
-	struct dc_context *ctx,
-	uint32_t index,
-	uint8_t *frev,
-	uint8_t *crev);
 #endif
 
 #ifndef BUILD_DAL_TEST
diff --git a/drivers/gpu/drm/amd/dal/include/bios_parser_interface.h b/drivers/gpu/drm/amd/dal/include/bios_parser_interface.h
index e4291b9..d589e8d 100644
--- a/drivers/gpu/drm/amd/dal/include/bios_parser_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/bios_parser_interface.h
@@ -51,8 +51,6 @@ bool dal_bios_parser_is_lid_status_changed(
 	struct bios_parser *bp);
 bool dal_bios_parser_is_display_config_changed(
 	struct bios_parser *bp);
-bool dal_bios_parser_is_accelerated_mode(
-	struct bios_parser *bp);
 void dal_bios_parser_set_scratch_lcd_scale(
 	struct bios_parser *bp,
 	enum lcd_scale scale);
@@ -77,22 +75,5 @@ enum controller_id dal_bios_parser_get_embedded_display_controller_id(
 	struct bios_parser *bp);
 uint32_t dal_bios_parser_get_embedded_display_refresh_rate(
 	struct bios_parser *bp);
-void dal_bios_parser_set_scratch_connected(
-	struct bios_parser *bp,
-	struct graphics_object_id connector_id,
-	bool connected,
-	const struct connector_device_tag_info *device_tag);
-void dal_bios_parser_prepare_scratch_active_and_requested(
-	struct bios_parser *bp,
-	enum controller_id controller_id,
-	enum signal_type signal,
-	const struct connector_device_tag_info *device_tag);
-void dal_bios_parser_set_scratch_active_and_requested(
-	struct bios_parser *bp);
-void dal_bios_parser_set_scratch_critical_state(
-	struct bios_parser *bp,
-	bool state);
-void dal_bios_parser_set_scratch_acc_mode_change(
-	struct bios_parser *bp);
 
 #endif /* __DAL_BIOS_PARSER_INTERFACE_H__ */
diff --git a/drivers/gpu/drm/amd/dal/include/display_path_interface.h b/drivers/gpu/drm/amd/dal/include/display_path_interface.h
index 7bf2ef2..73831be 100644
--- a/drivers/gpu/drm/amd/dal/include/display_path_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/display_path_interface.h
@@ -49,186 +49,37 @@ struct display_path *dal_display_path_clone(
 	const struct display_path *self,
 	bool copy_active_state);
 
-void dal_display_path_destroy(
-	struct display_path **to_destroy);
-
-bool dal_display_path_validate(
-	struct display_path *path,
-	enum signal_type sink_signal);
-
-bool dal_display_path_add_link(
-	struct display_path *path,
-	struct encoder *encoder);
-
-bool dal_display_path_add_connector(
-	struct display_path *path,
-	struct connector *connector);
-
 struct connector *dal_display_path_get_connector(
 	struct display_path *path);
 
-int32_t dal_display_path_acquire(
-	struct display_path *path);
-
-bool dal_display_path_is_acquired(
-	const struct display_path *path);
-
-int32_t dal_display_path_get_ref_counter(
-	const struct display_path *path);
-
-int32_t dal_display_path_release(
-	struct display_path *path);
-
-void dal_display_path_release_resources(
-	struct display_path *path);
-
-void dal_display_path_acquire_links(
-	struct display_path *path);
-
-bool dal_display_path_is_source_blanked(
-	const struct display_path *path);
-
-bool dal_display_path_is_source_unblanked(
-	const struct display_path *path);
-
-void dal_display_path_set_source_blanked(
-	struct display_path *path,
-	enum display_tri_state state);
-
-bool dal_display_path_is_target_blanked(
-	const struct display_path *path);
-
-bool dal_display_path_is_target_unblanked(
-	const struct display_path *path);
-
-void dal_display_path_set_target_blanked(
-	struct display_path *path,
-	enum display_tri_state state);
-
-bool dal_display_path_is_target_powered_on(
-	const struct display_path *path);
-
-bool dal_display_path_is_target_powered_off(
-	const struct display_path *path);
-
-void dal_display_path_set_target_powered_on(
-	struct display_path *path,
-	enum display_tri_state state);
-
-bool dal_display_path_is_target_connected(
-	const struct display_path *path);
-
-void dal_display_path_set_target_connected(
-	struct display_path *path,
-	bool c);
-
-uint32_t dal_display_path_get_display_index(
-	const struct display_path *path);
-
-void dal_display_path_set_display_index(
-	struct display_path *path,
-	uint32_t index);
-
 struct connector_device_tag_info *dal_display_path_get_device_tag(
 	struct display_path *path);
 
-void dal_display_path_set_device_tag(
-	struct display_path *path,
-	struct connector_device_tag_info tag);
-
 enum clock_sharing_group dal_display_path_get_clock_sharing_group(
 	const struct display_path *path);
 
-void dal_display_path_set_clock_sharing_group(
-	struct display_path *path,
-	enum clock_sharing_group clock);
-
 union display_path_properties dal_display_path_get_properties(
 	const struct display_path *path);
 
-void dal_display_path_set_properties(
-	struct display_path *path,
-	union display_path_properties p);
-
 struct dcs *dal_display_path_get_dcs(
 	const struct display_path *path);
 
-void dal_display_path_set_dcs(
-	struct display_path *path,
-	struct dcs *dcs);
-
-uint32_t dal_display_path_get_number_of_links(
-	const struct display_path *path);
-
-void dal_display_path_set_controller(
-	struct display_path *path,
-	struct controller *controller);
-
 struct controller *dal_display_path_get_controller(
 	const struct display_path *path);
 
-void dal_display_path_set_clock_source(
-	struct display_path *path,
-	struct clock_source *clock);
-
 struct clock_source *dal_display_path_get_clock_source(
 	const struct display_path *path);
 
-void dal_display_path_set_alt_clock_source(
-	struct display_path *path,
-	struct clock_source *clock);
-
 struct clock_source *dal_display_path_get_alt_clock_source(
 	const struct display_path *path);
 
-void dal_display_path_set_fbc_info(
-	struct display_path *path,
-	struct fbc_info *clock);
-
 struct fbc_info *dal_display_path_get_fbc_info(
 	struct display_path *path);
 
-void dal_display_path_set_drr_config(
-	struct display_path *path,
-	struct drr_config *clock);
-
-void dal_display_path_get_drr_config(
-	const struct display_path *path,
-	struct drr_config *clock);
-
-void dal_display_path_set_static_screen_triggers(
-	struct display_path *path,
-	const struct static_screen_events *events);
-
-void dal_display_path_get_static_screen_triggers(
-	const struct display_path *path,
-	struct static_screen_events *events);
-
-bool dal_display_path_is_psr_supported(
-	const struct display_path *path);
-
-bool dal_display_path_is_drr_supported(
-	const struct display_path *path);
-
-void dal_display_path_set_link_service_data(
-	struct display_path *path,
-	uint32_t idx,
-	const struct goc_link_service_data *data);
-
-bool dal_display_path_get_link_service_data(
-	const struct display_path *path,
-	uint32_t idx,
-	struct goc_link_service_data *data);
-
 struct link_service *dal_display_path_get_link_query_interface(
 	const struct display_path *path,
 	uint32_t idx);
 
-void dal_display_path_set_link_query_interface(
-	struct display_path *path,
-	uint32_t idx,
-	struct link_service *link);
-
 struct link_service *dal_display_path_get_link_config_interface(
 	const struct display_path *path,
 	uint32_t idx);
@@ -257,38 +108,14 @@ struct audio *dal_display_path_get_audio(
 	const struct display_path *path,
 	uint32_t idx);
 
-void dal_display_path_set_audio(
-	struct display_path *path,
-	uint32_t idx,
-	struct audio *a);
-
 struct audio *dal_display_path_get_audio_object(
 	const struct display_path *path,
 	uint32_t idx);
 
-void dal_display_path_set_audio_active_state(
-	struct display_path *path,
-	uint32_t idx,
-	bool state);
-
 enum engine_id dal_display_path_get_stream_engine(
 	const struct display_path *path,
 	uint32_t idx);
 
-void dal_display_path_set_stream_engine(
-	struct display_path *path,
-	uint32_t idx,
-	enum engine_id id);
-
-bool dal_display_path_is_link_active(
-	const struct display_path *path,
-	uint32_t idx);
-
-void dal_display_path_set_link_active_state(
-	struct display_path *path,
-	uint32_t idx,
-	bool state);
-
 enum signal_type dal_display_path_get_config_signal(
 	const struct display_path *path,
 	uint32_t idx);
@@ -300,50 +127,18 @@ enum signal_type dal_display_path_get_query_signal(
 struct link_service *dal_display_path_get_mst_link_service(
 	const struct display_path *path);
 
-void dal_display_path_set_sync_output_object(
-	struct display_path *path,
-	enum sync_source o_source,
-	struct encoder *o_object);
-
 struct encoder *dal_display_path_get_sync_output_object(
 	const struct display_path *path);
 
-void dal_display_path_set_stereo_sync_object(
-	struct display_path *path,
-	struct encoder *stereo_sync);
-
 struct encoder *dal_display_path_get_stereo_sync_object(
 	const struct display_path *path);
 
-void dal_display_path_set_sync_input_source(
-	struct display_path *path,
-	enum sync_source s);
-
 enum sync_source dal_display_path_get_sync_input_source(
 	const struct display_path *path);
 
-void dal_display_path_set_sync_output_source(
-	struct display_path *path,
-	enum sync_source s);
-
 enum sync_source dal_display_path_get_sync_output_source(
 	const struct display_path *path);
 
-bool dal_display_path_set_pixel_clock_safe_range(
-	struct display_path *path,
-	struct pixel_clock_safe_range *range);
-
-bool dal_display_path_get_pixel_clock_safe_range(
-	const struct display_path *path,
-	struct pixel_clock_safe_range *range);
-
-void dal_display_path_set_ddi_channel_mapping(
-	struct display_path *path,
-	union ddi_channel_mapping mapping);
-
-bool dal_display_path_set_sink_signal(
-	struct display_path *path,
-	enum signal_type sink_signal);
 
 enum signal_type dal_display_path_sink_signal_to_asic_signal(
 	struct display_path *path,
@@ -359,44 +154,13 @@ enum signal_type dal_display_path_downstream_to_upstream_signal(
 	enum signal_type signal,
 	uint32_t idx);
 
-bool dal_display_path_is_audio_present(
-	const struct display_path *path,
-	uint32_t *audio_pin);
-
-bool dal_display_path_is_dp_auth_supported(
-	struct display_path *path);
-
-bool dal_display_path_is_vce_supported(
-	const struct display_path *path);
-
-bool dal_display_path_is_sls_capable(
-	const struct display_path *path);
-
-bool dal_display_path_is_gen_lock_capable(
-	const struct display_path *path);
-
-struct transmitter_configuration dal_display_path_get_transmitter_configuration(
-	const struct display_path *path,
-	bool physical);
-
 bool dal_display_path_is_ss_supported(
 	const struct display_path *path);
 
-bool dal_display_path_is_ss_configurable(
-	const struct display_path *path);
-
-void dal_display_path_set_ss_support(
-	struct display_path *path,
-	bool s);
-
 enum signal_type dal_display_path_get_active_signal(
 	struct display_path *path,
 	uint32_t idx);
 
-bool dal_display_path_contains_object(
-	struct display_path *path,
-	struct graphics_object_id id);
-
 /* Multi-plane declarations.
  * This structure should also be used for Stereo. */
 struct display_path_plane {
@@ -412,13 +176,6 @@ struct display_path_plane {
 	bool disabled;
 };
 
-bool dal_display_path_add_plane(
-	struct display_path *path,
-	struct display_path_plane *plane);
-
-uint8_t dal_display_path_get_number_of_planes(
-	const struct display_path *path);
-
 struct display_path_plane *dal_display_path_get_plane_at_index(
 	const struct display_path *path,
 	uint8_t index);
@@ -427,10 +184,4 @@ struct controller *dal_display_path_get_controller_for_layer_index(
 	const struct display_path *path,
 	uint8_t layer_index);
 
-void dal_display_path_release_planes(
-	struct display_path *path);
-
-void dal_display_path_release_non_root_planes(
-	struct display_path *path);
-
 #endif /* __DISPLAY_PATH_INTERFACE_H__ */
diff --git a/drivers/gpu/drm/amd/dal/include/dmcu_interface.h b/drivers/gpu/drm/amd/dal/include/dmcu_interface.h
index c712cc2..78709a7 100644
--- a/drivers/gpu/drm/amd/dal/include/dmcu_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/dmcu_interface.h
@@ -34,54 +34,16 @@
 /* DMCU setup related interface functions */
 struct dmcu *dal_dmcu_create(
 	struct dmcu_init_data *init_data);
-void dal_dmcu_destroy(struct dmcu **dmcu);
-void dal_dmcu_release_hw(struct dmcu *dmcu);
-
-void dal_dmcu_power_up(struct dmcu *dmcu);
-void dal_dmcu_power_down(struct dmcu *dmcu);
-
-void dal_dmcu_configure_wait_loop(
-		struct dmcu *dmcu,
-		uint32_t display_clock);
 
 /* PSR feature related interface functions */
 void dal_dmcu_psr_setup(
 		struct dmcu *dmcu,
 		struct dmcu_context *dmcu_context);
-void dal_dmcu_psr_enable(struct dmcu *dmcu);
-void dal_dmcu_psr_disable(struct dmcu *dmcu);
-void dal_dmcu_psr_block(struct dmcu *dmcu, bool block_psr);
-bool dal_dmcu_psr_is_blocked(struct dmcu *dmcu);
-void dal_dmcu_psr_set_level(
-		struct dmcu *dmcu,
-		union dmcu_psr_level psr_level);
-void dal_dmcu_psr_allow_power_down_crtc(
-		struct dmcu *dmcu,
-		bool should_allow_crtc_power_down);
-bool dal_dmcu_psr_submit_command(
-		struct dmcu *dmcu,
-		struct dmcu_context *dmcu_context,
-		struct dmcu_config_data *config_data);
-void dal_dmcu_psr_get_config_data(
-		struct dmcu *dmcu,
-		uint32_t v_total,
-		struct dmcu_config_data *config_data);
 
 /* ABM feature related interface functions */
 void dal_dmcu_abm_enable(
 		struct dmcu *dmcu,
 		enum controller_id controller_id,
 		uint32_t vsync_rate_hz);
-void dal_dmcu_abm_disable(struct dmcu *dmcu);
-bool dal_dmcu_abm_enable_smooth_brightness(struct dmcu *dmcu);
-bool dal_dmcu_abm_disable_smooth_brightness(struct dmcu *dmcu);
-void dal_dmcu_abm_varibright_control(
-		struct dmcu *dmcu,
-		const struct varibright_control *varibright_control);
-bool dal_dmcu_abm_set_backlight_level(
-		struct dmcu *dmcu,
-		uint8_t backlight_8_bit);
-uint8_t dal_dmcu_abm_get_user_backlight_level(struct dmcu *dmcu);
-uint8_t dal_dmcu_abm_get_current_backlight_level(struct dmcu *dmcu);
 
 #endif /* __DAL_DMCU_INTERFACE_H__ */
diff --git a/drivers/gpu/drm/amd/dal/include/encoder_interface.h b/drivers/gpu/drm/amd/dal/include/encoder_interface.h
index 5fbf816..311ccf8 100644
--- a/drivers/gpu/drm/amd/dal/include/encoder_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/encoder_interface.h
@@ -62,20 +62,6 @@ const struct graphics_object_id dal_encoder_get_graphics_object_id(
  */
 uint32_t dal_encoder_enumerate_input_signals(
 	const struct encoder *enc);
-uint32_t dal_encoder_enumerate_output_signals(
-	const struct encoder *enc);
-bool dal_encoder_is_input_signal_supported(
-	const struct encoder *enc,
-	enum signal_type signal);
-bool dal_encoder_is_output_signal_supported(
-	const struct encoder *enc,
-	enum signal_type signal);
-void dal_encoder_set_input_signals(
-	struct encoder *enc,
-	uint32_t signals);
-void dal_encoder_set_output_signals(
-	struct encoder *enc,
-	uint32_t signals);
 
 /*
  * Programming interface
@@ -143,7 +129,6 @@ enum encoder_result dal_encoder_set_dp_phy_pattern(
 	struct encoder *enc,
 	const struct encoder_set_dp_phy_pattern_param *param);
 
-void dal_encoder_release_hw(struct encoder *enc);
 /*
  * Information interface
  */
@@ -238,7 +223,6 @@ enum encoder_result dal_encoder_enable_stream(
 enum encoder_result dal_encoder_disable_stream(
 	struct encoder *enc,
 	enum engine_id engine);
-void dal_encoder_set_multi_path(struct encoder *enc, bool is_multi_path);
 /*
  * Test harness
  */
diff --git a/drivers/gpu/drm/amd/dal/include/hw_sequencer_interface.h b/drivers/gpu/drm/amd/dal/include/hw_sequencer_interface.h
index ddd78d6..4238eb0 100644
--- a/drivers/gpu/drm/amd/dal/include/hw_sequencer_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/hw_sequencer_interface.h
@@ -99,16 +99,6 @@ struct hw_path_mode;
 struct hwss_build_params;
 struct controller;
 
-void dal_hw_sequencer_mute_audio_endpoint(
-	struct hw_sequencer *hws,
-	struct display_path *display_path,
-	bool mute);
-
-void dal_hw_sequencer_enable_audio_endpoint(
-	struct hw_sequencer *hws,
-	struct link_settings *ls,
-	struct display_path *display_path,
-	bool enable);
 
 enum hwss_result dal_hw_sequencer_reset_audio_device(
 	struct hw_sequencer *hws,
@@ -118,11 +108,6 @@ enum hwss_result dal_hw_sequencer_validate_link(
 	struct hw_sequencer *hws,
 	const struct validate_link_param *param);
 
-bool dal_hw_sequencer_is_supported_dp_training_pattern3(
-	struct hw_sequencer *hws,
-	struct display_path *display_path,
-	uint32_t link_idx);
-
 enum hwss_result dal_hw_sequencer_set_dp_phy_pattern(
 	struct hw_sequencer *hws,
 	const struct set_dp_phy_pattern_param *param);
@@ -132,35 +117,6 @@ enum hwss_result dal_hw_sequencer_set_lane_settings(
 	struct display_path *display_path,
 	const struct link_training_settings *link_settings);
 
-void dal_hw_sequencer_set_test_pattern(
-	struct hw_sequencer *hws,
-	struct hw_path_mode *path_mode,
-	enum dp_test_pattern test_pattern,
-	const struct link_training_settings *link_settings,
-	const uint8_t *custom_pattern,
-	uint8_t cust_pattern_size);
-
-bool dal_hw_sequencer_has_audio_bandwidth_changed(
-	struct hw_sequencer *hws,
-	const struct hw_path_mode *old,
-	const struct hw_path_mode *new);
-
-void dal_hw_sequencer_enable_azalia_audio_jack_presence(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-void dal_hw_sequencer_disable_azalia_audio_jack_presence(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-void dal_hw_sequencer_enable_memory_requests(
-	struct hw_sequencer *hws,
-	struct hw_path_mode *path_mode);
-
-void dal_hw_sequencer_update_info_packets(
-	struct hw_sequencer *hws,
-	struct hw_path_mode *path_mode);
-
 /* Static validation for a SINGLE path mode.
  * Already "active" paths (if any) are NOT taken into account. */
 enum hwss_result dal_hw_sequencer_validate_display_path_mode(
@@ -213,34 +169,10 @@ enum hwss_result dal_hw_sequencer_set_backlight_adjustment(
 	struct display_path *display_path,
 	struct hw_adjustment_value *adjustment);
 
-void dal_hw_sequencer_disable_memory_requests(
-	struct hw_sequencer *hws,
-	const struct hw_path_mode *path_mode);
-
 enum hwss_result dal_hw_sequencer_enable_link(
 	struct hw_sequencer *hws,
 	const struct enable_link_param *in);
 
-void dal_hw_sequencer_disable_link(
-	struct hw_sequencer *hws,
-	const struct enable_link_param *in);
-
-void dal_hw_sequencer_enable_stream(
-	struct hw_sequencer *hws,
-	const struct enable_stream_param *in);
-
-void dal_hw_sequencer_disable_stream(
-	struct hw_sequencer *hws,
-	const struct enable_stream_param *in);
-
-void dal_hw_sequencer_blank_stream(
-	struct hw_sequencer *hws,
-	const struct blank_stream_param *in);
-
-void dal_hw_sequencer_unblank_stream(
-	struct hw_sequencer *hws,
-	const struct blank_stream_param *in);
-
 enum hwss_result dal_hw_sequencer_set_clocks_and_clock_state(
 		struct hw_sequencer *hws,
 		struct hw_global_objects *g_obj,
@@ -259,27 +191,6 @@ enum signal_type dal_hw_sequencer_detect_load(
 	struct hw_sequencer *hws,
 	struct display_path *display_path);
 
-bool dal_hw_sequencer_is_sink_present(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-void dal_hw_sequencer_psr_setup(
-	struct hw_sequencer *hws,
-	const struct hw_path_mode *path_mode,
-	const struct psr_caps *psr_caps);
-
-void dal_hw_sequencer_psr_enable(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-void dal_hw_sequencer_psr_disable(
-	struct hw_sequencer *hws,
-	struct display_path *display_path);
-
-void dal_hw_sequencer_program_drr(
-		struct hw_sequencer *hws,
-		const struct hw_path_mode *path_mode);
-
 enum hwss_result dal_hw_sequencer_set_safe_displaymark(
 		struct hw_sequencer *hws,
 		struct hw_path_mode_set *path_set);
@@ -288,8 +199,6 @@ enum hwss_result dal_hw_sequencer_set_displaymark(
 		struct hw_sequencer *hws,
 		struct hw_path_mode_set *path_set);
 
-void dal_hw_sequencer_destroy(struct hw_sequencer **hws);
-
 struct hw_sequencer *dal_hw_sequencer_create(
 		struct hws_init_data *hws_init_data);
 
@@ -298,65 +207,21 @@ enum hwss_result dal_hw_sequencer_set_overscan_adj(
 	struct hw_path_mode_set *set,
 	struct hw_underscan_adjustment_data *hw_underscan);
 
-bool dal_hw_sequencer_enable_line_buffer_power_gating(
-	struct line_buffer *lb,
-	enum controller_id id,
-	enum pixel_type pixel_type,
-	uint32_t src_pixel_width,
-	uint32_t dst_pixel_width,
-	struct scaling_taps *taps,
-	enum lb_pixel_depth lb_depth,
-	uint32_t src_height,
-	uint32_t dst_height,
-	bool interlaced);
-
-void dal_hw_sequencer_build_scaler_parameter(
-	const struct hw_path_mode *path_mode,
-	const struct scaling_taps *taps,
-	bool build_timing_required,
-	struct scaler_data *scaler_data);
-
-void dal_hw_sequencer_update_info_frame(
-	const struct hw_path_mode *hw_path_mode);
-
 enum hwss_result dal_hw_sequencer_set_bit_depth_reduction_adj(
 	struct hw_sequencer *hws,
 	struct display_path *disp_path,
 	union hw_adjustment_bit_depth_reduction *bit_depth);
 
-bool dal_hw_sequencer_is_support_custom_gamut_adj(
-	struct hw_sequencer *hws,
-	struct display_path *disp_path,
-	enum hw_surface_type surface_type);
-
 enum hwss_result dal_hw_sequencer_get_hw_color_adj_range(
 	struct hw_sequencer *hws,
 	struct display_path *disp_path,
 	struct hw_color_control_range *hw_color_range);
 
-bool dal_hw_sequencer_is_support_custom_gamma_coefficients(
-	struct hw_sequencer *hws,
-	struct display_path *disp_path,
-	enum hw_surface_type surface_type);
-
 enum hwss_result dal_hw_sequencer_build_csc_adjust(
 	struct hw_sequencer *hws,
 	struct hw_adjustment_color_control *color_control,
 	struct grph_csc_adjustment *adjust);
 
-void dal_hw_sequencer_build_gamma_ramp_adj_params(
-		const struct hw_adjustment_gamma_ramp *adjusment,
-		struct gamma_parameters *gamma_param,
-		struct gamma_ramp *ramp);
-
-void translate_from_hw_to_controller_regamma(
-		const struct hw_regamma_lut *hw_regamma,
-		struct regamma_lut *regamma);
-
-void dal_hw_sequencer_enable_wireless_idle_detection(
-		struct hw_sequencer *hws,
-		bool enable);
-
 /* Cursor interface */
 enum hwss_result dal_hw_sequencer_set_cursor_position(
 		struct hw_sequencer *hws,
@@ -374,15 +239,4 @@ enum hwss_result dal_hw_sequencer_set_plane_config(
 	struct hw_path_mode_set *path_set,
 	uint32_t display_index);
 
-bool dal_hw_sequencer_update_plane_address(
-	struct hw_sequencer *hws,
-	struct display_path *dp,
-	uint32_t num_planes,
-	struct plane_addr_flip_info *info);
-
-void dal_hw_sequencer_prepare_to_release_planes(
-	struct hw_sequencer *hws,
-	struct hw_path_mode_set *path_set,
-	uint32_t display_index);
-
 #endif /* __DAL_HW_SEQUENCER_INTERFACE_H__ */
diff --git a/drivers/gpu/drm/amd/dal/include/link_service_interface.h b/drivers/gpu/drm/amd/dal/include/link_service_interface.h
index 2ac9311..29233ae 100644
--- a/drivers/gpu/drm/amd/dal/include/link_service_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/link_service_interface.h
@@ -40,141 +40,9 @@ enum ddc_result;
 struct link_service *dal_link_service_create(
 	struct link_service_init_data *init_data);
 
-void dal_link_service_destroy(
-	struct link_service **ls);
-
 enum link_service_type dal_ls_get_link_service_type(
 	struct link_service *link_service);
 
-bool dal_ls_validate_mode_timing(
-	struct link_service *ls,
-	uint32_t display_index,
-	const struct hw_crtc_timing *timing,
-	struct link_validation_flags flags);
-
-bool dal_ls_get_mst_sink_info(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct mst_sink_info *sink_info);
-
-bool dal_ls_get_gtc_sync_status(
-	struct link_service *ls);
-
-bool dal_ls_enable_stream(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct hw_path_mode *path_mode);
-
-bool dal_ls_disable_stream(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct hw_path_mode *poath_mode);
-
-bool dal_ls_optimized_enable_stream(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct display_path *display_path);
-
-void dal_ls_update_stream_features(
-	struct link_service *ls,
-	const struct hw_path_mode *path_mode);
-
-bool dal_ls_blank_stream(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct hw_path_mode *path_mode);
-
-bool dal_ls_unblank_stream(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct hw_path_mode *path_mode);
-
-bool dal_ls_pre_mode_change(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct hw_path_mode *path_mode);
-
-bool dal_ls_post_mode_change(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct hw_path_mode *path_mode);
-
-bool dal_ls_power_on_stream(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct hw_path_mode *path_mode);
-
-bool dal_ls_power_off_stream(
-	struct link_service *ls,
-	uint32_t display_index,
-	struct hw_path_mode *path_mode);
-
-void dal_ls_retrain_link(
-	struct link_service *ls,
-	struct hw_path_mode_set *path_set);
-
-bool dal_ls_get_current_link_setting(
-	struct link_service *ls,
-	struct link_settings *link_settings);
-
-void dal_ls_connect_link(
-	struct link_service *ls,
-	const struct display_path *display_path,
-	bool initial_detection);
-
-void dal_ls_disconnect_link(
-	struct link_service *ls);
-
-bool dal_ls_is_mst_network_present(
-	struct link_service *ls);
-
-void dal_ls_invalidate_down_stream_devices(
-	struct link_service *ls);
-
-bool dal_ls_are_mst_displays_cofunctional(
-	struct link_service *ls,
-	const uint32_t *array_display_index,
-	uint32_t len);
-
-bool dal_ls_is_sink_present_at_display_index(
-	struct link_service *ls,
-	uint32_t display_index);
-
-struct ddc_service *dal_ls_obtain_mst_ddc_service(
-	struct link_service *ls,
-	uint32_t display_index);
-
-void dal_ls_release_mst_ddc_service(
-	struct link_service *ls,
-	struct ddc_service *ddc_service);
-
-void dal_ls_release_hw(
-	struct link_service *ls);
-
-bool dal_ls_associate_link(
-	struct link_service *ls,
-	uint32_t display_index,
-	uint32_t link_index,
-	bool is_internal_link);
-
-bool dal_dpsst_ls_set_overridden_trained_link_settings(
-	struct link_service *ls,
-	const struct link_settings *link_settings);
-
-void dal_dpsst_ls_set_link_training_preference(
-	struct link_service *ls,
-	const struct link_training_preference *ltp);
-
-struct link_training_preference
-	dal_dpsst_ls_get_link_training_preference(
-	struct link_service *ls);
-
-bool dal_ls_should_send_notification(
-	struct link_service *ls);
-
-uint32_t dal_ls_get_notification_display_index(
-	struct link_service *ls);
-
 enum ddc_result dal_dpsst_ls_read_dpcd_data(
 	struct link_service *ls,
 	uint32_t address,
@@ -187,16 +55,4 @@ enum ddc_result dal_dpsst_ls_write_dpcd_data(
 	const uint8_t *data,
 	uint32_t size);
 
-bool dal_ls_is_link_psr_supported(struct link_service *ls);
-
-bool dal_ls_is_stream_drr_supported(struct link_service *ls);
-
-void dal_ls_set_link_psr_capabilities(
-		struct link_service *ls,
-		struct psr_caps *psr_caps);
-
-void dal_ls_get_link_psr_capabilities(
-		struct link_service *ls,
-		struct psr_caps *psr_caps);
-
 #endif /* __DAL_LINK_SERVICE_INTERFACE_H__ */
-- 
2.7.4

