From df2dc58e3e455f9f6e4ef3cb8c8a91734168fb75 Mon Sep 17 00:00:00 2001
From: David Rokhvarg <David.Rokhvarg@amd.com>
Date: Fri, 5 Feb 2016 17:29:08 -0500
Subject: [PATCH 0779/1110] drm/amd/dal: Remove unused definitions from
 Transform interface - part 1.

Signed-off-by: David Rokhvarg <David.Rokhvarg@amd.com>
Acked-by: Jordan Lazare <Jordan.Lazare@amd.com>
---
 .../gpu/drm/amd/dal/dc/dce110/dce110_transform_v.c | 18 +++++++
 drivers/gpu/drm/amd/dal/dc/inc/transform.h         | 60 ----------------------
 2 files changed, 18 insertions(+), 60 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform_v.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform_v.c
index 34fedc5..6491435 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform_v.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_transform_v.c
@@ -36,6 +36,24 @@
 #define NOT_IMPLEMENTED()  DAL_LOGGER_NOT_IMPL(LOG_MINOR_COMPONENT_CONTROLLER,\
 			"TRANSFORM SCALER:%s()\n", __func__)
 #define LB_TOTAL_NUMBER_OF_ENTRIES 1712
+
+
+struct sclv_ratios_inits {
+	uint32_t chroma_enable;
+	uint32_t h_int_scale_ratio_luma;
+	uint32_t h_int_scale_ratio_chroma;
+	uint32_t v_int_scale_ratio_luma;
+	uint32_t v_int_scale_ratio_chroma;
+	struct init_int_and_frac h_init_luma;
+	struct init_int_and_frac h_init_chroma;
+	struct init_int_and_frac v_init_luma;
+	struct init_int_and_frac v_init_chroma;
+	struct init_int_and_frac h_init_lumabottom;
+	struct init_int_and_frac h_init_chromabottom;
+	struct init_int_and_frac v_init_lumabottom;
+	struct init_int_and_frac v_init_chromabottom;
+};
+
 /*
 *****************************************************************************
 *  Function: calculateViewport
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/transform.h b/drivers/gpu/drm/amd/dal/dc/inc/transform.h
index 2280357..e3fb79c 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/transform.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/transform.h
@@ -33,12 +33,6 @@
 
 struct bit_depth_reduction_params;
 
-enum scaling_type {
-	SCALING_TYPE_NO_SCALING = 0,
-	SCALING_TYPE_UPSCALING,
-	SCALING_TYPE_DOWNSCALING
-};
-
 struct transform {
 	struct transform_funcs *funcs;
 	struct dc_context *ctx;
@@ -46,35 +40,6 @@ struct transform {
 	struct scaler_filter *filter;
 };
 
-
-struct scaler_taps_and_ratio {
-	uint32_t h_tap;
-	uint32_t v_tap;
-	uint32_t lo_ratio;
-	uint32_t hi_ratio;
-};
-
-struct scaler_taps {
-	uint32_t h_tap;
-	uint32_t v_tap;
-};
-
-struct sclv_ratios_inits {
-	uint32_t chroma_enable;
-	uint32_t h_int_scale_ratio_luma;
-	uint32_t h_int_scale_ratio_chroma;
-	uint32_t v_int_scale_ratio_luma;
-	uint32_t v_int_scale_ratio_chroma;
-	struct init_int_and_frac h_init_luma;
-	struct init_int_and_frac h_init_chroma;
-	struct init_int_and_frac v_init_luma;
-	struct init_int_and_frac v_init_chroma;
-	struct init_int_and_frac h_init_lumabottom;
-	struct init_int_and_frac h_init_chromabottom;
-	struct init_int_and_frac v_init_lumabottom;
-	struct init_int_and_frac v_init_chromabottom;
-};
-
 enum lb_pixel_depth {
 	/* do not change the values because it is used as bit vector */
 	LB_PIXEL_DEPTH_18BPP = 1,
@@ -84,12 +49,6 @@ enum lb_pixel_depth {
 };
 
 
-struct raw_gamma_ramp_rgb {
-       uint32_t red;
-       uint32_t green;
-       uint32_t blue;
-};
-
 enum raw_gamma_ramp_type {
        GAMMA_RAMP_TYPE_UNINITIALIZED,
        GAMMA_RAMP_TYPE_DEFAULT,
@@ -98,12 +57,6 @@ enum raw_gamma_ramp_type {
 };
 
 #define NUM_OF_RAW_GAMMA_RAMP_RGB_256 256
-struct raw_gamma_ramp {
-       enum raw_gamma_ramp_type type;
-       struct raw_gamma_ramp_rgb rgb_256[NUM_OF_RAW_GAMMA_RAMP_RGB_256];
-       uint32_t size;
-};
-
 
 /* Colorimetry */
 enum colorimetry {
@@ -113,18 +66,6 @@ enum colorimetry {
        COLORIMETRY_EXTENDED = 3
 };
 
-/* ColorimetryEx */
-enum colorimetry_ex {
-       COLORIMETRY_EX_XVYCC601 = 0,
-       COLORIMETRY_EX_XVYCC709 = 1,
-       COLORIMETRY_EX_SYCC601 = 2,
-       COLORIMETRY_EX_ADOBEYCC601 = 3,
-       COLORIMETRY_EX_ADOBERGB = 4,
-       COLORIMETRY_EX_RESERVED5 = 5,
-       COLORIMETRY_EX_RESERVED6 = 6,
-       COLORIMETRY_EX_RESERVED7 = 7
-};
-
 enum ds_color_space {
        DS_COLOR_SPACE_UNKNOWN = 0,
        DS_COLOR_SPACE_SRGB_FULLRANGE = 1,
@@ -138,7 +79,6 @@ enum ds_color_space {
        DS_COLOR_SPACE_YCBCR709_YONLY/*same as YCbCr, but Y in Full range*/
 };
 
-
 enum active_format_info {
        ACTIVE_FORMAT_NO_DATA = 0,
        ACTIVE_FORMAT_VALID = 1
-- 
2.7.4

