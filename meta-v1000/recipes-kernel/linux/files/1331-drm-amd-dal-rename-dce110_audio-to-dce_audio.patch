From e1037116798516af54719b7987063a81ea7d9b20 Mon Sep 17 00:00:00 2001
From: Tony Cheng <tony.cheng@amd.com>
Date: Fri, 14 Oct 2016 22:43:47 -0400
Subject: [PATCH 1331/1722] drm/amd/dal: rename dce110_audio to dce_audio

also rename other audio structs to remove 110 from struct name

Change-Id: I711fae5e0b67447085ba95568ca31bb83cfd96dd
Signed-off-by: Tony Cheng <tony.cheng@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c         | 52 +++++++++++-----------
 drivers/gpu/drm/amd/dal/dc/dce/dce_audio.h         | 37 +++++++--------
 .../gpu/drm/amd/dal/dc/dce100/dce100_resource.c    | 12 ++---
 .../gpu/drm/amd/dal/dc/dce110/dce110_resource.c    | 12 ++---
 .../gpu/drm/amd/dal/dc/dce112/dce112_resource.c    | 12 ++---
 drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c  | 12 ++---
 6 files changed, 67 insertions(+), 70 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c b/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c
index 0e16565..ebac254 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.c
@@ -28,20 +28,20 @@
 #include "dce/dce_11_0_d.h"
 #include "dce/dce_11_0_sh_mask.h"
 
-#define DCE110_AUD(audio)\
-	container_of(audio, struct audio_dce110, base)
+#define DCE_AUD(audio)\
+	container_of(audio, struct dce_audio, base)
 
 
 #include "reg_helper.h"
 
 #define CTX \
-	aud110->base.ctx
+	aud->base.ctx
 #define REG(reg)\
-	(aud110->regs->reg)
+	(aud->regs->reg)
 
 #undef FN
 #define FN(reg_name, field_name) \
-	aud110->shifts->field_name, aud110->masks->field_name
+	aud->shifts->field_name, aud->masks->field_name
 
 #define IX_REG(reg)\
 	ix ## reg
@@ -56,7 +56,7 @@ static void write_indirect_azalia_reg(struct audio *audio,
 	uint32_t reg_index,
 	uint32_t reg_data)
 {
-	struct audio_dce110 *aud110 = DCE110_AUD(audio);
+	struct dce_audio *aud = DCE_AUD(audio);
 
 	/* AZALIA_F0_CODEC_ENDPOINT_INDEX  endpoint index  */
 	REG_SET(AZALIA_F0_CODEC_ENDPOINT_INDEX, 0,
@@ -74,7 +74,7 @@ static void write_indirect_azalia_reg(struct audio *audio,
 
 static uint32_t read_indirect_azalia_reg(struct audio *audio, uint32_t reg_index)
 {
-	struct audio_dce110 *aud110 = DCE110_AUD(audio);
+	struct dce_audio *aud = DCE_AUD(audio);
 
 	uint32_t value = 0;
 
@@ -351,7 +351,7 @@ static void set_audio_latency(
 		value);
 }
 
-void dce110_aud_az_enable(struct audio *audio)
+void dce_aud_az_enable(struct audio *audio)
 {
 	uint32_t value = AZ_REG_READ(AZALIA_F0_CODEC_PIN_CONTROL_HOT_PLUG_CONTROL);
 
@@ -365,7 +365,7 @@ void dce110_aud_az_enable(struct audio *audio)
 	AZ_REG_WRITE(AZALIA_F0_CODEC_PIN_CONTROL_HOT_PLUG_CONTROL, value);
 }
 
-void dce110_aud_az_disable(struct audio *audio)
+void dce_aud_az_disable(struct audio *audio)
 {
 	uint32_t value;
 
@@ -378,13 +378,13 @@ void dce110_aud_az_disable(struct audio *audio)
 	AZ_REG_WRITE(AZALIA_F0_CODEC_PIN_CONTROL_HOT_PLUG_CONTROL, value);
 }
 
-void dce110_aud_az_configure(
+void dce_aud_az_configure(
 	struct audio *audio,
 	enum signal_type signal,
 	const struct audio_crtc_info *crtc_info,
 	const struct audio_info *audio_info)
 {
-	struct audio_dce110 *aud110 = DCE110_AUD(audio);
+	struct dce_audio *aud = DCE_AUD(audio);
 
 	uint32_t speakers = audio_info->flags.info.ALLSPEAKERS;
 	uint32_t value;
@@ -754,13 +754,13 @@ static bool get_azalia_clock_info_dp(
 	return true;
 }
 
-void dce110_aud_wall_dto_setup(
+void dce_aud_wall_dto_setup(
 	struct audio *audio,
 	enum signal_type signal,
 	const struct audio_crtc_info *crtc_info,
 	const struct audio_pll_info *pll_info)
 {
-	struct audio_dce110 *aud110 = DCE110_AUD(audio);
+	struct dce_audio *aud = DCE_AUD(audio);
 
 	struct azalia_clock_info clock_info = { 0 };
 
@@ -842,10 +842,10 @@ void dce110_aud_wall_dto_setup(
 }
 
 /* initialize HW state */
-void dce110_aud_hw_init(
+void dce_aud_hw_init(
 		struct audio *audio)
 {
-	struct audio_dce110 *aud110 = DCE110_AUD(audio);
+	struct dce_audio *aud = DCE_AUD(audio);
 
 	/* we only need to program the following registers once, so we only do
 	it for the inst 0*/
@@ -866,28 +866,28 @@ void dce110_aud_hw_init(
 }
 
 static const struct audio_funcs funcs = {
-	.hw_init = dce110_aud_hw_init,
-	.wall_dto_setup = dce110_aud_wall_dto_setup,
-	.az_enable = dce110_aud_az_enable,
-	.az_disable = dce110_aud_az_disable,
-	.az_configure = dce110_aud_az_configure,
+	.hw_init = dce_aud_hw_init,
+	.wall_dto_setup = dce_aud_wall_dto_setup,
+	.az_enable = dce_aud_az_enable,
+	.az_disable = dce_aud_az_disable,
+	.az_configure = dce_aud_az_configure,
 };
 
-void dce110_aud_destroy(struct audio **audio)
+void dce_aud_destroy(struct audio **audio)
 {
 	dm_free(*audio);
 	*audio = NULL;
 }
 
-struct audio *dce110_audio_create(
+struct audio *dce_audio_create(
 		struct dc_context *ctx,
 		unsigned int inst,
-		const struct dce110_audio_registers *reg,
-		const struct dce110_audio_shift *shifts,
-		const struct dce110_aduio_mask *masks
+		const struct dce_audio_registers *reg,
+		const struct dce_audio_shift *shifts,
+		const struct dce_aduio_mask *masks
 		)
 {
-	struct audio_dce110 *audio = dm_alloc(sizeof(*audio));
+	struct dce_audio *audio = dm_alloc(sizeof(*audio));
 
 	if (audio == NULL) {
 		ASSERT_CRITICAL(audio);
diff --git a/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.h b/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.h
index cbba99e..6c9fe17 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.h
+++ b/drivers/gpu/drm/amd/dal/dc/dce/dce_audio.h
@@ -65,7 +65,7 @@
 		SF(AZALIA_F0_CODEC_ENDPOINT_DATA, AZALIA_ENDPOINT_REG_DATA, mask_sh)
 
 
-struct dce110_audio_registers {
+struct dce_audio_registers {
 	uint32_t AZALIA_F0_CODEC_ENDPOINT_INDEX;
 	uint32_t AZALIA_F0_CODEC_ENDPOINT_DATA;
 
@@ -82,7 +82,7 @@ struct dce110_audio_registers {
 	uint32_t AUDIO_RATE_CAPABILITIES;
 };
 
-struct dce110_audio_shift {
+struct dce_audio_shift {
 	uint8_t AZALIA_ENDPOINT_REG_INDEX;
 	uint8_t AZALIA_ENDPOINT_REG_DATA;
 
@@ -98,7 +98,7 @@ struct dce110_audio_shift {
 	uint8_t DCCG_AUDIO_DTO1_PHASE;
 };
 
-struct dce110_aduio_mask {
+struct dce_aduio_mask {
 	uint32_t AZALIA_ENDPOINT_REG_INDEX;
 	uint32_t AZALIA_ENDPOINT_REG_DATA;
 
@@ -114,36 +114,33 @@ struct dce110_aduio_mask {
 	uint32_t DCCG_AUDIO_DTO1_PHASE;
 };
 
-struct audio_dce110 {
+struct dce_audio {
 	struct audio base;
-	const struct dce110_audio_registers *regs;
-	const struct dce110_audio_shift *shifts;
-	const struct dce110_aduio_mask *masks;
-
-	/* dce-specific members are following */
-	/* none */
+	const struct dce_audio_registers *regs;
+	const struct dce_audio_shift *shifts;
+	const struct dce_aduio_mask *masks;
 };
 
-struct audio *dce110_audio_create(
+struct audio *dce_audio_create(
 		struct dc_context *ctx,
 		unsigned int inst,
-		const struct dce110_audio_registers *reg,
-		const struct dce110_audio_shift *shifts,
-		const struct dce110_aduio_mask *masks);
+		const struct dce_audio_registers *reg,
+		const struct dce_audio_shift *shifts,
+		const struct dce_aduio_mask *masks);
 
-void dce110_aud_destroy(struct audio **audio);
+void dce_aud_destroy(struct audio **audio);
 
-void dce110_aud_hw_init(struct audio *audio);
+void dce_aud_hw_init(struct audio *audio);
 
-void dce110_aud_az_enable(struct audio *audio);
-void dce110_aud_az_disable(struct audio *audio);
+void dce_aud_az_enable(struct audio *audio);
+void dce_aud_az_disable(struct audio *audio);
 
-void dce110_aud_az_configure(struct audio *audio,
+void dce_aud_az_configure(struct audio *audio,
 	enum signal_type signal,
 	const struct audio_crtc_info *crtc_info,
 	const struct audio_info *audio_info);
 
-void dce110_aud_wall_dto_setup(struct audio *audio,
+void dce_aud_wall_dto_setup(struct audio *audio,
 	enum signal_type signal,
 	const struct audio_crtc_info *crtc_info,
 	const struct audio_pll_info *pll_info);
diff --git a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
index 294ad8d..0207a27 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce100/dce100_resource.c
@@ -291,7 +291,7 @@ static const struct dce110_stream_enc_registers stream_enc_regs[] = {
 	AUD_COMMON_REG_LIST(id)\
 }
 
-static const struct dce110_audio_registers audio_regs[] = {
+static const struct dce_audio_registers audio_regs[] = {
 	audio_regs(0),
 	audio_regs(1),
 	audio_regs(2),
@@ -301,11 +301,11 @@ static const struct dce110_audio_registers audio_regs[] = {
 	audio_regs(6),
 };
 
-static const struct dce110_audio_shift audio_shift = {
+static const struct dce_audio_shift audio_shift = {
 		AUD_COMMON_MASK_SH_LIST(__SHIFT)
 };
 
-static const struct dce110_aduio_mask audio_mask = {
+static const struct dce_aduio_mask audio_mask = {
 		AUD_COMMON_MASK_SH_LIST(_MASK)
 };
 
@@ -580,7 +580,7 @@ static void destruct(struct dce110_resource_pool *pool)
 
 	for (i = 0; i < pool->base.audio_count; i++)	{
 		if (pool->base.audios[i] != NULL)
-			dce110_aud_destroy(&pool->base.audios[i]);
+			dce_aud_destroy(&pool->base.audios[i]);
 	}
 
 	if (pool->base.display_clock != NULL)
@@ -952,7 +952,7 @@ static bool construct(
 			break;
 		}
 
-		pool->base.audios[i] = dce110_audio_create(
+		pool->base.audios[i] = dce_audio_create(
 				ctx, i, &audio_regs[i], &audio_shift, &audio_mask);
 		if (pool->base.audios[i] == NULL) {
 			BREAK_TO_DEBUGGER();
@@ -1005,7 +1005,7 @@ stream_enc_create_fail:
 audio_create_fail:
 	for (i = 0; i < pool->base.pipe_count; i++) {
 		if (pool->base.audios[i] != NULL)
-			dce110_aud_destroy(&pool->base.audios[i]);
+			dce_aud_destroy(&pool->base.audios[i]);
 	}
 
 controller_create_fail:
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
index d374791..39713ba 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_resource.c
@@ -248,7 +248,7 @@ static const struct dce110_stream_enc_registers stream_enc_regs[] = {
 	AUD_COMMON_REG_LIST(id)\
 }
 
-static const struct dce110_audio_registers audio_regs[] = {
+static const struct dce_audio_registers audio_regs[] = {
 	audio_regs(0),
 	audio_regs(1),
 	audio_regs(2),
@@ -258,11 +258,11 @@ static const struct dce110_audio_registers audio_regs[] = {
 	audio_regs(6),
 };
 
-static const struct dce110_audio_shift audio_shift = {
+static const struct dce_audio_shift audio_shift = {
 		AUD_COMMON_MASK_SH_LIST(__SHIFT)
 };
 
-static const struct dce110_aduio_mask audio_mask = {
+static const struct dce_aduio_mask audio_mask = {
 		AUD_COMMON_MASK_SH_LIST(_MASK)
 };
 
@@ -542,7 +542,7 @@ static void destruct(struct dce110_resource_pool *pool)
 
 	for (i = 0; i < pool->base.audio_count; i++)	{
 		if (pool->base.audios[i] != NULL) {
-			dce110_aud_destroy(&pool->base.audios[i]);
+			dce_aud_destroy(&pool->base.audios[i]);
 		}
 	}
 
@@ -1254,7 +1254,7 @@ static bool construct(
 			break;
 		}
 
-		pool->base.audios[i] = dce110_audio_create(
+		pool->base.audios[i] = dce_audio_create(
 				ctx, i, &audio_regs[i], &audio_shift, &audio_mask);
 
 		if (pool->base.audios[i] == NULL) {
@@ -1317,7 +1317,7 @@ stream_enc_create_fail:
 audio_create_fail:
 	for (i = 0; i < pool->base.pipe_count; i++) {
 		if (pool->base.audios[i] != NULL)
-			dce110_aud_destroy(&pool->base.audios[i]);
+			dce_aud_destroy(&pool->base.audios[i]);
 	}
 
 controller_create_fail:
diff --git a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
index a53a0fc..64aeacf 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce112/dce112_resource.c
@@ -285,7 +285,7 @@ static const struct dce110_stream_enc_registers stream_enc_regs[] = {
 	AUD_COMMON_REG_LIST(id)\
 }
 
-static const struct dce110_audio_registers audio_regs[] = {
+static const struct dce_audio_registers audio_regs[] = {
 	audio_regs(0),
 	audio_regs(1),
 	audio_regs(2),
@@ -295,11 +295,11 @@ static const struct dce110_audio_registers audio_regs[] = {
 	audio_regs(6),
 };
 
-static const struct dce110_audio_shift audio_shift = {
+static const struct dce_audio_shift audio_shift = {
 		AUD_COMMON_MASK_SH_LIST(__SHIFT)
 };
 
-static const struct dce110_aduio_mask audio_mask = {
+static const struct dce_aduio_mask audio_mask = {
 		AUD_COMMON_MASK_SH_LIST(_MASK)
 };
 
@@ -604,7 +604,7 @@ static void destruct(struct dce110_resource_pool *pool)
 
 	for (i = 0; i < pool->base.audio_count; i++)	{
 		if (pool->base.audios[i] != NULL) {
-			dce110_aud_destroy(&pool->base.audios[i]);
+			dce_aud_destroy(&pool->base.audios[i]);
 		}
 	}
 
@@ -1294,7 +1294,7 @@ static bool construct(
 			break;
 		}
 
-		pool->base.audios[i] = dce110_audio_create(
+		pool->base.audios[i] = dce_audio_create(
 			ctx, i, &audio_regs[i], &audio_shift, &audio_mask);
 
 		if (pool->base.audios[i] == NULL) {
@@ -1352,7 +1352,7 @@ stream_enc_create_fail:
 audio_create_fail:
 	for (i = 0; i < pool->base.pipe_count; i++) {
 		if (pool->base.audios[i] != NULL)
-			dce110_aud_destroy(&pool->base.audios[i]);
+			dce_aud_destroy(&pool->base.audios[i]);
 	}
 
 controller_create_fail:
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
index 3f936aa..ff0e68d 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_resource.c
@@ -292,7 +292,7 @@ static const struct dce110_stream_enc_registers stream_enc_regs[] = {
 	AUD_COMMON_REG_LIST(id)\
 }
 
-static const struct dce110_audio_registers audio_regs[] = {
+static const struct dce_audio_registers audio_regs[] = {
 	audio_regs(0),
 	audio_regs(1),
 	audio_regs(2),
@@ -302,11 +302,11 @@ static const struct dce110_audio_registers audio_regs[] = {
 	audio_regs(6),
 };
 
-static const struct dce110_audio_shift audio_shift = {
+static const struct dce_audio_shift audio_shift = {
 		AUD_COMMON_MASK_SH_LIST(__SHIFT)
 };
 
-static const struct dce110_aduio_mask audio_mask = {
+static const struct dce_aduio_mask audio_mask = {
 		AUD_COMMON_MASK_SH_LIST(_MASK)
 };
 
@@ -520,7 +520,7 @@ static void destruct(struct dce110_resource_pool *pool)
 
 	for (i = 0; i < pool->base.audio_count; i++)	{
 		if (pool->base.audios[i] != NULL) {
-			dce110_aud_destroy(&pool->base.audios[i]);
+			dce_aud_destroy(&pool->base.audios[i]);
 		}
 	}
 
@@ -932,7 +932,7 @@ static bool construct(
 			break;
 		}
 
-		pool->base.audios[i] = dce110_audio_create(
+		pool->base.audios[i] = dce_audio_create(
 				ctx, i, &audio_regs[i], &audio_shift, &audio_mask);
 
 		if (pool->base.audios[i] == NULL) {
@@ -985,7 +985,7 @@ stream_enc_create_fail:
 audio_create_fail:
 	for (i = 0; i < pool->base.pipe_count; i++) {
 		if (pool->base.audios[i] != NULL)
-			dce110_aud_destroy(&pool->base.audios[i]);
+			dce_aud_destroy(&pool->base.audios[i]);
 	}
 
 controller_create_fail:
-- 
2.7.4

