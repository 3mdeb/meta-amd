From b557d1d7b72823d34179ecba63c84ded1e72996a Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Thu, 13 Oct 2016 17:29:11 -0400
Subject: [PATCH 1385/1722] drm/amd/dal: Remove unused ddc gpio fields

Change-Id: Idd159342b4ae20bdd0270fc15fd0861ad8405825
Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
---
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c | 222 +++------------------
 .../gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h |   6 +-
 .../gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c   | 207 ++-----------------
 .../gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h   |   6 +-
 drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.c           |   7 -
 drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h           |  11 +-
 6 files changed, 48 insertions(+), 411 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
index 78801ef..c3aba92 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.c
@@ -25,29 +25,16 @@
 
 #include "dm_services.h"
 
-/*
- * Pre-requisites: headers required by header of this unit
- */
 #include "include/gpio_types.h"
 #include "../hw_gpio.h"
 #include "../hw_ddc.h"
 
-/*
- * Header of this unit
- */
 #include "hw_ddc_dce110.h"
 
-/*
- * Post-requisites: headers required by this unit
- */
-
 #include "dce/dce_11_0_d.h"
 #include "dce/dce_11_0_sh_mask.h"
 
-#define ADDR_DDC_SETUP pin->addr.dc_i2c_ddc_setup
-/*
- * This unit
- */
+
 static void destruct(
 	struct hw_ddc_dce110 *pin)
 {
@@ -68,8 +55,7 @@ static void destroy(
 
 struct hw_ddc_dce110_init {
 	struct hw_gpio_pin_reg hw_gpio_data_reg;
-	struct hw_ddc_mask hw_ddc_mask;
-	struct hw_ddc_dce110_addr hw_ddc_dce110_addr;
+	uint32_t i2c_ddc_setup;
 };
 
 static const struct hw_ddc_dce110_init
@@ -94,17 +80,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC1_Y__DC_GPIO_DDC1DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1DATA_MASK_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1DATA_PD_EN_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1DATA_RECV_MASK,
-			DC_GPIO_DDC1_MASK__AUX_PAD1_MODE_MASK,
-			DC_GPIO_DDC1_MASK__AUX1_POL_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC1_SETUP
-		}
+		mmDC_I2C_DDC1_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC2 */
 	{
@@ -126,17 +102,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC2_Y__DC_GPIO_DDC2DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2DATA_MASK_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2DATA_PD_EN_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2DATA_RECV_MASK,
-			DC_GPIO_DDC2_MASK__AUX_PAD2_MODE_MASK,
-			DC_GPIO_DDC2_MASK__AUX2_POL_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC2_SETUP
-		}
+		mmDC_I2C_DDC2_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC3 */
 	{
@@ -158,17 +124,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC3_Y__DC_GPIO_DDC3DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3DATA_MASK_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3DATA_PD_EN_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3DATA_RECV_MASK,
-			DC_GPIO_DDC3_MASK__AUX_PAD3_MODE_MASK,
-			DC_GPIO_DDC3_MASK__AUX3_POL_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC3_SETUP
-		}
+		mmDC_I2C_DDC3_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC4 */
 	{
@@ -190,17 +146,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC4_Y__DC_GPIO_DDC4DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4DATA_MASK_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4DATA_PD_EN_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4DATA_RECV_MASK,
-			DC_GPIO_DDC4_MASK__AUX_PAD4_MODE_MASK,
-			DC_GPIO_DDC4_MASK__AUX4_POL_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC4_SETUP
-		}
+		mmDC_I2C_DDC4_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC5 */
 	{
@@ -222,17 +168,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC5_Y__DC_GPIO_DDC5DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5DATA_MASK_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5DATA_PD_EN_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5DATA_RECV_MASK,
-			DC_GPIO_DDC5_MASK__AUX_PAD5_MODE_MASK,
-			DC_GPIO_DDC5_MASK__AUX5_POL_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC5_SETUP
-		}
+		mmDC_I2C_DDC5_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC6 */
 	{
@@ -254,17 +190,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC6_Y__DC_GPIO_DDC6DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6DATA_MASK_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6DATA_PD_EN_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6DATA_RECV_MASK,
-			DC_GPIO_DDC6_MASK__AUX_PAD6_MODE_MASK,
-			DC_GPIO_DDC6_MASK__AUX6_POL_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC6_SETUP
-		}
+		mmDC_I2C_DDC6_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC_VGA */
 	{
@@ -286,17 +212,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDCVGA_Y__DC_GPIO_DDCVGADATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_MASK_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_PD_EN_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_RECV_MASK,
-			DC_GPIO_DDCVGA_MASK__AUX_PADVGA_MODE_MASK,
-			DC_GPIO_DDCVGA_MASK__AUXVGA_POL_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDCVGA_SETUP
-		}
+		mmDC_I2C_DDCVGA_SETUP
 	},
 	/* GPIO_DDC_LINE_I2CPAD */
 	{
@@ -318,17 +234,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_I2CPAD_Y__DC_GPIO_SDA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SDA_MASK_MASK,
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SDA_PD_DIS_MASK,
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SDA_RECV_MASK,
-			0,
-			0,
-			0
-		},
-		{
-			0
-		}
+		0
 	}
 };
 
@@ -354,17 +260,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC1_Y__DC_GPIO_DDC1CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_MASK_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_PD_EN_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_RECV_MASK,
-			DC_GPIO_DDC1_MASK__AUX_PAD1_MODE_MASK,
-			DC_GPIO_DDC1_MASK__AUX1_POL_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC1_SETUP
-		}
+		mmDC_I2C_DDC1_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC2 */
 	{
@@ -386,17 +282,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC2_Y__DC_GPIO_DDC2CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_MASK_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_PD_EN_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_RECV_MASK,
-			DC_GPIO_DDC2_MASK__AUX_PAD2_MODE_MASK,
-			DC_GPIO_DDC2_MASK__AUX2_POL_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC2_SETUP
-		}
+		mmDC_I2C_DDC2_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC3 */
 	{
@@ -418,17 +304,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC3_Y__DC_GPIO_DDC3CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_MASK_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_PD_EN_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_RECV_MASK,
-			DC_GPIO_DDC3_MASK__AUX_PAD3_MODE_MASK,
-			DC_GPIO_DDC3_MASK__AUX3_POL_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC3_SETUP
-		}
+		mmDC_I2C_DDC3_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC4 */
 	{
@@ -450,17 +326,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC4_Y__DC_GPIO_DDC4CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_MASK_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_PD_EN_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_RECV_MASK,
-			DC_GPIO_DDC4_MASK__AUX_PAD4_MODE_MASK,
-			DC_GPIO_DDC4_MASK__AUX4_POL_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC4_SETUP
-		}
+		mmDC_I2C_DDC4_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC5 */
 	{
@@ -482,17 +348,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC5_Y__DC_GPIO_DDC5CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_MASK_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_PD_EN_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_RECV_MASK,
-			DC_GPIO_DDC5_MASK__AUX_PAD5_MODE_MASK,
-			DC_GPIO_DDC5_MASK__AUX5_POL_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC5_SETUP
-		}
+		mmDC_I2C_DDC5_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC6 */
 	{
@@ -514,17 +370,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDC6_Y__DC_GPIO_DDC6CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_MASK_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_PD_EN_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_RECV_MASK,
-			DC_GPIO_DDC6_MASK__AUX_PAD6_MODE_MASK,
-			DC_GPIO_DDC6_MASK__AUX6_POL_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC6_SETUP
-		}
+		mmDC_I2C_DDC6_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC_VGA */
 	{
@@ -546,17 +392,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_DDCVGA_Y__DC_GPIO_DDCVGACLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_MASK_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_PD_EN_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_RECV_MASK,
-			DC_GPIO_DDCVGA_MASK__AUX_PADVGA_MODE_MASK,
-			DC_GPIO_DDCVGA_MASK__AUXVGA_POL_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDCVGA_SETUP
-		}
+		mmDC_I2C_DDCVGA_SETUP
 	},
 	/* GPIO_DDC_LINE_I2CPAD */
 	{
@@ -578,17 +414,7 @@ static const struct hw_ddc_dce110_init
 				DC_GPIO_I2CPAD_Y__DC_GPIO_SCL_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SCL_MASK_MASK,
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SCL_PD_DIS_MASK,
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SCL_RECV_MASK,
-			0,
-			0,
-			0
-		},
-		{
-			0
-		}
+		0
 	}
 };
 
@@ -776,7 +602,7 @@ static enum gpio_result set_config(
 		if ((hw_gpio->base.en >= GPIO_DDC_LINE_DDC1) &&
 			(hw_gpio->base.en <= GPIO_DDC_LINE_DDC_VGA)) {
 			setup_i2c_polling(
-				ptr->ctx, ADDR_DDC_SETUP, 1, 0);
+				ptr->ctx, pin->i2c_ddc_setup, 1, 0);
 			return GPIO_RESULT_OK;
 		}
 	break;
@@ -784,7 +610,7 @@ static enum gpio_result set_config(
 		if ((hw_gpio->base.en >= GPIO_DDC_LINE_DDC1) &&
 			(hw_gpio->base.en <= GPIO_DDC_LINE_DDC_VGA)) {
 			setup_i2c_polling(
-				ptr->ctx, ADDR_DDC_SETUP, 1, 1);
+				ptr->ctx, pin->i2c_ddc_setup, 1, 1);
 			return GPIO_RESULT_OK;
 		}
 	break;
@@ -792,7 +618,7 @@ static enum gpio_result set_config(
 		if ((hw_gpio->base.en >= GPIO_DDC_LINE_DDC1) &&
 			(hw_gpio->base.en <= GPIO_DDC_LINE_DDC_VGA)) {
 			setup_i2c_polling(
-				ptr->ctx, ADDR_DDC_SETUP, 0, 0);
+				ptr->ctx, pin->i2c_ddc_setup, 0, 0);
 			return GPIO_RESULT_OK;
 		}
 	break;
@@ -838,16 +664,14 @@ static bool construct(
 		init = hw_ddc_dce110_init_data + en;
 
 		pin->base.base.pin_reg = init->hw_gpio_data_reg;
-		pin->base.mask = init->hw_ddc_mask;
-		pin->addr = init->hw_ddc_dce110_addr;
+		pin->i2c_ddc_setup = init->i2c_ddc_setup;
 
 		return true;
 	case GPIO_ID_DDC_CLOCK:
 		init = hw_ddc_dce110_init_clock + en;
 
 		pin->base.base.pin_reg = init->hw_gpio_data_reg;
-		pin->base.mask = init->hw_ddc_mask;
-		pin->addr = init->hw_ddc_dce110_addr;
+		pin->i2c_ddc_setup = init->i2c_ddc_setup;
 
 		return true;
 	default:
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h
index 6830369..4d954a0 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce110/hw_ddc_dce110.h
@@ -26,13 +26,9 @@
 #ifndef __DAL_HW_DDC_DCE110_H__
 #define __DAL_HW_DDC_DCE110_H__
 
-struct hw_ddc_dce110_addr {
-	uint32_t dc_i2c_ddc_setup;
-};
-
 struct hw_ddc_dce110 {
 	struct hw_ddc base;
-	struct hw_ddc_dce110_addr addr;
+	uint32_t i2c_ddc_setup;
 };
 
 #define DDC_DCE110_FROM_BASE(ddc_base) \
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
index 9a22402..b27d23d 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.c
@@ -260,7 +260,7 @@ static enum gpio_result set_config(
 		if ((hw_gpio->base.en >= GPIO_DDC_LINE_DDC1) &&
 			(hw_gpio->base.en <= GPIO_DDC_LINE_DDC_VGA)) {
 			setup_i2c_polling(
-				ptr->ctx, pin->addr.dc_i2c_ddc_setup, 1, 0);
+				ptr->ctx, pin->i2c_ddc_setup, 1, 0);
 			return GPIO_RESULT_OK;
 		}
 	break;
@@ -268,7 +268,7 @@ static enum gpio_result set_config(
 		if ((hw_gpio->base.en >= GPIO_DDC_LINE_DDC1) &&
 			(hw_gpio->base.en <= GPIO_DDC_LINE_DDC_VGA)) {
 			setup_i2c_polling(
-				ptr->ctx, pin->addr.dc_i2c_ddc_setup, 1, 1);
+				ptr->ctx, pin->i2c_ddc_setup, 1, 1);
 			return GPIO_RESULT_OK;
 		}
 	break;
@@ -276,7 +276,7 @@ static enum gpio_result set_config(
 		if ((hw_gpio->base.en >= GPIO_DDC_LINE_DDC1) &&
 			(hw_gpio->base.en <= GPIO_DDC_LINE_DDC_VGA)) {
 			setup_i2c_polling(
-				ptr->ctx, pin->addr.dc_i2c_ddc_setup, 0, 0);
+				ptr->ctx, pin->i2c_ddc_setup, 0, 0);
 			return GPIO_RESULT_OK;
 		}
 	break;
@@ -289,8 +289,7 @@ static enum gpio_result set_config(
 
 struct hw_ddc_dce80_init {
 	struct hw_gpio_pin_reg hw_gpio_data_reg;
-	struct hw_ddc_mask hw_ddc_mask;
-	struct hw_ddc_dce80_addr hw_ddc_dce80_addr;
+	uint32_t i2c_ddc_setup;
 };
 
 static const struct hw_ddc_dce80_init
@@ -315,17 +314,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC1_Y__DC_GPIO_DDC1DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1DATA_MASK_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1DATA_PD_EN_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1DATA_RECV_MASK,
-			DC_GPIO_DDC1_MASK__AUX_PAD1_MODE_MASK,
-			DC_GPIO_DDC1_MASK__AUX1_POL_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC1_SETUP
-		}
+		mmDC_I2C_DDC1_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC2 */
 	{
@@ -347,17 +336,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC2_Y__DC_GPIO_DDC2DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2DATA_MASK_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2DATA_PD_EN_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2DATA_RECV_MASK,
-			DC_GPIO_DDC2_MASK__AUX_PAD2_MODE_MASK,
-			DC_GPIO_DDC2_MASK__AUX2_POL_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC2_SETUP
-		}
+		mmDC_I2C_DDC2_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC3 */
 	{
@@ -379,17 +358,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC3_Y__DC_GPIO_DDC3DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3DATA_MASK_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3DATA_PD_EN_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3DATA_RECV_MASK,
-			DC_GPIO_DDC3_MASK__AUX_PAD3_MODE_MASK,
-			DC_GPIO_DDC3_MASK__AUX3_POL_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC3_SETUP
-		}
+		mmDC_I2C_DDC3_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC4 */
 	{
@@ -411,17 +380,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC4_Y__DC_GPIO_DDC4DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4DATA_MASK_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4DATA_PD_EN_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4DATA_RECV_MASK,
-			DC_GPIO_DDC4_MASK__AUX_PAD4_MODE_MASK,
-			DC_GPIO_DDC4_MASK__AUX4_POL_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC4_SETUP
-		}
+		mmDC_I2C_DDC4_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC5 */
 	{
@@ -443,17 +402,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC5_Y__DC_GPIO_DDC5DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5DATA_MASK_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5DATA_PD_EN_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5DATA_RECV_MASK,
-			DC_GPIO_DDC5_MASK__AUX_PAD5_MODE_MASK,
-			DC_GPIO_DDC5_MASK__AUX5_POL_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC5_SETUP
-		}
+		mmDC_I2C_DDC5_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC6 */
 	{
@@ -475,17 +424,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC6_Y__DC_GPIO_DDC6DATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6DATA_MASK_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6DATA_PD_EN_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6DATA_RECV_MASK,
-			DC_GPIO_DDC6_MASK__AUX_PAD6_MODE_MASK,
-			DC_GPIO_DDC6_MASK__AUX6_POL_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC6_SETUP
-		}
+		mmDC_I2C_DDC6_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC_VGA */
 	{
@@ -507,17 +446,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDCVGA_Y__DC_GPIO_DDCVGADATA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_MASK_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_PD_EN_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_RECV_MASK,
-			DC_GPIO_DDCVGA_MASK__AUX_PADVGA_MODE_MASK,
-			DC_GPIO_DDCVGA_MASK__AUXVGA_POL_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDCVGA_SETUP
-		}
+		mmDC_I2C_DDCVGA_SETUP
 	},
 	/* GPIO_DDC_LINE_I2CPAD */
 	{
@@ -539,17 +468,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_I2CPAD_Y__DC_GPIO_SDA_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SDA_MASK_MASK,
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SDA_PD_DIS_MASK,
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SDA_RECV_MASK,
-			0,
-			0,
-			0
-		},
-		{
-			0
-		}
+		0
 	}
 };
 
@@ -575,17 +494,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC1_Y__DC_GPIO_DDC1CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_MASK_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_PD_EN_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_RECV_MASK,
-			DC_GPIO_DDC1_MASK__AUX_PAD1_MODE_MASK,
-			DC_GPIO_DDC1_MASK__AUX1_POL_MASK,
-			DC_GPIO_DDC1_MASK__DC_GPIO_DDC1CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC1_SETUP
-		}
+		mmDC_I2C_DDC1_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC2 */
 	{
@@ -607,17 +516,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC2_Y__DC_GPIO_DDC2CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_MASK_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_PD_EN_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_RECV_MASK,
-			DC_GPIO_DDC2_MASK__AUX_PAD2_MODE_MASK,
-			DC_GPIO_DDC2_MASK__AUX2_POL_MASK,
-			DC_GPIO_DDC2_MASK__DC_GPIO_DDC2CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC2_SETUP
-		}
+		mmDC_I2C_DDC2_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC3 */
 	{
@@ -639,17 +538,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC3_Y__DC_GPIO_DDC3CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_MASK_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_PD_EN_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_RECV_MASK,
-			DC_GPIO_DDC3_MASK__AUX_PAD3_MODE_MASK,
-			DC_GPIO_DDC3_MASK__AUX3_POL_MASK,
-			DC_GPIO_DDC3_MASK__DC_GPIO_DDC3CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC3_SETUP
-		}
+		mmDC_I2C_DDC3_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC4 */
 	{
@@ -671,17 +560,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC4_Y__DC_GPIO_DDC4CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_MASK_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_PD_EN_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_RECV_MASK,
-			DC_GPIO_DDC4_MASK__AUX_PAD4_MODE_MASK,
-			DC_GPIO_DDC4_MASK__AUX4_POL_MASK,
-			DC_GPIO_DDC4_MASK__DC_GPIO_DDC4CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC4_SETUP
-		}
+		mmDC_I2C_DDC4_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC5 */
 	{
@@ -703,17 +582,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC5_Y__DC_GPIO_DDC5CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_MASK_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_PD_EN_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_RECV_MASK,
-			DC_GPIO_DDC5_MASK__AUX_PAD5_MODE_MASK,
-			DC_GPIO_DDC5_MASK__AUX5_POL_MASK,
-			DC_GPIO_DDC5_MASK__DC_GPIO_DDC5CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC5_SETUP
-		}
+		mmDC_I2C_DDC5_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC6 */
 	{
@@ -735,17 +604,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDC6_Y__DC_GPIO_DDC6CLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_MASK_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_PD_EN_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_RECV_MASK,
-			DC_GPIO_DDC6_MASK__AUX_PAD6_MODE_MASK,
-			DC_GPIO_DDC6_MASK__AUX6_POL_MASK,
-			DC_GPIO_DDC6_MASK__DC_GPIO_DDC6CLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDC6_SETUP
-		}
+		mmDC_I2C_DDC6_SETUP
 	},
 	/* GPIO_DDC_LINE_DDC_VGA */
 	{
@@ -767,17 +626,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_DDCVGA_Y__DC_GPIO_DDCVGACLK_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_MASK_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGADATA_PD_EN_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_RECV_MASK,
-			DC_GPIO_DDCVGA_MASK__AUX_PADVGA_MODE_MASK,
-			DC_GPIO_DDCVGA_MASK__AUXVGA_POL_MASK,
-			DC_GPIO_DDCVGA_MASK__DC_GPIO_DDCVGACLK_STR_MASK
-		},
-		{
-			mmDC_I2C_DDCVGA_SETUP
-		}
+		mmDC_I2C_DDCVGA_SETUP
 	},
 	/* GPIO_DDC_LINE_I2CPAD */
 	{
@@ -799,17 +648,7 @@ static const struct hw_ddc_dce80_init
 				DC_GPIO_I2CPAD_Y__DC_GPIO_SCL_Y_MASK
 			}
 		},
-		{
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SCL_MASK_MASK,
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SCL_PD_DIS_MASK,
-			DC_GPIO_I2CPAD_MASK__DC_GPIO_SCL_RECV_MASK,
-			0,
-			0,
-			0
-		},
-		{
-			0
-		}
+		0
 	}
 };
 
@@ -848,16 +687,14 @@ static bool construct(
 		init = hw_ddc_dce80_init_data + en;
 
 		pin->base.base.pin_reg = init->hw_gpio_data_reg;
-		pin->base.mask = init->hw_ddc_mask;
-		pin->addr = init->hw_ddc_dce80_addr;
+		pin->i2c_ddc_setup = init->i2c_ddc_setup;
 
 		return true;
 	case GPIO_ID_DDC_CLOCK:
 		init = hw_ddc_dce80_init_clock + en;
 
 		pin->base.base.pin_reg = init->hw_gpio_data_reg;
-		pin->base.mask = init->hw_ddc_mask;
-		pin->addr = init->hw_ddc_dce80_addr;
+		pin->i2c_ddc_setup = init->i2c_ddc_setup;
 
 		return true;
 	default:
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h
index f5bbb83..19e6773 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/dce80/hw_ddc_dce80.h
@@ -26,13 +26,9 @@
 #ifndef __DAL_HW_DDC_DCE80_H__
 #define __DAL_HW_DDC_DCE80_H__
 
-struct hw_ddc_dce80_addr {
-	uint32_t dc_i2c_ddc_setup;
-};
-
 struct hw_ddc_dce80 {
 	struct hw_ddc base;
-	struct hw_ddc_dce80_addr addr;
+	uint32_t i2c_ddc_setup;
 };
 
 struct hw_gpio_pin *dal_hw_ddc_dce80_create(
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.c b/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.c
index e5651c2..970966b 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.c
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.c
@@ -86,13 +86,6 @@ bool dal_hw_ddc_construct(
 	if (!dal_hw_gpio_construct(&pin->base, id, en, ctx))
 		return false;
 
-	pin->mask.DC_GPIO_DDC_MASK_MASK = 0;
-	pin->mask.DC_GPIO_DDC_PD_EN_MASK = 0;
-	pin->mask.DC_GPIO_DDC_RECV_MASK = 0;
-	pin->mask.AUX_PAD_MODE_MASK = 0;
-	pin->mask.AUX_POL_MASK = 0;
-	pin->mask.DC_GPIO_DDCCLK_STR_MASK = 0;
-
 	return true;
 }
 
diff --git a/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h b/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h
index a3a727c5..557c84a 100644
--- a/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h
+++ b/drivers/gpu/drm/amd/dal/dc/gpio/hw_ddc.h
@@ -26,18 +26,9 @@
 #ifndef __DAL_HW_DDC_H__
 #define __DAL_HW_DDC_H__
 
-struct hw_ddc_mask {
-	uint32_t DC_GPIO_DDC_MASK_MASK;
-	uint32_t DC_GPIO_DDC_PD_EN_MASK;
-	uint32_t DC_GPIO_DDC_RECV_MASK;
-	uint32_t AUX_PAD_MODE_MASK;
-	uint32_t AUX_POL_MASK;
-	uint32_t DC_GPIO_DDCCLK_STR_MASK;
-};
-
 struct hw_ddc {
 	struct hw_gpio base;
-	struct hw_ddc_mask mask;
+	uint32_t i2c_ddc_setup;
 };
 
 #define HW_DDC_FROM_BASE(hw_gpio) \
-- 
2.7.4

