From d62b4ef02de349a58f852f6cf213f6911c0378b4 Mon Sep 17 00:00:00 2001
From: "Le.Ma" <Le.Ma@amd.com>
Date: Tue, 7 Nov 2017 10:52:37 +0800
Subject: [PATCH 3770/5855] drm/amdkfd: Re-locate switch power profile to match
 kfd branch

Change-Id: I79a59c15a4ecfdae92202da0b2b216efa471a529
Signed-off-by: Le.Ma <Le.Ma@amd.com>
Signed-off-by: Pavan Kumar Ramayanam <pavan.ramayanam@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c | 57 +++++++++++++++++-----------------
 1 file changed, 28 insertions(+), 29 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
index cb96246..f70dbd8 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
@@ -2724,6 +2724,22 @@ int amdgpu_vm_init(struct amdgpu_device *adev, struct amdgpu_vm *vm,
 			goto error_free_root;
 	}
 
+	if (pasid) {
+		unsigned long flags;
+
+		spin_lock_irqsave(&adev->vm_manager.pasid_lock, flags);
+		r = idr_alloc(&adev->vm_manager.pasid_idr, vm, pasid, pasid + 1,
+			      GFP_ATOMIC);
+		spin_unlock_irqrestore(&adev->vm_manager.pasid_lock, flags);
+		if (r < 0)
+			goto error_free_root;
+
+		vm->pasid = pasid;
+	}
+
+	INIT_KFIFO(vm->faults);
+	vm->fault_credit = 16;
+
 	vm->vm_context = vm_context;
 	if (vm_context == AMDGPU_VM_CONTEXT_COMPUTE) {
 		struct amdgpu_vm_id_manager *id_mgr =
@@ -2741,23 +2757,6 @@ int amdgpu_vm_init(struct amdgpu_device *adev, struct amdgpu_vm *vm,
 		mutex_unlock(&id_mgr->lock);
 	}
 
-        if (pasid) {
-                unsigned long flags;
- 
-                spin_lock_irqsave(&adev->vm_manager.pasid_lock, flags);
-                r = idr_alloc(&adev->vm_manager.pasid_idr, vm, pasid, pasid + 1,
-                              GFP_ATOMIC);
-                spin_unlock_irqrestore(&adev->vm_manager.pasid_lock, flags);
-                if (r < 0)
-                        goto error_free_root;
-
-                vm->pasid = pasid;
-        }
-
-        vm->fault_credit = 16;
-
-        INIT_KFIFO(vm->faults);
-
 	return 0;
 
 error_free_root:
@@ -2813,6 +2812,18 @@ void amdgpu_vm_fini(struct amdgpu_device *adev, struct amdgpu_vm *vm)
 	u64 fault;
 	int i, r;
 
+	/* Clear pending page faults from IH when the VM is destroyed */
+	while (kfifo_get(&vm->faults, &fault))
+		amdgpu_ih_clear_fault(adev, fault);
+
+	if (vm->pasid) {
+		unsigned long flags;
+
+		spin_lock_irqsave(&adev->vm_manager.pasid_lock, flags);
+		idr_remove(&adev->vm_manager.pasid_idr, vm->pasid);
+		spin_unlock_irqrestore(&adev->vm_manager.pasid_lock, flags);
+	}
+
 	if (vm->vm_context == AMDGPU_VM_CONTEXT_COMPUTE) {
 		struct amdgpu_vm_id_manager *id_mgr =
 				&adev->vm_manager.id_mgr[AMDGPU_GFXHUB];
@@ -2830,18 +2841,6 @@ void amdgpu_vm_fini(struct amdgpu_device *adev, struct amdgpu_vm *vm)
 		mutex_unlock(&id_mgr->lock);
 	}
 
-        /* Clear pending page faults from IH when the VM is destroyed */
-        while (kfifo_get(&vm->faults, &fault))
-                amdgpu_ih_clear_fault(adev, fault);
-
-        if (vm->pasid) {
-                unsigned long flags;
-
-                spin_lock_irqsave(&adev->vm_manager.pasid_lock, flags);
-                idr_remove(&adev->vm_manager.pasid_idr, vm->pasid);
-                spin_unlock_irqrestore(&adev->vm_manager.pasid_lock, flags);
-        }
-
 	amd_sched_entity_fini(vm->entity.sched, &vm->entity);
 
 	if (!RB_EMPTY_ROOT(&vm->va)) {
-- 
2.7.4

