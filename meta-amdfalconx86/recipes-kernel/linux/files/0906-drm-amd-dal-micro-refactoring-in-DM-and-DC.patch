From 94dacf0885af116dc218c22d21408a210045dd50 Mon Sep 17 00:00:00 2001
From: Mykola Lysenko <Mykola.Lysenko@amd.com>
Date: Thu, 10 Mar 2016 05:38:28 -0500
Subject: [PATCH 0906/1110] drm/amd/dal: micro refactoring in DM and DC

Removed warning generated for edids with more than 1 extension,
e.g. for tiled display case.

Fixed few identation issues.

Signed-off-by: Mykola Lysenko <Mykola.Lysenko@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
---
 drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c  | 4 ++--
 drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c        | 2 --
 drivers/gpu/drm/amd/dal/dc/core/dc_link_dp.c         | 6 +++---
 drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c | 4 ++--
 4 files changed, 7 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
index 6eaf54d..8e7c491 100644
--- a/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
+++ b/drivers/gpu/drm/amd/dal/amdgpu_dm/amdgpu_dm_types.c
@@ -2634,8 +2634,8 @@ int amdgpu_dm_atomic_check(struct drm_device *dev,
 
 	}
 
-	if (need_to_validate == false || set_count == 0
-				|| dc_validate_resources(dc, set, set_count))
+	if (need_to_validate == false || set_count == 0 ||
+		dc_validate_resources(dc, set, set_count))
 		ret = 0;
 
 connector_not_found:
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c b/drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c
index 2922453..698a34e 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_link_ddc.c
@@ -630,8 +630,6 @@ static uint32_t query_edid_block(
 		return 0;
 
 	if (dal_ddc_service_is_in_aux_transaction_mode(ddc)) {
-
-		ASSERT(index < 2);
 		size_retrieved =
 			aux_read_edid_block(ddc, address, index, buf);
 	} else {
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_link_dp.c b/drivers/gpu/drm/amd/dal/dc/core/dc_link_dp.c
index aab73ff..282a56b 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_link_dp.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_link_dp.c
@@ -902,10 +902,10 @@ static bool perform_clock_recovery_sequence(
 		else
 			retries_cr = 0;
 
-			/* 8. update VS/PE/PC2 in lt_settings*/
-			update_drive_settings(lt_settings, req_settings);
+		/* 8. update VS/PE/PC2 in lt_settings*/
+		update_drive_settings(lt_settings, req_settings);
 
-			retry_count++;
+		retry_count++;
 	}
 
 	if (retry_count >= LINK_TRAINING_MAX_CR_RETRY) {
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c
index 6f3ca2d..6629f2f 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_mem_input.c
@@ -353,8 +353,8 @@ void dce110_mem_input_wait_for_no_surface_update_pending(struct mem_input *mem_i
 	struct dce110_mem_input *mem_input110 = TO_DCE110_MEM_INPUT(mem_input);
 	uint32_t value;
 
-	do  {
-		value = dm_read_reg(mem_input110->base.ctx,	DCP_REG(mmGRPH_UPDATE));
+	do {
+		value = dm_read_reg(mem_input110->base.ctx, DCP_REG(mmGRPH_UPDATE));
 	} while (get_reg_field_value(value, GRPH_UPDATE, GRPH_SURFACE_UPDATE_PENDING));
 }
 
-- 
2.7.4

