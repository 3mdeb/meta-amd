From 7cacfb1b938199da10326a32d5064b8f4fd3dab9 Mon Sep 17 00:00:00 2001
From: Harry Wentland <harry.wentland@amd.com>
Date: Wed, 17 Jun 2015 09:16:55 -0400
Subject: [PATCH 288/401] drm/amdgpu: Add option to disable dal

Signed-off-by: Harry Wentland <harry.wentland@amd.com>
Reviewed-by: Eagle Yeh <Eagle.Yeh@amd.com>
Signed-off-by: Sanjay R Mehta <sanju.mehta@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu.h          |  1 +
 drivers/gpu/drm/amd/amdgpu/amdgpu_device.c   |  8 +--
 drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c      |  4 ++
 drivers/gpu/drm/amd/amdgpu/amdgpu_irq.c      | 21 ++----
 drivers/gpu/drm/amd/amdgpu/vi.c              | 95 +++++++++++++++++++++++++++-
 drivers/gpu/drm/amd/dsat/amdgpu_dsat_ioctl.c |  3 +
 6 files changed, 108 insertions(+), 24 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu.h b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
index 5578104..a2f5e9d 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
@@ -80,6 +80,7 @@ extern int amdgpu_bapm;
 extern int amdgpu_deep_color;
 extern int amdgpu_vm_size;
 extern int amdgpu_vm_block_size;
+extern int amdgpu_dal;
 
 #define AMDGPU_MAX_USEC_TIMEOUT			100000	/* 100 ms */
 #define AMDGPU_FENCE_JIFFIES_TIMEOUT		(HZ / 2)
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
index 628c010a..85ec0b4 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
@@ -1738,15 +1738,9 @@ int amdgpu_resume_kms(struct drm_device *dev, bool resume, bool fbcon)
 	/* blat the mode back in */
 	if (fbcon) {
 #ifdef CONFIG_DRM_AMD_DAL
-		switch (adev->asic_type) {
-		case CHIP_CARRIZO:
-			/* DAL handles DCE11 and up.
-			 * See amdgpu_dm.c. dm_resume() */
-			break;
-		default:
+	if (adev->asic_type != CHIP_CARRIZO || amdgpu_dal == 0) {
 			/* pre DCE11 */
 			drm_helper_resume_force_mode(dev);
-			break;
 		}
 #else
 		drm_helper_resume_force_mode(dev);
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
index 56da962..cbb22b3 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
@@ -73,6 +73,7 @@ int amdgpu_deep_color = 0;
 int amdgpu_vm_size = 8;
 int amdgpu_vm_block_size = -1;
 int amdgpu_exp_hw_support = 0;
+int amdgpu_dal = 1;
 
 MODULE_PARM_DESC(vramlimit, "Restrict VRAM for testing, in megabytes");
 module_param_named(vramlimit, amdgpu_vram_limit, int, 0600);
@@ -137,6 +138,9 @@ module_param_named(vm_block_size, amdgpu_vm_block_size, int, 0444);
 MODULE_PARM_DESC(exp_hw_support, "experimental hw support (1 = enable, 0 = disable (default))");
 module_param_named(exp_hw_support, amdgpu_exp_hw_support, int, 0444);
 
+MODULE_PARM_DESC(dal, "DAL display driver (1 = enable (default), 0 = disable)");
+module_param_named(dal, amdgpu_dal, int, 0444);
+
 static struct pci_device_id pciidlist[] = {
 #ifdef CONFIG_DRM_AMDGPU_CIK
 	/* Kaveri */
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_irq.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_irq.c
index 8d63a8e..72a3d19 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_irq.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_irq.c
@@ -234,21 +234,14 @@ int amdgpu_irq_init(struct amdgpu_device *adev)
 	}
 
 #ifdef CONFIG_DRM_AMD_DAL
-			switch(adev->asic_type)
-			{
-			case CHIP_CARRIZO:
-				/* DAL handles DCE11 and up.
-				 * See amdgpu_dm_irq.c. */
-				break;
-			default:
-				/* pre DCE11 */
-				INIT_WORK(&adev->hotplug_work,
-						amdgpu_hotplug_work_func);
-				break;
-			}
+	if (adev->asic_type != CHIP_CARRIZO || amdgpu_dal == 0) {
+		/* pre DCE11 */
+		INIT_WORK(&adev->hotplug_work,
+				amdgpu_hotplug_work_func);
+	}
 #else
-			INIT_WORK(&adev->hotplug_work,
-					amdgpu_hotplug_work_func);
+	INIT_WORK(&adev->hotplug_work,
+			amdgpu_hotplug_work_func);
 #endif
 
 
diff --git a/drivers/gpu/drm/amd/amdgpu/vi.c b/drivers/gpu/drm/amd/amdgpu/vi.c
index 94f71d7..60d01bd 100644
--- a/drivers/gpu/drm/amd/amdgpu/vi.c
+++ b/drivers/gpu/drm/amd/amdgpu/vi.c
@@ -1141,11 +1141,89 @@ static const struct amdgpu_ip_block_version cz_ip_blocks[] =
 		.major = 11,
 		.minor = 0,
 		.rev = 0,
-#ifdef CONFIG_DRM_AMD_DAL
-		.funcs = &amdgpu_dm_funcs,
-#else
 		.funcs = &dce_v11_0_ip_funcs,
+	},
+	{
+		.type = AMD_IP_BLOCK_TYPE_GFX,
+		.major = 8,
+		.minor = 0,
+		.rev = 0,
+		.funcs = &gfx_v8_0_ip_funcs,
+	},
+	{
+		.type = AMD_IP_BLOCK_TYPE_SDMA,
+		.major = 3,
+		.minor = 0,
+		.rev = 0,
+		.funcs = &sdma_v3_0_ip_funcs,
+	},
+	{
+		.type = AMD_IP_BLOCK_TYPE_UVD,
+		.major = 6,
+		.minor = 0,
+		.rev = 0,
+		.funcs = &uvd_v6_0_ip_funcs,
+	},
+	{
+		.type = AMD_IP_BLOCK_TYPE_VCE,
+		.major = 3,
+		.minor = 0,
+		.rev = 0,
+		.funcs = &vce_v3_0_ip_funcs,
+	},
+#if defined(CONFIG_DRM_AMD_ACP)
+	{
+		.type = AMD_IP_BLOCK_TYPE_ACP,
+		.major = 2,
+		.minor = 2,
+		.rev = 0,
+		.funcs = &acp_ip_funcs,
+	},
 #endif
+};
+
+/*
+ * This is temporary. After we've gone through full testing with
+ * DAL we want to remove dce_v11
+ */
+#if defined(CONFIG_DRM_AMD_DAL)
+static const struct amdgpu_ip_block_version cz_ip_blocks_dal[] =
+{
+	/* ORDER MATTERS! */
+	{
+		.type = AMD_IP_BLOCK_TYPE_COMMON,
+		.major = 2,
+		.minor = 0,
+		.rev = 0,
+		.funcs = &vi_common_ip_funcs,
+	},
+	{
+		.type = AMD_IP_BLOCK_TYPE_GMC,
+		.major = 8,
+		.minor = 0,
+		.rev = 0,
+		.funcs = &gmc_v8_0_ip_funcs,
+	},
+	{
+		.type = AMD_IP_BLOCK_TYPE_IH,
+		.major = 3,
+		.minor = 0,
+		.rev = 0,
+		.funcs = &cz_ih_ip_funcs,
+	},
+	{
+		.type = AMD_IP_BLOCK_TYPE_SMC,
+		.major = 8,
+		.minor = 0,
+		.rev = 0,
+		.funcs = &cz_dpm_ip_funcs,
+	},
+	{
+		.type = AMD_IP_BLOCK_TYPE_DCE,
+		.major = 11,
+		.minor = 0,
+		.rev = 0,
+		.funcs = &amdgpu_dm_funcs,
 	},
 	{
 		.type = AMD_IP_BLOCK_TYPE_GFX,
@@ -1185,6 +1263,7 @@ static const struct amdgpu_ip_block_version cz_ip_blocks[] =
 	},
 #endif
 };
+#endif
 
 int vi_set_ip_blocks(struct amdgpu_device *adev)
 {
@@ -1198,8 +1277,18 @@ int vi_set_ip_blocks(struct amdgpu_device *adev)
 		adev->num_ip_blocks = ARRAY_SIZE(tonga_ip_blocks);
 		break;
 	case CHIP_CARRIZO:
+#if defined(CONFIG_DRM_AMD_DAL)
+		if (amdgpu_dal != 0) {
+			adev->ip_blocks = cz_ip_blocks_dal;
+			adev->num_ip_blocks = ARRAY_SIZE(cz_ip_blocks_dal);
+		} else {
+			adev->ip_blocks = cz_ip_blocks;
+			adev->num_ip_blocks = ARRAY_SIZE(cz_ip_blocks);
+		}
+#else
 		adev->ip_blocks = cz_ip_blocks;
 		adev->num_ip_blocks = ARRAY_SIZE(cz_ip_blocks);
+#endif
 		break;
 	default:
 		/* FIXME: not supported yet */
diff --git a/drivers/gpu/drm/amd/dsat/amdgpu_dsat_ioctl.c b/drivers/gpu/drm/amd/dsat/amdgpu_dsat_ioctl.c
index d52f91c..8f58996 100644
--- a/drivers/gpu/drm/amd/dsat/amdgpu_dsat_ioctl.c
+++ b/drivers/gpu/drm/amd/dsat/amdgpu_dsat_ioctl.c
@@ -36,6 +36,9 @@
 int amdgpu_dsat_cmd_ioctl(struct drm_device *dev, void *data,
 		struct drm_file *filp)
 {
+	if (amdgpu_dal == 0)
+		return -EINVAL;
+
 	struct amdgpu_device *rdev;
 	struct amdgpu_display_manager *dm;
 	struct dal *dal;
-- 
1.9.1

