From 701e932c3658624c98f9e242433984ad3a9573b3 Mon Sep 17 00:00:00 2001
From: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Date: Fri, 9 Sep 2016 15:21:20 -0400
Subject: [PATCH 0970/1722] drm/amd/dal: Extract bios parser creation from AS.

Change-Id: I65ab020eda92957796a61cc9578c9f70fc3e703b
Signed-off-by: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 .../gpu/drm/amd/dal/dc/adapter/adapter_service.c   | 29 +--------
 .../gpu/drm/amd/dal/dc/adapter/adapter_service.h   |  2 -
 drivers/gpu/drm/amd/dal/dc/core/dc.c               | 70 ++++++++++------------
 .../amd/dal/include/adapter_service_interface.h    |  1 -
 4 files changed, 33 insertions(+), 69 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
index a3e2afc..c96cc2cd 100644
--- a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
+++ b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.c
@@ -706,12 +706,6 @@ static void adapter_service_destruct(
 	dal_asic_capability_destroy(&as->asic_cap);
 
 	dc_bios_destroy_integrated_info(dcb, &as->integrated_info);
-
-	if (as->dcb_internal) {
-		/* We are responsible only for destruction of Internal BIOS.
-		 * The External one will be destroyed by its creator. */
-		dal_bios_parser_destroy(&as->dcb_internal);
-	}
 }
 
 /*
@@ -772,22 +766,7 @@ static bool adapter_service_construct(
 	as->dce_environment = init_data->dce_environment;
 	dce_version = dal_adapter_service_get_dce_version(as);
 
-	if (init_data->vbios_override)
-		as->dcb_override = init_data->vbios_override;
-	else {
-		/* Create BIOS parser */
-		init_data->bp_init_data.ctx = init_data->ctx;
-
-		as->dcb_internal = dal_bios_parser_create(
-				&init_data->bp_init_data, dce_version);
-
-		if (!as->dcb_internal) {
-			ASSERT_CRITICAL(false);
-			goto failed_to_create_bios_parser;
-		}
-	}
-
-	dcb = dal_adapter_service_get_bios_parser(as);
+	dcb = as->ctx->dc_bios;
 
 
 	/* Create GPIO service */
@@ -846,10 +825,6 @@ failed_to_create_i2caux:
 	dal_gpio_service_destroy(&as->gpio_service);
 
 failed_to_create_gpio_service:
-	if (as->dcb_internal)
-		dal_bios_parser_destroy(&as->dcb_internal);
-
-failed_to_create_bios_parser:
 	dal_asic_capability_destroy(&as->asic_cap);
 
 	return false;
@@ -1412,7 +1387,7 @@ bool dal_adapter_service_get_feature_value(struct adapter_service *as,
 struct dc_bios *dal_adapter_service_get_bios_parser(
 	struct adapter_service *as)
 {
-	return as->dcb_override ? as->dcb_override : as->dcb_internal;
+	return as->ctx->dc_bios;
 }
 
 /*
diff --git a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.h b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.h
index 2bcfdfe..aa3fe1c 100644
--- a/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.h
+++ b/drivers/gpu/drm/amd/dal/dc/adapter/adapter_service.h
@@ -43,8 +43,6 @@ struct asic_cap;
 struct adapter_service {
 	struct dc_context *ctx;
 	struct asic_capability *asic_cap;
-	struct dc_bios *dcb_internal;/* created by DC */
-	struct dc_bios *dcb_override;/* supplied by creator of DC */
 	enum dce_environment dce_environment;
 	struct gpio_service *gpio_service;
 	struct i2caux *i2caux;
diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index b9cec57..adc053a 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -174,10 +174,6 @@ static struct adapter_service *create_as(
 
 	init_data.ctx = dc_ctx;
 
-	/* BIOS parser init data */
-	init_data.bp_init_data.ctx = dc_ctx;
-	init_data.bp_init_data.bios = init->asic_id.atombios_base_address;
-
 	/* HW init data */
 	init_data.hw_init_data.chip_id = init->asic_id.chip_id;
 	init_data.hw_init_data.chip_family = init->asic_id.chip_family;
@@ -327,7 +323,7 @@ static bool construct(struct core_dc *dc,
 		const struct dc_init_data *init_params)
 {
 	struct dal_logger *logger;
-	struct adapter_service *as;
+	struct adapter_service *as = NULL;
 	struct dc_context *dc_ctx = dm_alloc(sizeof(*dc_ctx));
 	enum dce_version dc_version = DCE_VERSION_UNKNOWN;
 
@@ -363,6 +359,25 @@ static bool construct(struct core_dc *dc,
 
 	dc_version = resource_parse_asic_id(init_params->asic_id);
 
+	/* Resource should construct all asic specific resources.
+	 * This should be the only place where we need to parse the asic id
+	 */
+	if (init_params->vbios_override)
+		dc_ctx->dc_bios = init_params->vbios_override;
+	else {
+		/* Create BIOS parser */
+		struct bp_init_data bp_init_data;
+		bp_init_data.ctx = dc_ctx;
+		bp_init_data.bios = init_params->asic_id.atombios_base_address;
+
+		dc_ctx->dc_bios = dal_bios_parser_create(
+				&bp_init_data, dc_version);
+
+		if (!dc_ctx->dc_bios) {
+			ASSERT_CRITICAL(false);
+			goto as_fail;
+		}
+	}
 
 	/* TODO: Refactor DCE code to remove AS and asic caps */
 	if (dc_version < DCE_VERSION_MAX) {
@@ -383,41 +398,19 @@ static bool construct(struct core_dc *dc,
 			goto as_fail;
 		}
 
-		dc_ctx->dc_bios = dal_adapter_service_get_bios_parser(as);
-
-		dc->res_pool = dc_create_resource_pool(
-				as,
-				dc,
-				init_params->num_virtual_links,
-				dc_version,
-				init_params->asic_id);
-		if (!dc->res_pool)
-			goto create_resource_fail;
-
-		if (!create_links(dc, as, init_params->num_virtual_links))
-			goto create_links_fail;
-	} else {
-
-		/* Resource should construct all asic specific resources.
-		 * This should be the only place where we need to parse the asic id
-		 */
-
+	}
 
-		/*TODO hook up here real bios as in adapter service*/
-		dc_ctx->dc_bios = init_params->vbios_override;
+	dc->res_pool = dc_create_resource_pool(
+			as,
+			dc,
+			init_params->num_virtual_links,
+			dc_version,
+			init_params->asic_id);
+	if (!dc->res_pool)
+		goto create_resource_fail;
 
-		dc->res_pool = dc_create_resource_pool(
-				NULL,
-				dc,
-				init_params->num_virtual_links,
-				dc_version,
-				init_params->asic_id);
-		if (!dc->res_pool)
-			goto create_resource_fail;
-
-		if (!create_links(dc, NULL, init_params->num_virtual_links))
-			goto create_links_fail;
-	}
+	if (!create_links(dc, as, init_params->num_virtual_links))
+		goto create_links_fail;
 
 	allocate_dc_stream_funcs(dc);
 
@@ -1394,7 +1387,6 @@ void dc_update_surfaces_for_target(struct dc *dc, struct dc_surface_update *upda
 	struct validate_context *context = core_dc->temp_flip_context;
 	int i, j;
 	bool is_new_pipe_surface[MAX_SURFACES];
-	struct validate_context *tmp_ctx;
 
 	for (j = 0; j < MAX_SURFACES; j++)
 		is_new_pipe_surface[j] = true;
diff --git a/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h b/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
index 1d13f89..a6f4e4c 100644
--- a/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
+++ b/drivers/gpu/drm/amd/dal/include/adapter_service_interface.h
@@ -317,7 +317,6 @@ enum as_drr_support {
 /* Adapter service initialize data structure*/
 struct as_init_data {
 	struct hw_asic_id hw_init_data;
-	struct bp_init_data bp_init_data;
 	struct dc_context *ctx;
 	const struct dal_override_parameters *display_param;
 	struct dc_bios *vbios_override;
-- 
2.7.4

