From 8c7bbfca634d80e71807a7a55216139c896a930c Mon Sep 17 00:00:00 2001
From: Mykola Lysenko <mykola.lysenko@amd.com>
Date: Mon, 22 Jun 2015 07:46:55 -0400
Subject: [PATCH 293/401] amd/dal: enable/disable AFMT memory in encoder for DP
 audio

Signed-off-by: Mykola Lysenko <mykola.lysenko@amd.com>
Reviewed-by: Eagle Yeh <Eagle.Yeh@amd.com>
Signed-off-by: Sanjay R Mehta <sanju.mehta@amd.com>
---
 .../drm/amd/dal/audio/dce110/hw_ctx_audio_dce110.c | 28 ++++++++++------------
 .../gpu/drm/amd/dal/encoder/digital_encoder_dp.c   | 12 ++++++++++
 .../dal/hw_sequencer/dce110/hw_sequencer_dce110.c  | 10 ++++----
 3 files changed, 29 insertions(+), 21 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/audio/dce110/hw_ctx_audio_dce110.c b/drivers/gpu/drm/amd/dal/audio/dce110/hw_ctx_audio_dce110.c
index 7f9c201..dbda470b 100644
--- a/drivers/gpu/drm/amd/dal/audio/dce110/hw_ctx_audio_dce110.c
+++ b/drivers/gpu/drm/amd/dal/audio/dce110/hw_ctx_audio_dce110.c
@@ -347,17 +347,15 @@ static void setup_audio_wall_dto(
 	const struct audio_crtc_info *crtc_info,
 	const struct audio_pll_info *pll_info)
 {
-	struct azalia_clock_info azaliaclockinfo = { 0 };
+	struct azalia_clock_info clock_info = { 0 };
 
-	uint32_t value = 0;
-	value = dal_read_reg(hw_ctx->ctx,
-			mmDCCG_AUDIO_DTO_SOURCE);
+	uint32_t value = dal_read_reg(hw_ctx->ctx, mmDCCG_AUDIO_DTO_SOURCE);
 
 	/* TODO: GraphicsObject\inc\GraphicsObjectDefs.hpp(131):
 	 *inline bool isHdmiSignal(SignalType signal)
 	 *if (Signals::isHdmiSignal(signal))
 	 */
-	if (signal == SIGNAL_TYPE_HDMI_TYPE_A) {
+	if (dal_is_hdmi_signal(signal)) {
 		/*DTO0 Programming goal:
 		-generate 24MHz, 128*Fs from 24MHz
 		-use DTO0 when an active HDMI port is connected
@@ -368,7 +366,7 @@ static void setup_audio_wall_dto(
 			hw_ctx,
 			crtc_info->requested_pixel_clock,
 			crtc_info->calculated_pixel_clock,
-			&azaliaclockinfo);
+			&clock_info);
 
 		/* On TN/SI, Program DTO source select and DTO select before
 		programming DTO modulo and DTO phase. These bits must be
@@ -395,12 +393,10 @@ static void setup_audio_wall_dto(
 
 		/* module */
 		{
-			value = 0;
-
 			value = dal_read_reg(hw_ctx->ctx,
 					mmDCCG_AUDIO_DTO0_MODULE);
 			set_reg_field_value(value,
-				azaliaclockinfo.audio_dto_module,
+				clock_info.audio_dto_module,
 				DCCG_AUDIO_DTO0_MODULE,
 				DCCG_AUDIO_DTO0_MODULE);
 			dal_write_reg(hw_ctx->ctx,
@@ -414,7 +410,7 @@ static void setup_audio_wall_dto(
 			value = dal_read_reg(hw_ctx->ctx,
 					mmDCCG_AUDIO_DTO0_PHASE);
 			set_reg_field_value(value,
-				azaliaclockinfo.audio_dto_phase,
+				clock_info.audio_dto_phase,
 				DCCG_AUDIO_DTO0_PHASE,
 				DCCG_AUDIO_DTO0_PHASE);
 
@@ -434,7 +430,7 @@ static void setup_audio_wall_dto(
 			hw_ctx,
 			crtc_info->requested_pixel_clock,
 			pll_info,
-			&azaliaclockinfo);
+			&clock_info);
 
 		/* Program DTO select before programming DTO modulo and DTO
 		phase. default to use DTO1 */
@@ -446,10 +442,11 @@ static void setup_audio_wall_dto(
 			/*dal_write_reg(mmDCCG_AUDIO_DTO_SOURCE, value)*/
 
 			/* Select 512fs for DP TODO: web register definition
-			does not match register header file */
+			does not match register header file
 			set_reg_field_value(value, 1,
 				DCCG_AUDIO_DTO_SOURCE,
 				DCCG_AUDIO_DTO2_USE_512FBR_DTO);
+			*/
 
 			dal_write_reg(hw_ctx->ctx,
 					mmDCCG_AUDIO_DTO_SOURCE, value);
@@ -463,7 +460,7 @@ static void setup_audio_wall_dto(
 					mmDCCG_AUDIO_DTO1_MODULE);
 
 			set_reg_field_value(value,
-				azaliaclockinfo.audio_dto_module,
+				clock_info.audio_dto_module,
 				DCCG_AUDIO_DTO1_MODULE,
 				DCCG_AUDIO_DTO1_MODULE);
 
@@ -479,7 +476,7 @@ static void setup_audio_wall_dto(
 					mmDCCG_AUDIO_DTO1_PHASE);
 
 			set_reg_field_value(value,
-				azaliaclockinfo.audio_dto_phase,
+				clock_info.audio_dto_phase,
 				DCCG_AUDIO_DTO1_PHASE,
 				DCCG_AUDIO_DTO1_PHASE);
 
@@ -1783,8 +1780,7 @@ static bool get_azalia_clock_info_dp(
 
 	/*audio_dto_phase = 24 * 10,000;
 	 * 24MHz in [100Hz] units */
-	azalia_clock_info->audio_dto_phase =
-			24 * 10000;
+	azalia_clock_info->audio_dto_phase = 24 * 10000;
 
 	/*audio_dto_module = dpDtoSourceClockInkhz * 10,000;
 	 *  [khz] ->[100Hz] */
diff --git a/drivers/gpu/drm/amd/dal/encoder/digital_encoder_dp.c b/drivers/gpu/drm/amd/dal/encoder/digital_encoder_dp.c
index d7b9de3..8786920 100644
--- a/drivers/gpu/drm/amd/dal/encoder/digital_encoder_dp.c
+++ b/drivers/gpu/drm/amd/dal/encoder/digital_encoder_dp.c
@@ -156,6 +156,12 @@ enum encoder_result dal_digital_encoder_dp_enable_output(
 
 	/* Enable the PHY */
 
+	if (output->flags.bits.ENABLE_AUDIO)
+		HW_CTX(enc)->funcs->set_afmt_memory_power_state(
+			HW_CTX(enc),
+			output->ctx.engine,
+			true);
+
 	result = DIGITAL_ENCODER_DP(enc)->funcs->do_enable_output(
 		DIGITAL_ENCODER_DP(enc), output, &output->link_settings);
 
@@ -200,6 +206,12 @@ enum encoder_result dal_digital_encoder_dp_disable_output(
 	DIGITAL_ENCODER_DP(enc)->funcs->do_disable_output(
 		DIGITAL_ENCODER_DP(enc), output);
 
+	if (output->flags.bits.ENABLE_AUDIO)
+		HW_CTX(enc)->funcs->set_afmt_memory_power_state(
+			HW_CTX(enc),
+			output->ctx.engine,
+			false);
+
 	return ENCODER_RESULT_OK;
 }
 
diff --git a/drivers/gpu/drm/amd/dal/hw_sequencer/dce110/hw_sequencer_dce110.c b/drivers/gpu/drm/amd/dal/hw_sequencer/dce110/hw_sequencer_dce110.c
index 3e91cc0..366f64b 100644
--- a/drivers/gpu/drm/amd/dal/hw_sequencer/dce110/hw_sequencer_dce110.c
+++ b/drivers/gpu/drm/amd/dal/hw_sequencer/dce110/hw_sequencer_dce110.c
@@ -633,11 +633,11 @@ static void setup_audio_wall_dto(
 				path_mode->display_path);
 
 		dal_hw_sequencer_build_audio_output(
-		hws,
-		path_mode,
-		engine_id,
-		&build_params->pll_settings_params[selected_path_id],
-		&audio_output);
+			hws,
+			path_mode,
+			engine_id,
+			&build_params->pll_settings_params[selected_path_id],
+			&audio_output);
 
 		dal_audio_setup_audio_wall_dto(
 			selected_audio,
-- 
1.9.1

