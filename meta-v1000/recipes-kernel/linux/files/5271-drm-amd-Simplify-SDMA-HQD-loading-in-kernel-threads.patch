From 2647949696972531d640cb1a982fb0e67b685198 Mon Sep 17 00:00:00 2001
From: Felix Kuehling <Felix.Kuehling@amd.com>
Date: Thu, 1 Sep 2016 21:11:39 -0400
Subject: [PATCH 5271/5855] drm/amd: Simplify SDMA HQD loading in kernel
 threads

Use the use_mm function to temporarily access a user process context
while running in a kernel thread. This avoids the need to lock the
mmap_sem, which fixes a circular locking problem observed with user
pointers while running without the HW scheduler.

Change-Id: I4e74f3b021277e09df55dddf81ae5e070032b599
Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
---
 drivers/gpu/drm/amd/amdkfd/kfd_device.c               | 9 +--------
 drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c | 4 ----
 2 files changed, 1 insertion(+), 12 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_device.c b/drivers/gpu/drm/amd/amdkfd/kfd_device.c
index 1ab1969..606e6e6 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_device.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_device.c
@@ -739,16 +739,9 @@ int kgd2kfd_resume_mm(struct kfd_dev *kfd, struct mm_struct *mm)
 
 	r = -ENODEV;
 	pdd = kfd_get_process_device_data(kfd, p);
-	if (pdd) {
-		if (kfd->dqm->sched_policy == KFD_SCHED_POLICY_NO_HWS)
-			down_read(&mm->mmap_sem);
-
+	if (pdd)
 		r = process_restore_queues(kfd->dqm, &pdd->qpd);
 
-		if (kfd->dqm->sched_policy == KFD_SCHED_POLICY_NO_HWS)
-			up_read(&mm->mmap_sem);
-	}
-
 	kfd_unref_process(p);
 	return r;
 }
diff --git a/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c b/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c
index d8698bb..eabea29 100644
--- a/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_device_queue_manager.c
@@ -407,8 +407,6 @@ static int update_queue(struct device_queue_manager *dqm, struct queue *q)
 
 	BUG_ON(!dqm || !q || !q->mqd);
 
-	if (dqm->sched_policy == KFD_SCHED_POLICY_NO_HWS)
-		down_read(&current->mm->mmap_sem);
 	mutex_lock(&dqm->lock);
 
 	pdd = kfd_get_process_device_data(q->device, q->process);
@@ -464,8 +462,6 @@ static int update_queue(struct device_queue_manager *dqm, struct queue *q)
 
 out_unlock:
 	mutex_unlock(&dqm->lock);
-	if (dqm->sched_policy == KFD_SCHED_POLICY_NO_HWS)
-		up_read(&current->mm->mmap_sem);
 
 	return retval;
 }
-- 
2.7.4

