From 542d055d3ca7e0cfcb6b9a4eab3af88521d85116 Mon Sep 17 00:00:00 2001
From: Mykola Lysenko <Mykola.Lysenko@amd.com>
Date: Tue, 28 Jun 2016 16:13:20 +0800
Subject: [PATCH 0596/1722] drm/amd/dal: add send null packet in stream enc

Change-Id: Ic00b135a70c46ff4cb581e9bdd64c01351cf4a80
Signed-off-by: Mykola Lysenko <Mykola.Lysenko@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc.c               | 22 ++++++++++++--
 drivers/gpu/drm/amd/dal/dc/dc.h                    |  3 +-
 .../drm/amd/dal/dc/dce110/dce110_stream_encoder.c  | 35 ++++++++++++++++++++++
 .../drm/amd/dal/dc/dce80/dce80_stream_encoder.c    |  9 ++++++
 drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h |  3 ++
 .../gpu/drm/amd/dal/modules/freesync/freesync.c    | 10 +++----
 6 files changed, 74 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc.c b/drivers/gpu/drm/amd/dal/dc/core/dc.c
index a4115ec..36c3c16 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc.c
@@ -201,7 +201,7 @@ static struct adapter_service *create_as(
 	return as;
 }
 
-static bool dc_stream_adjust_vmin_vmax(struct dc *dc,
+static bool stream_adjust_vmin_vmax(struct dc *dc,
 		const struct dc_stream **stream, int num_streams,
 		int vmin, int vmax)
 {
@@ -230,10 +230,28 @@ static bool dc_stream_adjust_vmin_vmax(struct dc *dc,
 	return ret;
 }
 
+static void stream_send_null_packet(const struct dc_stream *dc_stream, bool enable)
+{
+	struct core_stream *stream = DC_STREAM_TO_CORE(dc_stream);
+	struct core_dc *core_dc = DC_TO_CORE(stream->ctx->dc);
+
+	int i;
+
+	struct resource_context *res_ctx = &core_dc->current_context->res_ctx;
+
+	for (i = 0; i < res_ctx->pool->pipe_count; i++) {
+		if (res_ctx->pipe_ctx[i].stream != stream)
+			continue;
+
+		res_ctx->pipe_ctx[i].stream_enc->funcs->send_null_packet(res_ctx->pipe_ctx[i].stream_enc, enable);
+	}
+}
+
 static void allocate_dc_stream_funcs(struct core_dc *core_dc)
 {
 	if (core_dc->hwss.set_drr != NULL) {
-		core_dc->public.stream_funcs.dc_stream_adjust_vmin_vmax = dc_stream_adjust_vmin_vmax;
+		core_dc->public.stream_funcs.adjust_vmin_vmax = stream_adjust_vmin_vmax;
+		core_dc->public.stream_funcs.send_null_packet = stream_send_null_packet;
 	}
 }
 
diff --git a/drivers/gpu/drm/amd/dal/dc/dc.h b/drivers/gpu/drm/amd/dal/dc/dc.h
index 5ee045a..767fd2c 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc.h
+++ b/drivers/gpu/drm/amd/dal/dc/dc.h
@@ -52,8 +52,9 @@ struct dc;
 struct dc_surface;
 
 struct dc_stream_funcs {
-	bool (*dc_stream_adjust_vmin_vmax)(struct dc *dc,
+	bool (*adjust_vmin_vmax)(struct dc *dc,
 			const struct dc_stream **stream, int num_streams, int vmin, int vmax);
+	void (*send_null_packet)(const struct dc_stream *dc_stream, bool enable);
 };
 
 /* Structure to hold configuration flags set by dm at dc creation. */
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c
index d92bebc..389ce48 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_stream_encoder.c
@@ -1069,6 +1069,40 @@ static void dce110_stream_encoder_dp_unblank(
 	dm_write_reg(ctx, addr, value);
 }
 
+static void send_null_packet(
+	struct stream_encoder *enc,
+	bool enable)
+{
+	struct dce110_stream_encoder *enc110 = DCE110STRENC_FROM_STRENC(enc);
+	struct dc_context *ctx = enc110->base.ctx;
+	uint32_t addr = LINK_REG(HDMI_CONTROL);
+	uint32_t value = dm_read_reg(ctx, addr);
+	if (enable) {
+		set_reg_field_value(
+				value,
+				0,
+				HDMI_CONTROL,
+				HDMI_NO_EXTRA_NULL_PACKET_FILLED);
+		set_reg_field_value(
+				value,
+				0,
+				HDMI_CONTROL,
+				HDMI_PACKET_GEN_VERSION);
+	} else {
+		set_reg_field_value(
+				value,
+				0,
+				HDMI_CONTROL,
+				HDMI_NO_EXTRA_NULL_PACKET_FILLED);
+		set_reg_field_value(
+				value,
+				1,
+				HDMI_CONTROL,
+				HDMI_PACKET_GEN_VERSION);
+	}
+	dm_write_reg(ctx, addr, value);
+}
+
 static const struct stream_encoder_funcs dce110_str_enc_funcs = {
 	.dp_set_stream_attribute =
 		dce110_stream_encoder_dp_set_stream_attribute,
@@ -1090,6 +1124,7 @@ static const struct stream_encoder_funcs dce110_str_enc_funcs = {
 		dce110_stream_encoder_dp_blank,
 	.dp_unblank =
 		dce110_stream_encoder_dp_unblank,
+	.send_null_packet = send_null_packet
 };
 
 bool dce110_stream_encoder_construct(
diff --git a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c
index 0ee9293..d0373b3 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce80/dce80_stream_encoder.c
@@ -1051,6 +1051,13 @@ static void dce80_stream_encoder_dp_unblank(
 	dm_write_reg(ctx, addr, value);
 }
 
+static void dce80_send_null_packet(
+		struct stream_encoder *enc,
+		bool enable)
+{
+
+}
+
 static const struct stream_encoder_funcs dce80_str_enc_funcs = {
 	.dp_set_stream_attribute =
 		dce80_stream_encoder_dp_set_stream_attribute,
@@ -1072,6 +1079,8 @@ static const struct stream_encoder_funcs dce80_str_enc_funcs = {
 		dce80_stream_encoder_dp_blank,
 	.dp_unblank =
 		dce80_stream_encoder_dp_unblank,
+	.send_null_packet =
+		dce80_send_null_packet
 };
 
 bool dce80_stream_encoder_construct(
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h b/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h
index a31dcc9..480926e 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw/stream_encoder.h
@@ -82,6 +82,9 @@ struct stream_encoder_funcs {
 	void (*dp_unblank)(
 		struct stream_encoder *enc,
 		const struct encoder_unblank_param *param);
+	void (*send_null_packet)(
+		struct stream_encoder *enc,
+		bool enable);
 };
 
 #endif /* STREAM_ENCODER_H_ */
diff --git a/drivers/gpu/drm/amd/dal/modules/freesync/freesync.c b/drivers/gpu/drm/amd/dal/modules/freesync/freesync.c
index 1d98e58..afcf358 100644
--- a/drivers/gpu/drm/amd/dal/modules/freesync/freesync.c
+++ b/drivers/gpu/drm/amd/dal/modules/freesync/freesync.c
@@ -69,7 +69,7 @@ struct core_freesync {
 
 static bool check_dc_support(const struct dc *dc)
 {
-	if (dc->stream_funcs.dc_stream_adjust_vmin_vmax == NULL)
+	if (dc->stream_funcs.adjust_vmin_vmax == NULL)
 		return false;
 
 	return true;
@@ -437,7 +437,7 @@ void mod_freesync_handle_v_update(struct mod_freesync *mod_freesync,
 		update_stream_freesync_context(core_freesync, streams[0]);
 
 		/* Program static screen ramp values */
-		core_freesync->dc->stream_funcs.dc_stream_adjust_vmin_vmax(
+		core_freesync->dc->stream_funcs.adjust_vmin_vmax(
 					core_freesync->dc, streams,
 					num_streams, v_total,
 					v_total);
@@ -482,7 +482,7 @@ static bool set_freesync_on_streams(struct core_freesync *core_freesync,
 						streams[stream_idx]);
 
 				core_freesync->dc->stream_funcs.
-				dc_stream_adjust_vmin_vmax(
+				adjust_vmin_vmax(
 						core_freesync->dc, streams,
 						num_streams, v_total_min,
 						v_total_max);
@@ -510,7 +510,7 @@ static bool set_freesync_on_streams(struct core_freesync *core_freesync,
 						streams[stream_idx]);
 
 					core_freesync->dc->stream_funcs.
-					dc_stream_adjust_vmin_vmax(
+					adjust_vmin_vmax(
 						core_freesync->dc, streams,
 						num_streams, v_total_nominal,
 						v_total_nominal);
@@ -530,7 +530,7 @@ static bool set_freesync_on_streams(struct core_freesync *core_freesync,
 					streams[stream_idx]);
 
 				core_freesync->dc->stream_funcs.
-						dc_stream_adjust_vmin_vmax(
+						adjust_vmin_vmax(
 						core_freesync->dc, streams,
 						num_streams, v_total_nominal,
 						v_total_nominal);
-- 
2.7.4

