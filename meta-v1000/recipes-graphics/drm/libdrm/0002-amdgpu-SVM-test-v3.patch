From 29bf4795903316ebadf0a01f2876b17b3e456cfc Mon Sep 17 00:00:00 2001
From: Alex Xie <AlexBin.Xie@amd.com>
Date: Tue, 20 Oct 2015 11:52:08 -0400
Subject: [PATCH 02/39] amdgpu: SVM test v3
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

SWDEV-75927: Coarse Grain SVM support for OpenCL 2.0
Add SVM relevant test.

v3:
2f8e2d2e4a406bc290986eac600f4263259b5ac5
[Jammy Zhou]
amdgpu_svm_test part
35425ab8b66de8d9a375f62317c26ebe3c44b7bc
amdgpu_svm_test part

v2:
1. Update the description of this commit.
2. Fix an issue that the SVM feature should not be
   tested when SVM range is not supported.
3. Remove test for query function for general VM range.

Signed-off-by: Alex Xie <AlexBin.Xie@amd.com>
Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Jammy Zhou <Jammy.Zhou@amd.com>
Reviewed-by: Michel DÃ¤nzer <michel.daenzer@amd.com>
Signed-off-by: Arsalan H. Awan <Arsalan_Awan@mentor.com>
---
 tests/amdgpu/basic_tests.c | 54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 54 insertions(+)

diff --git a/tests/amdgpu/basic_tests.c b/tests/amdgpu/basic_tests.c
index 1adbddd..0a3a89d 100644
--- a/tests/amdgpu/basic_tests.c
+++ b/tests/amdgpu/basic_tests.c
@@ -48,6 +48,7 @@ static void amdgpu_userptr_test(void);
 static void amdgpu_semaphore_test(void);
 static void amdgpu_sync_dependency_test(void);
 static void amdgpu_bo_eviction_test(void);
+static void amdgpu_svm_test(void);
 
 static void amdgpu_command_submission_write_linear_helper(unsigned ip_type);
 static void amdgpu_command_submission_const_fill_helper(unsigned ip_type);
@@ -69,9 +70,11 @@ CU_TestInfo basic_tests[] = {
 	{ "Command submission Test (SDMA)", amdgpu_command_submission_sdma },
 	{ "SW semaphore Test",  amdgpu_semaphore_test },
 	{ "Sync dependency Test",  amdgpu_sync_dependency_test },
+	{ "SVM Test", amdgpu_svm_test },
 	CU_TEST_INFO_NULL,
 };
 #define BUFFER_SIZE (8 * 1024)
+#define SVM_TEST_COUNT 16
 #define SDMA_PKT_HEADER_op_offset 0
 #define SDMA_PKT_HEADER_op_mask   0x000000FF
 #define SDMA_PKT_HEADER_op_shift  0
@@ -1822,3 +1825,54 @@ static void amdgpu_sync_dependency_test(void)
 
 	free(ibs_request.dependencies);
 }
+
+static void amdgpu_svm_test(void)
+{
+	int r;
+	uint64_t svm_mc;
+	amdgpu_va_handle va_handle[SVM_TEST_COUNT];
+	void *cpu;
+	uint64_t start;
+	uint64_t end;
+	int i;
+
+	r = amdgpu_svm_init(device_handle);
+	CU_ASSERT_EQUAL(r, 0);
+
+	r = amdgpu_va_range_query(device_handle,
+		amdgpu_gpu_va_range_svm, &start, &end);
+	CU_ASSERT_EQUAL(r, 0);
+	printf("\n");
+	printf("SVM range is from 0x%llx to 0x%llx.\n", start, end);
+
+	/* If there is no SVM range, exit this function.*/
+	if (start == 0ULL && end == 0ULL)
+		return;
+
+	CU_ASSERT(start < end);
+	CU_ASSERT(end - start >= 1ULL * 1024ULL * 1024ULL * 1024ULL);
+
+	for (i = 0; i < SVM_TEST_COUNT; i++) {
+		r = amdgpu_va_range_alloc(device_handle,
+					  amdgpu_gpu_va_range_svm,
+					  64 * 1024 * 1024, 1, 0, &svm_mc,
+					  &va_handle[i], 0);
+		CU_ASSERT_EQUAL(r, 0);
+		printf("Allocate SVM MC 0x%llx.\n", svm_mc);
+
+		r = amdgpu_svm_commit(va_handle[i], &cpu);
+		CU_ASSERT_EQUAL(r, 0);
+		CU_ASSERT_PTR_NOT_NULL(cpu);
+		CU_ASSERT_EQUAL(svm_mc, (uint64_t)cpu);
+	}
+
+	for (i = 0; i < SVM_TEST_COUNT; i++) {
+		r = amdgpu_svm_uncommit(va_handle[i]);
+		CU_ASSERT_EQUAL(r, 0);
+
+		r = amdgpu_va_range_free(va_handle[i]);
+		CU_ASSERT_EQUAL(r, 0);
+	}
+
+	amdgpu_svm_deinit(device_handle);
+}
-- 
2.7.4
