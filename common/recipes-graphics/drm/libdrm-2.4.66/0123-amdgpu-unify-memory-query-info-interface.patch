From 87a889d35949d75e8cea19af8cc14e6ad75ac975 Mon Sep 17 00:00:00 2001
From: Junwei Zhang <Jerry.Zhang@amd.com>
Date: Thu, 29 Sep 2016 09:36:16 +0800
Subject: [PATCH 06/10] amdgpu: unify memory query info interface
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Change-Id: I683f52309bb5e821bd49105064a9fb7ba0c9d970
Signed-off-by: Junwei Zhang <Jerry.Zhang@amd.com>
Reviewed-by: Marek Olšák <marek.olsak@amd.com>
---
 amdgpu/amdgpu.h            | 50 ----------------------------------------
 amdgpu/amdgpu_gpu_info.c   | 57 ----------------------------------------------
 include/drm/amdgpu_drm.h   | 38 +++++++++++++++++++++----------
 tests/amdgpu/basic_tests.c |  4 ++--
 4 files changed, 28 insertions(+), 121 deletions(-)

diff --git a/amdgpu/amdgpu.h b/amdgpu/amdgpu.h
index 7b466dd..8b87990 100644
--- a/amdgpu/amdgpu.h
+++ b/amdgpu/amdgpu.h
@@ -415,40 +415,6 @@ struct amdgpu_heap_info {
 	uint64_t max_allocation;
 };
 
-struct amdgpu_heap_info2 {
-	/** max. physical memory */
-	uint64_t total_heap_size;
-
-	/** Theoretical max. available memory in the given heap */
-	uint64_t usable_heap_size;
-
-	/**
-	 * Number of bytes allocated in the heap. This includes all processes
-	 * and private allocations in the kernel. It changes when new buffers
-	 * are allocated, freed, and moved. It cannot be larger than
-	 * heap_size.
-	 */
-	uint64_t heap_usage;
-
-	/**
-	 * Theoretical possible max. size of buffer which
-	 * could be allocated in the given heap
-	 */
-	uint64_t max_allocation;
-};
-
-/**
- * Structure which provide information about heap
- *
- * \sa amdgpu_query_memory_info()
- *
- */
-struct amdgpu_memory_info {
-	struct amdgpu_heap_info2 vram;
-	struct amdgpu_heap_info2 cpu_accessible_vram;
-	struct amdgpu_heap_info2 gtt;
-};
-
 /**
  * Describe GPU h/w info needed for UMD correct initialization
  *
@@ -1175,22 +1141,6 @@ int amdgpu_query_heap_info(amdgpu_device_handle dev, uint32_t heap,
 			   uint32_t flags, struct amdgpu_heap_info *info);
 
 /**
- * Query memory information
- *
- * This query allows UMD to query potentially available memory resources
- * and total memory size.
- *
- * \param   dev  - \c [in] Device handle. See #amdgpu_device_initialize()
- * \param   mem  - \c [out] Pointer to structure to get memory information
- *
- * \return   0 on success\n
- *          <0 - Negative POSIX Error code
- *
-*/
-int amdgpu_query_memory_info(amdgpu_device_handle dev,
-			struct amdgpu_memory_info *mem);
-
-/**
  * Get the CRTC ID from the mode object ID
  *
  * \param   dev    - \c [in] Device handle. See #amdgpu_device_initialize()
diff --git a/amdgpu/amdgpu_gpu_info.c b/amdgpu/amdgpu_gpu_info.c
index d3796ac..d801b86 100644
--- a/amdgpu/amdgpu_gpu_info.c
+++ b/amdgpu/amdgpu_gpu_info.c
@@ -243,63 +243,6 @@ int amdgpu_query_gpu_info(amdgpu_device_handle dev,
 	return 0;
 }
 
-int amdgpu_query_memory_info(amdgpu_device_handle dev,
-			struct amdgpu_memory_info *mem)
-{
-	struct drm_amdgpu_info_vram_gtt vram_gtt_info = {};
-	struct drm_amdgpu_info_vram_gtt_total vram_gtt_total_info = {};
-	struct drm_amdgpu_info_vram_gtt_max vram_gtt_max_info = {};
-	int r;
-
-	r = amdgpu_query_info(dev, AMDGPU_INFO_VRAM_GTT,
-			      sizeof(vram_gtt_info), &vram_gtt_info);
-	if (r)
-		return r;
-
-	r = amdgpu_query_info(dev, AMDGPU_INFO_VRAM_GTT_TOTAL,
-			      sizeof(vram_gtt_total_info), &vram_gtt_total_info);
-	if (r)
-		return r;
-
-	r = amdgpu_query_info(dev, AMDGPU_INFO_VRAM_GTT_MAX,
-			      sizeof(vram_gtt_max_info), &vram_gtt_max_info);
-	if (r)
-		return r;
-
-	/* vram info */
-	mem->vram.total_heap_size = vram_gtt_total_info.vram_total_size;
-	mem->vram.usable_heap_size = vram_gtt_info.vram_size;
-	mem->vram.max_allocation = vram_gtt_max_info.vram_max_size;
-	r = amdgpu_query_info(dev, AMDGPU_INFO_VRAM_USAGE,
-			      sizeof(mem->vram.heap_usage),
-			      &mem->vram.heap_usage);
-	if (r)
-		return r;
-
-	/* visible vram info */
-	mem->cpu_accessible_vram.total_heap_size = vram_gtt_total_info.vram_cpu_accessible_total_size;
-	mem->cpu_accessible_vram.usable_heap_size = vram_gtt_info.vram_cpu_accessible_size;
-	mem->cpu_accessible_vram.max_allocation = vram_gtt_max_info.vram_cpu_accessible_max_size;
-	r = amdgpu_query_info(dev, AMDGPU_INFO_VIS_VRAM_USAGE,
-			      sizeof(mem->cpu_accessible_vram.heap_usage),
-			      &mem->cpu_accessible_vram.heap_usage);
-	if (r)
-		return r;
-
-	/* gtt info */
-	mem->gtt.total_heap_size = vram_gtt_total_info.gtt_total_size;
-	mem->gtt.usable_heap_size = vram_gtt_info.gtt_size;
-	mem->gtt.max_allocation = vram_gtt_max_info.gtt_max_size;
-
-	r = amdgpu_query_info(dev, AMDGPU_INFO_GTT_USAGE,
-			sizeof(mem->gtt.heap_usage),
-			&mem->gtt.heap_usage);
-	if (r)
-		return r;
-
-	return 0;
-}
-
 int amdgpu_query_heap_info(amdgpu_device_handle dev,
 			uint32_t heap,
 			uint32_t flags,
diff --git a/include/drm/amdgpu_drm.h b/include/drm/amdgpu_drm.h
index 81a82c7..430f239 100644
--- a/include/drm/amdgpu_drm.h
+++ b/include/drm/amdgpu_drm.h
@@ -539,10 +539,8 @@ struct drm_amdgpu_cs_chunk_data {
 #define AMDGPU_INFO_VIS_VRAM_USAGE		0x17
 /* virtual range */
 #define AMDGPU_INFO_VIRTUAL_RANGE		0x18
-/* Query the total size of VRAM and GTT domains */
-#define AMDGPU_INFO_VRAM_GTT_TOTAL		0x19
-/* Query the max allocation size of VRAM and GTT domains */
-#define AMDGPU_INFO_VRAM_GTT_MAX               0x1a
+/* Query memory about VRAM and GTT domains */
+#define AMDGPU_INFO_MEMORY			0x19
 
 /* gpu capability */
 #define AMDGPU_INFO_CAPABILITY			0x50
@@ -635,16 +633,32 @@ struct drm_amdgpu_info_vram_gtt {
 	uint64_t gtt_size;
 };
 
-struct drm_amdgpu_info_vram_gtt_total {
-	uint64_t vram_total_size;
-	uint64_t vram_cpu_accessible_total_size;
-	uint64_t gtt_total_size;
+struct drm_amdgpu_heap_info {
+	/** max. physical memory */
+	__u64 total_heap_size;
+
+	/** Theoretical max. available memory in the given heap */
+	__u64 usable_heap_size;
+
+	/**
+	 * Number of bytes allocated in the heap. This includes all processes
+	 * and private allocations in the kernel. It changes when new buffers
+	 * are allocated, freed, and moved. It cannot be larger than
+	 * heap_size.
+	 */
+	__u64 heap_usage;
+
+	/**
+	 * Theoretical possible max. size of buffer which
+	 * could be allocated in the given heap
+	 */
+	__u64 max_allocation;
 };
 
-struct drm_amdgpu_info_vram_gtt_max {
-	uint64_t vram_max_size;
-	uint64_t vram_cpu_accessible_max_size;
-	uint64_t gtt_max_size;
+struct drm_amdgpu_memory_info {
+	struct drm_amdgpu_heap_info vram;
+	struct drm_amdgpu_heap_info cpu_accessible_vram;
+	struct drm_amdgpu_heap_info gtt;
 };
 
 struct drm_amdgpu_info_firmware {
diff --git a/tests/amdgpu/basic_tests.c b/tests/amdgpu/basic_tests.c
index ce14786..094e9d0 100644
--- a/tests/amdgpu/basic_tests.c
+++ b/tests/amdgpu/basic_tests.c
@@ -404,9 +404,9 @@ static void amdgpu_query_heap_info_test(void)
 
 static void amdgpu_query_memory_info_test(void)
 {
-	struct amdgpu_memory_info mem;
+	struct drm_amdgpu_memory_info mem;
 
-	amdgpu_query_memory_info(device_handle, &mem);
+	amdgpu_query_info(device_handle, AMDGPU_INFO_MEMORY, sizeof(mem), &mem);
 
 	amdgpu_vprintf("\n    VRAM memory info...\n");
 	amdgpu_vprintf("    total: 0x%"PRIx64"\n", mem.vram.total_heap_size);
-- 
2.7.4

