From 4a1ea5bf0ccbf21345f8ffc113e99d695315616f Mon Sep 17 00:00:00 2001
From: Lan Xiao <Lan.Xiao@amd.com>
Date: Thu, 6 Jul 2017 15:57:27 -0400
Subject: [PATCH 2492/2500] amd/amdkfd: follow-up change for signal handling

1. Unreserve BOs even if the wait fails (e.g. interrupted system call).
When the system call is restarted, it will reserve the BO again

2. Create mem->sync object when importing a dmabuf

Change-Id: Iceb68ccec800a6fac062f8b41831f4868235f49e
Signed-off-by: Lan Xiao <Lan.Xiao@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
index 8aa9ca4..63ed3af 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c
@@ -871,11 +871,8 @@ static int unreserve_bo_and_vms(struct bo_vm_reservation_context *ctx,
 {
 	int ret = 0;
 
-	if (wait) {
+	if (wait)
 		ret = amdgpu_sync_wait(ctx->sync, intr);
-		if (ret)
-			return ret;
-	}
 
 	if (ctx->reserved)
 		ttm_eu_backoff_reservation(&ctx->ticket, &ctx->list);
@@ -1225,7 +1222,7 @@ int amdgpu_amdkfd_gpuvm_free_memory_of_gpu(
 				entry, bo_size);
 	}
 
-	ret = unreserve_bo_and_vms(&ctx, false, true);
+	ret = unreserve_bo_and_vms(&ctx, false, false);
 
 	/* Free the sync object */
 	amdgpu_sync_free(&mem->sync);
@@ -1354,7 +1351,7 @@ int amdgpu_amdkfd_gpuvm_map_memory_to_gpu(
 		amdgpu_bo_fence(bo,
 				&kfd_vm->process_info->eviction_fence->base,
 				true);
-	ret = unreserve_bo_and_vms(&ctx, false, true);
+	ret = unreserve_bo_and_vms(&ctx, false, false);
 
 	mutex_unlock(&mem->process_info->lock);
 	mutex_unlock(&mem->lock);
@@ -1863,6 +1860,7 @@ int amdgpu_amdkfd_gpuvm_import_dmabuf(struct kgd_dev *kgd,
 	(*mem)->mapped_to_gpu_memory = 0;
 	(*mem)->process_info = kfd_vm->process_info;
 	add_kgd_mem_to_kfd_bo_list(*mem, kfd_vm->process_info, false);
+	amdgpu_sync_create(&(*mem)->sync);
 
 	return 0;
 }
-- 
2.7.4

