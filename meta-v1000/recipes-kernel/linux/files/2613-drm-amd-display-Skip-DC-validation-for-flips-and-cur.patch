From dce77e5ca762036eb72b413ea7ab86a3d0c78836 Mon Sep 17 00:00:00 2001
From: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Date: Tue, 11 Jul 2017 13:45:57 -0400
Subject: [PATCH 2613/2831] drm/amd/display: Skip DC validation for flips and
 cursor.

Nothing to validate in DC in this case. Skip it.

Change-Id: I2e736e7c9d995a1bd702181912fd62f1e2ab4113
Signed-off-by: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Reviewed-by: Roman Li <Roman.Li@amd.com>
Acked-by: Harry Wentland <Harry.Wentland@amd.com>
---
 .../drm/amd/display/amdgpu_dm/amdgpu_dm_types.c    | 35 +++++++++++-----------
 1 file changed, 18 insertions(+), 17 deletions(-)

diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
index 4d7ea9b..a656a14 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_types.c
@@ -1450,8 +1450,7 @@ int amdgpu_dm_connector_mode_valid(
 
 	if (context) {
 		result = MODE_OK;
-		dc_resource_validate_ctx_destruct(context);
-		dm_free(context);
+		dc_release_validate_context(context);
 	}
 
 	dc_stream_release(stream);
@@ -2748,8 +2747,8 @@ void amdgpu_dm_atomic_commit_tail(
 		}
 	}
 
-	/* DC is optimized not to do anything if 'streams' didn't change. */
-	WARN_ON(!dc_commit_context(dm->dc, dm_state->context));
+	if (dm_state->context)
+		WARN_ON(!dc_commit_context(dm->dc, dm_state->context));
 
 
 	list_for_each_entry(crtc, &dev->mode_config.crtc_list, head) {
@@ -3082,9 +3081,9 @@ int amdgpu_dm_atomic_check(struct drm_device *dev,
 
 	/*
 	 * This bool will be set for true for any modeset/reset
-	 * or surface update which implies non fast surfae update.
+	 * or surface update which implies non fast surface update.
 	 */
-	bool aquire_global_lock = false;
+	bool lock_and_validation_needed = false;
 
 	ret = drm_atomic_helper_check(dev, state);
 
@@ -3172,7 +3171,7 @@ int amdgpu_dm_atomic_check(struct drm_device *dev,
 					new_acrtc_state->stream,
 					crtc);
 
-			aquire_global_lock = true;
+			lock_and_validation_needed = true;
 
 		} else if (modereset_required(crtc_state)) {
 
@@ -3186,7 +3185,7 @@ int amdgpu_dm_atomic_check(struct drm_device *dev,
 				dc_stream_release(new_acrtc_state->stream);
 				new_acrtc_state->stream = NULL;
 
-				aquire_global_lock = true;
+				lock_and_validation_needed = true;
 			}
 		}
 
@@ -3224,7 +3223,7 @@ int amdgpu_dm_atomic_check(struct drm_device *dev,
 		if (!is_scaling_state_different(con_new_state, con_old_state))
 			continue;
 
-		aquire_global_lock = true;
+		lock_and_validation_needed = true;
 	}
 
 	for_each_crtc_in_state(state, crtc, crtc_state, i) {
@@ -3274,17 +3273,11 @@ int amdgpu_dm_atomic_check(struct drm_device *dev,
 						     new_acrtc_state->stream,
 						     surface);
 
-				aquire_global_lock = true;
+				lock_and_validation_needed = true;
 			}
 		}
 	}
 
-	dm_state->context = dc_get_validate_context(dc, set, set_count);
-	if (!dm_state->context) {
-		ret = -EINVAL;
-		goto fail_planes;
-	}
-
 	/*
 	 * For full updates case when
 	 * removing/adding/updating  streams on once CRTC while flipping
@@ -3294,10 +3287,18 @@ int amdgpu_dm_atomic_check(struct drm_device *dev,
 	 * will wait for completion of any outstanding flip using DRMs
 	 * synchronization events.
 	 */
-	if (aquire_global_lock) {
+
+	if (lock_and_validation_needed) {
+
 		ret = do_aquire_global_lock(dev, state);
 		if (ret)
 			goto fail_planes;
+
+		dm_state->context = dc_get_validate_context(dc, set, set_count);
+		if (!dm_state->context) {
+			ret = -EINVAL;
+			goto fail_planes;
+		}
 	}
 
 	/* Must be success */
-- 
2.7.4

