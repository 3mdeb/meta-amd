From 1d85c836f31143076fca7b8240eea3ed6521f14c Mon Sep 17 00:00:00 2001
From: Zeyu Fan <Zeyu.Fan@amd.com>
Date: Fri, 16 Sep 2016 15:47:29 -0400
Subject: [PATCH 1088/1722] drm/amd/dal: Fix Linux compilation warning and
 errors.

Change-Id: I14b82b4621689a0e1b9acdd5c4181a38ae327d43
Signed-off-by: Zeyu Fan <Zeyu.Fan@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc_link.c        |   4 +-
 drivers/gpu/drm/amd/dal/dc/inc/hw/link_encoder.h | 118 +++++++++++------------
 2 files changed, 61 insertions(+), 61 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_link.c b/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
index 0f395ca..6c88757 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_link.c
@@ -1438,11 +1438,11 @@ bool dc_link_setup_psr(const struct dc_link *dc_link,
 	struct dc_context *ctx = link->ctx;
 	struct core_dc *core_dc = DC_TO_CORE(ctx->dc);
 	struct core_stream *core_stream = DC_STREAM_TO_CORE(stream);
-
 	struct psr_dmcu_context psr_context = {0};
+	int i;
 
 	psr_context.controllerId = CONTROLLER_ID_UNDEFINED;
-	int i;
+
 
 	if (dc_link != NULL && dc_link->psr_caps.psr_version > 0) {
 		/* updateSinkPsrDpcdConfig*/
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/hw/link_encoder.h b/drivers/gpu/drm/amd/dal/dc/inc/hw/link_encoder.h
index 403cef8..bc2d7c0 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/hw/link_encoder.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/hw/link_encoder.h
@@ -66,65 +66,6 @@ struct encoder_feature_support {
 	unsigned int max_hdmi_pixel_clock;
 };
 
-struct link_encoder {
-	const struct link_encoder_funcs *funcs;
-	struct adapter_service *adapter_service;
-	int32_t aux_channel_offset;
-	struct dc_context *ctx;
-	struct graphics_object_id id;
-	struct graphics_object_id connector;
-	uint32_t input_signals;
-	uint32_t output_signals;
-	enum engine_id preferred_engine;
-	struct encoder_feature_support features;
-	enum transmitter transmitter;
-	enum hpd_source_id hpd_source;
-};
-
-struct link_encoder_funcs {
-	bool (*validate_output_with_stream)(
-		struct link_encoder *enc, struct pipe_ctx *pipe_ctx);
-	void (*hw_init)(struct link_encoder *enc);
-	void (*setup)(struct link_encoder *enc,
-		enum signal_type signal);
-	void (*enable_tmds_output)(struct link_encoder *enc,
-		enum clock_source_id clock_source,
-		enum dc_color_depth color_depth,
-		bool hdmi,
-		bool dual_link,
-		uint32_t pixel_clock);
-	void (*enable_dp_output)(struct link_encoder *enc,
-		const struct dc_link_settings *link_settings,
-		enum clock_source_id clock_source);
-	void (*enable_dp_mst_output)(struct link_encoder *enc,
-		const struct dc_link_settings *link_settings,
-		enum clock_source_id clock_source);
-	void (*disable_output)(struct link_encoder *link_enc,
-		enum signal_type signal);
-	void (*dp_set_lane_settings)(struct link_encoder *enc,
-		const struct link_training_settings *link_settings);
-	void (*dp_set_phy_pattern)(struct link_encoder *enc,
-		const struct encoder_set_dp_phy_pattern_param *para);
-	void (*update_mst_stream_allocation_table)(
-		struct link_encoder *enc,
-		const struct link_mst_stream_allocation_table *table);
-	void (*set_dmcu_backlight_level)(struct link_encoder *enc,
-		uint32_t level, uint32_t frame_ramp, uint32_t controller_id);
-	void (*set_dmcu_abm_level)(struct link_encoder *enc, uint32_t level);
-	void (*set_dmcu_psr_enable)(struct link_encoder *enc, bool enable);
-	void (*setup_dmcu_psr)(struct link_encoder *enc,
-			struct psr_dmcu_context *psr_context);
-	void (*backlight_control) (struct link_encoder *enc,
-		bool enable);
-	void (*power_control) (struct link_encoder *enc,
-		bool power_up);
-	void (*connect_dig_be_to_fe)(struct link_encoder *enc,
-		enum engine_id engine,
-		bool connect);
-	void (*destroy)(struct link_encoder **enc);
-};
-
-
 enum physical_phy_id {
 	PHYLD_0,
 	PHYLD_1,
@@ -240,4 +181,63 @@ struct psr_dmcu_context {
 	unsigned int frame_delay;
 };
 
+
+struct link_encoder {
+	const struct link_encoder_funcs *funcs;
+	struct adapter_service *adapter_service;
+	int32_t aux_channel_offset;
+	struct dc_context *ctx;
+	struct graphics_object_id id;
+	struct graphics_object_id connector;
+	uint32_t input_signals;
+	uint32_t output_signals;
+	enum engine_id preferred_engine;
+	struct encoder_feature_support features;
+	enum transmitter transmitter;
+	enum hpd_source_id hpd_source;
+};
+
+struct link_encoder_funcs {
+	bool (*validate_output_with_stream)(
+		struct link_encoder *enc, struct pipe_ctx *pipe_ctx);
+	void (*hw_init)(struct link_encoder *enc);
+	void (*setup)(struct link_encoder *enc,
+		enum signal_type signal);
+	void (*enable_tmds_output)(struct link_encoder *enc,
+		enum clock_source_id clock_source,
+		enum dc_color_depth color_depth,
+		bool hdmi,
+		bool dual_link,
+		uint32_t pixel_clock);
+	void (*enable_dp_output)(struct link_encoder *enc,
+		const struct dc_link_settings *link_settings,
+		enum clock_source_id clock_source);
+	void (*enable_dp_mst_output)(struct link_encoder *enc,
+		const struct dc_link_settings *link_settings,
+		enum clock_source_id clock_source);
+	void (*disable_output)(struct link_encoder *link_enc,
+		enum signal_type signal);
+	void (*dp_set_lane_settings)(struct link_encoder *enc,
+		const struct link_training_settings *link_settings);
+	void (*dp_set_phy_pattern)(struct link_encoder *enc,
+		const struct encoder_set_dp_phy_pattern_param *para);
+	void (*update_mst_stream_allocation_table)(
+		struct link_encoder *enc,
+		const struct link_mst_stream_allocation_table *table);
+	void (*set_dmcu_backlight_level)(struct link_encoder *enc,
+		uint32_t level, uint32_t frame_ramp, uint32_t controller_id);
+	void (*set_dmcu_abm_level)(struct link_encoder *enc, uint32_t level);
+	void (*set_dmcu_psr_enable)(struct link_encoder *enc, bool enable);
+	void (*setup_dmcu_psr)(struct link_encoder *enc,
+			struct psr_dmcu_context *psr_context);
+	void (*backlight_control) (struct link_encoder *enc,
+		bool enable);
+	void (*power_control) (struct link_encoder *enc,
+		bool power_up);
+	void (*connect_dig_be_to_fe)(struct link_encoder *enc,
+		enum engine_id engine,
+		bool connect);
+	void (*destroy)(struct link_encoder **enc);
+};
+
 #endif /* LINK_ENCODER_H_ */
-- 
2.7.4

