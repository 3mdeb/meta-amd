From 4107a118b8af3e6b4e6359552c6ae6174926b214 Mon Sep 17 00:00:00 2001
From: Maruthi Srinivas Bayyavarapu <Maruthi.Bayyavarapu@amd.com>
Date: Tue, 30 Jun 2015 17:10:15 +0530
Subject: [PATCH 320/401] drm/amd:  remove workaround for ACP IP runtime resume
 functionality

ACP_PGFSM_RETAIN_REG register was incorrectly accessed during ACP
suspend/resume logic. A workaround was added before, to overcome it.
With this patch wrong logic is corrected and workaround is removed in
amd_acp_resume().

Signed-off-by: Maruthi Bayyavarapu <maruthi.bayyavarapu@amd.com>
Reviewed-by: Murali Krishna Vemuri <murali-krishna.vemuri@amd.com>
Acked-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Sanjay R Mehta <sanju.mehta@amd.com>
---
 drivers/gpu/drm/amd/acp/acp_hw.c | 17 +++--------------
 1 file changed, 3 insertions(+), 14 deletions(-)

diff --git a/drivers/gpu/drm/amd/acp/acp_hw.c b/drivers/gpu/drm/amd/acp/acp_hw.c
index 399fedf..c9fcf3e 100644
--- a/drivers/gpu/drm/amd/acp/acp_hw.c
+++ b/drivers/gpu/drm/amd/acp/acp_hw.c
@@ -706,7 +706,7 @@ static void acp_suspend_tile(struct amd_acp_private *acp_prv, int tile)
 
 	if (val == 0x0) {
 		val = cgs_read_register(acp_prv->cgs_device,
-					mmACP_PGFSM_RETAIN_REG + tile);
+					mmACP_PGFSM_RETAIN_REG);
 		val = val | (1 << tile);
 		cgs_write_register(acp_prv->cgs_device,	mmACP_PGFSM_RETAIN_REG,
 							val);
@@ -723,7 +723,7 @@ static void acp_suspend_tile(struct amd_acp_private *acp_prv, int tile)
 		}
 
 		val = cgs_read_register(acp_prv->cgs_device,
-					mmACP_PGFSM_RETAIN_REG + tile);
+					mmACP_PGFSM_RETAIN_REG);
 
 		val |= ACP_TILE_OFF_RETAIN_REG_MASK;
 		cgs_write_register(acp_prv->cgs_device,	mmACP_PGFSM_RETAIN_REG,
@@ -758,7 +758,7 @@ static void acp_resume_tile(struct amd_acp_private *acp_prv, int tile)
 				break;
 		}
 		val = cgs_read_register(acp_prv->cgs_device,
-					mmACP_PGFSM_RETAIN_REG + tile);
+					mmACP_PGFSM_RETAIN_REG);
 		if (tile == ACP_TILE_P1)
 			val = val & (ACP_TILE_P1_MASK);
 		else if (tile == ACP_TILE_P2)
@@ -766,11 +766,6 @@ static void acp_resume_tile(struct amd_acp_private *acp_prv, int tile)
 
 		cgs_write_register(acp_prv->cgs_device,	mmACP_PGFSM_RETAIN_REG,
 							val);
-		val = cgs_read_register(acp_prv->cgs_device,
-					mmACP_PGFSM_RETAIN_REG + tile);
-		val = val & (ACP_TILE_ON_RETAIN_REG_MASK);
-		cgs_write_register(acp_prv->cgs_device,	mmACP_PGFSM_RETAIN_REG,
-							val);
 	}
 }
 
@@ -1088,12 +1083,6 @@ void amd_acp_resume(struct amd_acp_private *acp_private)
 	acp_resume_tile(acp_private, ACP_TILE_P1);
 	acp_resume_tile(acp_private, ACP_TILE_P2);
 
-	/* TODO: PGFSM registers need not be touched here.
-	 * We do it here, as a workaround */
-	cgs_write_register(acp_private->cgs_device, mmACP_PGFSM_RETAIN_REG,
-							0x30);
-	cgs_write_register(acp_private->cgs_device, mmACP_PGFSM_CONFIG_REG,
-							0x504);
 	acp_init(acp_private);
 
 	/* Disable DSPs which might have been enabled by SMU */
-- 
1.9.1

