From bf871e7fbed0beadaf4ad9a07df62f819acc9429 Mon Sep 17 00:00:00 2001
From: Tony Cheng <tony.cheng@amd.com>
Date: Thu, 22 Sep 2016 18:09:47 -0400
Subject: [PATCH 1113/1722] drm/amd/dal: boot up crash due to fix stack
 corruption

- aux reply overflow input buffer due to uint32_t vs uint8_t mis-match
- also revise register access helper to avoid this issue

Change-Id: I2be7d4612cf47176895a0ac0c5ce4fc114a50678
Signed-off-by: Tony Cheng <tony.cheng@amd.com>
Acked-by: Harry Wentland <harry.wentland@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/dc_helper.c             | 22 ++++++++++++++++++++++
 .../amd/dal/dc/i2caux/dce110/aux_engine_dce110.c   |  5 ++++-
 drivers/gpu/drm/amd/dal/dc/inc/reg_helper.h        | 20 ++++++++++++--------
 3 files changed, 38 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/dc_helper.c b/drivers/gpu/drm/amd/dal/dc/dc_helper.c
index 86b0697..9a50ddf 100644
--- a/drivers/gpu/drm/amd/dal/dc/dc_helper.c
+++ b/drivers/gpu/drm/amd/dal/dc/dc_helper.c
@@ -31,6 +31,27 @@ uint32_t generic_reg_update_ex(const struct dc_context *ctx,
 	 return reg_val;
 }
 
+uint32_t generic_reg_get(const struct dc_context *ctx, uint32_t addr,
+		uint8_t shift, uint32_t mask, uint32_t *field_value)
+{
+	uint32_t reg_val = dm_read_reg(ctx, addr);
+	*field_value = get_reg_field_value_ex(reg_val, mask, shift);
+	return reg_val;
+}
+
+uint32_t generic_reg_get2(const struct dc_context *ctx, uint32_t addr,
+		uint8_t shift1, uint32_t mask1, uint32_t *field_value1,
+		uint8_t shift2, uint32_t mask2, uint32_t *field_value2)
+{
+	uint32_t reg_val = dm_read_reg(ctx, addr);
+	*field_value1 = get_reg_field_value_ex(reg_val, mask1, shift1);
+	*field_value2 = get_reg_field_value_ex(reg_val, mask2, shift2);
+	return reg_val;
+}
+
+/* note:  va version of this is pretty bad idea, since there is a output parameter pass by pointer
+ * compiler won't be able to check for size match and is prone to stack corruption type of bugs
+
 uint32_t generic_reg_get(const struct dc_context *ctx,
 		uint32_t addr, int n, ...)
 {
@@ -57,6 +78,7 @@ uint32_t generic_reg_get(const struct dc_context *ctx,
 
 	 return reg_val;
 }
+*/
 
 uint32_t generic_reg_wait(const struct dc_context *ctx,
 	uint32_t addr, uint32_t shift, uint32_t mask, uint32_t condition_value,
diff --git a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.c b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.c
index 8cc11ad..5df563f 100644
--- a/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.c
+++ b/drivers/gpu/drm/amd/dal/dc/i2caux/dce110/aux_engine_dce110.c
@@ -303,9 +303,12 @@ static void process_channel_reply(
 			--bytes_replied;
 
 			while (i < bytes_replied) {
+				uint32_t aux_sw_data_val;
 
 				REG_GET(AUX_SW_DATA,
-						AUX_SW_DATA, &reply->data[i]);
+						AUX_SW_DATA, &aux_sw_data_val);
+
+				 reply->data[i] = aux_sw_data_val;
 				++i;
 			}
 
diff --git a/drivers/gpu/drm/amd/dal/dc/inc/reg_helper.h b/drivers/gpu/drm/amd/dal/dc/inc/reg_helper.h
index fc75966..22cba69 100644
--- a/drivers/gpu/drm/amd/dal/dc/inc/reg_helper.h
+++ b/drivers/gpu/drm/amd/dal/dc/inc/reg_helper.h
@@ -94,13 +94,14 @@
 
 /* macro to get register fields
  * read given register and fill in field value in output parameter */
-#define REG_GET_N(reg_name, n, ...)	\
-		generic_reg_get(CTX, \
-				REG(reg_name), \
-				n, __VA_ARGS__)
-
 #define REG_GET(reg_name, field, val)	\
-		REG_GET_N(reg_name, 1, FD(reg_name##__##field), val)
+		generic_reg_get(CTX, REG(reg_name), \
+				FD(reg_name##__##field), val)
+
+#define REG_GET_2(reg_name, f1, v1, f2, v2)	\
+		generic_reg_get2(CTX, REG(reg_name), \
+				FD(reg_name##__##f1), v1, \
+				FD(reg_name##__##f2), v2)
 
 /* macro to poll and wait for a register field to read back given value */
 
@@ -206,8 +207,11 @@
 	val = REG_SET(reg, val, f2, v2); \
 	REG_SET(reg, val, f3, v3); }
 
+uint32_t generic_reg_get(const struct dc_context *ctx, uint32_t addr,
+		uint8_t shift, uint32_t mask, uint32_t *field_value);
 
-uint32_t generic_reg_get(const struct dc_context *ctx,
-		uint32_t addr, int n, ...);
+uint32_t generic_reg_get2(const struct dc_context *ctx, uint32_t addr,
+		uint8_t shift1, uint32_t mask1, uint32_t *field_value1,
+		uint8_t shift2, uint32_t mask2, uint32_t *field_value2);
 
 #endif /* DRIVERS_GPU_DRM_AMD_DAL_DEV_DC_INC_REG_HELPER_H_ */
-- 
2.7.4

