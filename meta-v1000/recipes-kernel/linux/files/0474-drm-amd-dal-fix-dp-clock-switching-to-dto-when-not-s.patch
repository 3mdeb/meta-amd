From 7f128f785e73d536d26f03135fd01f33f8229b6a Mon Sep 17 00:00:00 2001
From: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date: Tue, 10 May 2016 15:43:22 -0400
Subject: [PATCH 0474/1722] drm/amd/dal: fix dp clock switching to dto when not
 sharing

Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Acked-by: Jordan Lazare <Jordan.Lazare@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Kalyan Alle <kalyan.alle@amd.com>
---
 drivers/gpu/drm/amd/dal/dc/core/dc_resource.c      | 39 +++++++++++++++++++++-
 .../drm/amd/dal/dc/dce110/dce110_hw_sequencer.c    |  6 +++-
 2 files changed, 43 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c b/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
index c7e3f22..a87a70f 100644
--- a/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
+++ b/drivers/gpu/drm/amd/dal/dc/core/dc_resource.c
@@ -747,6 +747,33 @@ static void copy_pipe_ctx(
 		to_pipe_ctx->surface = surface;
 }
 
+static struct core_stream *find_pll_sharable_stream(
+		const struct core_stream *stream_needs_pll,
+		struct validate_context *context)
+{
+	uint8_t i, j;
+
+	for (i = 0; i < context->target_count; i++) {
+		struct core_target *target = context->targets[i];
+
+		for (j = 0; j < target->public.stream_count; j++) {
+			struct core_stream *stream_has_pll =
+				DC_STREAM_TO_CORE(target->public.streams[j]);
+
+			/* We are looking for non dp, non virtual stream */
+			if (resource_are_streams_clk_sharable(
+						stream_needs_pll, stream_has_pll)
+				&& !dc_is_dp_signal(
+					stream_has_pll->sink->public.sink_signal)
+				&& stream_has_pll->sink->link->public.connector_signal
+							!= SIGNAL_TYPE_VIRTUAL)
+					return stream_has_pll;
+		}
+	}
+
+	return NULL;
+}
+
 static int get_norm_pix_clk(const struct dc_crtc_timing *timing)
 {
 	uint32_t pix_clk = timing->pix_clk_khz;
@@ -817,6 +844,15 @@ enum dc_status resource_map_pool_resources(
 					&context->res_ctx,
 					pipe_ctx->stream_enc);
 
+				/* Switch to dp clock source only if there is
+				 * no non dp stream that shares the same timing
+				 * with the dp stream.
+				 */
+				if (dc_is_dp_signal(pipe_ctx->signal) &&
+					!find_pll_sharable_stream(stream, context))
+					pipe_ctx->clock_source =
+						context->res_ctx.pool.dp_clock_source;
+
 				resource_reference_clock_source(
 					&context->res_ctx,
 					pipe_ctx->clock_source);
@@ -1392,7 +1428,8 @@ bool pipe_need_reprogram(
 	if (pipe_ctx_old->audio != pipe_ctx->audio)
 		return true;
 
-	if (pipe_ctx_old->clock_source != pipe_ctx->clock_source)
+	if (pipe_ctx_old->clock_source != pipe_ctx->clock_source
+			&& pipe_ctx_old->stream != pipe_ctx->stream)
 		return true;
 
 	if (pipe_ctx_old->stream_enc != pipe_ctx->stream_enc)
diff --git a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
index 941929a..47d203d 100644
--- a/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
+++ b/drivers/gpu/drm/amd/dal/dc/dce110/dce110_hw_sequencer.c
@@ -1228,8 +1228,12 @@ static enum dc_status apply_ctx_to_hw(
 		if (pipe_ctx->stream == NULL)
 			continue;
 
-		if (pipe_ctx->stream == pipe_ctx_old->stream)
+		if (pipe_ctx->stream == pipe_ctx_old->stream) {
+			if (pipe_ctx_old->clock_source != pipe_ctx->clock_source)
+				dc->hwss.crtc_switch_to_clk_src(
+						pipe_ctx->clock_source, i);
 			continue;
+		}
 
 		dcb = dal_adapter_service_get_bios_parser(
 				context->res_ctx.pool.adapter_srv);
-- 
2.7.4

