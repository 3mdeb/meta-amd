From 16ed30ba2c34268d045978373a7a9cb0713e6aa2 Mon Sep 17 00:00:00 2001
From: Felix Kuehling <Felix.Kuehling@amd.com>
Date: Tue, 21 Mar 2017 12:03:51 -0400
Subject: [PATCH 2002/2094] drm/amdgpu: Implement invalidate_page notifier for
 HSA

The graphics-version of this notifier doesn't work for HSA.

Change-Id: Ic3968e7e4913fb954605e334f318122ef36dc7e7
Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_mn.c | 32 +++++++++++++++++++++++++++++++-
 1 file changed, 31 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_mn.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_mn.c
index 0268b34..e217dea 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_mn.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_mn.c
@@ -312,6 +312,36 @@ static void amdgpu_mn_invalidate_range_end_hsa(struct mmu_notifier *mn,
 	mutex_unlock(&rmn->lock);
 }
 
+static void amdgpu_mn_invalidate_page_hsa(struct mmu_notifier *mn,
+					  struct mm_struct *mm,
+					  unsigned long address)
+{
+	struct amdgpu_mn *rmn = container_of(mn, struct amdgpu_mn, mn);
+	struct interval_tree_node *it;
+
+	mutex_lock(&rmn->lock);
+
+	it = interval_tree_iter_first(&rmn->objects, address, address);
+	if (it) {
+		struct amdgpu_mn_node *node;
+		struct amdgpu_bo *bo;
+
+		node = container_of(it, struct amdgpu_mn_node, it);
+
+		list_for_each_entry(bo, &node->bos, mn_list) {
+			struct kgd_mem *mem = bo->kfd_bo;
+
+			if (amdgpu_ttm_tt_affect_userptr(bo->tbo.ttm,
+							 address, address)) {
+				amdgpu_amdkfd_evict_userptr(mem, mm);
+				amdgpu_amdkfd_schedule_restore_userptr(mem, 1);
+			}
+		}
+	}
+
+	mutex_unlock(&rmn->lock);
+}
+
 static const struct mmu_notifier_ops amdgpu_mn_ops[] = {
 	[AMDGPU_MN_TYPE_GFX] = {
 		.release = amdgpu_mn_release,
@@ -320,7 +350,7 @@ static const struct mmu_notifier_ops amdgpu_mn_ops[] = {
 	},
 	[AMDGPU_MN_TYPE_HSA] = {
 		.release = amdgpu_mn_release,
-		.invalidate_page = amdgpu_mn_invalidate_page,
+		.invalidate_page = amdgpu_mn_invalidate_page_hsa,
 		.invalidate_range_start = amdgpu_mn_invalidate_range_start_hsa,
 		.invalidate_range_end = amdgpu_mn_invalidate_range_end_hsa,
 	},
-- 
2.7.4

