From 633fb10fc9c4b948e1c0027523f3d3a6753d54f8 Mon Sep 17 00:00:00 2001
From: Rex Zhu <Rex.Zhu@amd.com>
Date: Sat, 27 May 2017 14:25:41 +0800
Subject: [PATCH 2213/2500] drm/amdgpu: use kiq in APU and SRIOV case.

As a temporary workaround for vulkan test hang
and performance drop bug when use kiq on Vi

Change-Id: I52e66c4f6e06b81c6136149e035a57d902f80206
Signed-off-by: Rex Zhu <Rex.Zhu@amd.com>
Reviewed-by: Xiangliang Yu <Xiangliang.Yu@amd.com>
Reviewed-by: Trigger Huang < Trigger.Huang@amd.com>

 Conflicts:
	drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
---
 drivers/gpu/drm/amd/amdgpu/amdgpu.h   |  1 +
 drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c | 10 +++++-----
 2 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu.h b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
index deb6fa0..d155385 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
@@ -1142,6 +1142,7 @@ struct amdgpu_gfx {
 	bool                            in_suspend;
 	/* NGG */
 	struct amdgpu_ngg		ngg;
+	bool                            kiq_en;
 };
 
 int amdgpu_ib_get(struct amdgpu_device *adev, struct amdgpu_vm *vm,
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
index 3c99f64..3e9bafe 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
@@ -2030,7 +2030,7 @@ static int gfx_v8_0_sw_init(void *handle)
 		return r;
 
 	adev->gfx.gfx_current_status = AMDGPU_GFX_NORMAL_MODE;
-
+	adev->gfx.kiq_en = (adev->flags & AMD_IS_APU) || amdgpu_sriov_vf(adev);
 	gfx_v8_0_scratch_init(adev);
 
 	r = gfx_v8_0_init_microcode(adev);
@@ -4955,12 +4955,12 @@ static int gfx_v8_0_kcq_init_queue(struct amdgpu_ring *ring)
 	struct vi_mqd *mqd = ring->mqd_ptr;
 	int mqd_idx = ring - &adev->gfx.compute_ring[0];
 
-	if (!(adev->flags & AMD_IS_APU) ||
+	if (!adev->gfx.kiq_en ||
 		(!adev->gfx.in_reset && !adev->gfx.in_suspend)) {
 		mutex_lock(&adev->srbm_mutex);
 		vi_srbm_select(adev, ring->me, ring->pipe, ring->queue, 0);
 		gfx_v8_0_mqd_init(ring);
-		if (!(adev->flags & AMD_IS_APU)) {
+		if (!adev->gfx.kiq_en) {
 			gfx_v8_0_deactivate_hqd(adev, 1);
 			gfx_v8_0_mqd_commit(ring);
 		}
@@ -5034,7 +5034,7 @@ static int gfx_v8_0_kiq_resume(struct amdgpu_device *adev)
 
 	gfx_v8_0_set_mec_doorbell_range(adev);
 
-	if (adev->flags & AMD_IS_APU) {
+	if (adev->gfx.kiq_en) {
 		r = gfx_v8_0_kiq_kcq_enable(adev);
 		if (r)
 			goto done;
@@ -5154,7 +5154,7 @@ static int gfx_v8_0_hw_fini(void *handle)
 		pr_debug("For SRIOV client, shouldn't do anything.\n");
 		return 0;
 	}
-	if (adev->flags & AMD_IS_APU)
+	if (adev->gfx.kiq_en)
 		gfx_v8_0_kiq_kcq_disable(adev);
 	gfx_v8_0_cp_enable(adev, false);
 	gfx_v8_0_rlc_stop(adev);
-- 
2.7.4

